<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">add_child_ids.h</field>
    <field name="url">add__child__ids_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_child_ids.h</field>
    <field name="url">add__child__ids_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">AddChildIDs Adder</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_child_ids.h</field>
    <field name="url">add__child__ids_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">Str child_name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_child_ids.h</field>
    <field name="url">add__child__ids_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">Str key_for_parent_id compute_impl Json data DataKeys datakeys AddChildIDs ElPtr elem Str child_name_ Str key_for_parent_id_ AddChildIDs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_child_positions.h</field>
    <field name="url">add__child__positions_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_child_positions.h</field>
    <field name="url">add__child__positions_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">AddChildPositions Adder</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_child_positions.h</field>
    <field name="url">add__child__positions_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">Str child_name compute_impl Json data DataKeys datakeys AddChildPositions ElPtr elem Str child_name_ AddChildPositions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_com_position.h</field>
    <field name="url">add__com__position_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_com_position.h</field>
    <field name="url">add__com__position_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">AddCoMPosition Adder compute_with_weights Json data ElPtr el_atoms compute_without_weights Json data ElPtr el_atoms compute_impl Json data DataKeys datakeys AddCoMPosition ElPtr elem AddCoMPosition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_gyration_radius.h</field>
    <field name="url">add__gyration__radius_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_gyration_radius.h</field>
    <field name="url">add__gyration__radius_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">AddGyrationRadius Adder EnShThis</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_gyration_radius.h</field>
    <field name="url">add__gyration__radius_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">add_squared</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_gyration_radius.h</field>
    <field name="url">add__gyration__radius_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">add_sqrted compute_impl Json data DataKeys datakeys Adder::Adder AddGyrationRadius ShPtr&lt;AddGyrationRadius&gt; with_squared add_squared_ ShPtr&lt;AddGyrationRadius&gt; without_sqrted without_sqrted_</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_inertia_moment.h</field>
    <field name="url">add__inertia__moment_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_inertia_moment.h</field>
    <field name="url">add__inertia__moment_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">AddInertiaMoment Adder compute_with_weights Json data ElPtr el_atoms compute_without_weights Json data ElPtr el_atoms compute_impl Json data DataKeys datakeys AddInertiaMoment ElPtr elem AddInertiaMoment</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_map.h</field>
    <field name="url">add__map_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_map.h</field>
    <field name="url">add__map_8h_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">AddMap Adder EnShThis</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_map.h</field>
    <field name="url">add__map_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">do_overwrite</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_map.h</field>
    <field name="url">add__map_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">Str key_ref</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_map.h</field>
    <field name="url">add__map_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">Str key_new</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_map.h</field>
    <field name="url">add__map_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">Map&lt;Json,Json&gt; mapping compute_impl Json data DataKeys datakeys AddMap Str key_ref_ Str key_new_ Map&lt;Json,Json&gt; mapping_ AddMap ShPtr&lt;AddMap&gt; overwrite do_overwrite_</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_molecular_orientation.h</field>
    <field name="url">add__molecular__orientation_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_molecular_orientation.h</field>
    <field name="url">add__molecular__orientation_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">AddMolecularOrientation Adder compute_impl Json data DataKeys datakeys Adder::Adder AddMolecularOrientation</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_rename.h</field>
    <field name="url">add__rename_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_rename.h</field>
    <field name="url">add__rename_8h_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">AddRename Adder EnShThis</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_rename.h</field>
    <field name="url">add__rename_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">do_overwrite</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_rename.h</field>
    <field name="url">add__rename_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Str key_old</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_rename.h</field>
    <field name="url">add__rename_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">Str key_new compute_impl Json data DataKeys datakeys AddRename Str key_old_ Str key_new_ AddRename ShPtr&lt;AddRename&gt; overwrite do_overwrite_</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_special_bonds.h</field>
    <field name="url">add__special__bonds_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_special_bonds.h</field>
    <field name="url">add__special__bonds_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">AddSpecialBonds Adder</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_special_bonds.h</field>
    <field name="url">add__special__bonds_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">Map&lt;int,Vec&lt;Vec&lt;int&gt; mol_type_to_sbondses_in_mol compute_impl Json data DataKeys datakeys AddSpecialBonds ElPtr el_mols Vec Vec&lt;int&gt; scheme AddSpecialBonds ElPtr el_mols Map Vec Vec&lt;int&gt; schemes AddSpecialBonds</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_wrapped_position.h</field>
    <field name="url">add__wrapped__position_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">add_wrapped_position.h</field>
    <field name="url">add__wrapped__position_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">AddWrappedPosition Adder compute_impl Json data DataKeys datakeys AddWrappedPosition ElPtr elem AddWrappedPosition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adder.h</field>
    <field name="url">adder_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">adder.h</field>
    <field name="url">adder_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">Adder Updater Updater::Updater Adder compute Json data DataKeys datakeys dataid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">ArrayXXi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00022</field>
    <field name="keywords"></field>
    <field name="text">Eigen::Array&lt;int, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor&gt; ArrayXXd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">Eigen::Array&lt;double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor&gt; ArrayXi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">Eigen::Array&lt;int, Eigen::Dynamic, 1&gt; ArrayXd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">Eigen::Array&lt;double, Eigen::Dynamic, 1&gt; RowArrayXi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">Eigen::Array&lt;int, 1, Eigen::Dynamic&gt; RowArrayXd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">Eigen::Array&lt;double, 1, Eigen::Dynamic&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">MatrixXi Eigen::MatrixXi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">MatrixXd Eigen::MatrixXd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">VectorXi Eigen::VectorXi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">VectorXd Eigen::VectorXd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">RowVectorXi Eigen::RowVectorXi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">RowVectorXd Eigen::RowVectorXd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">Matrix3i Eigen::Matrix3i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">Matrix3d Eigen::Matrix3d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">Vector3i Eigen::Vector3i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text">Vector3d Eigen::Vector3d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">RowVector3i Eigen::RowVector3i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">RowVector3d Eigen::RowVector3d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">json.h</field>
    <field name="url">json_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">json.h</field>
    <field name="url">json_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">Json nlohmann::json</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pybind.h</field>
    <field name="url">alias_2pybind_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">py pybind11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pybind.h</field>
    <field name="url">pybind_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">PYBIND11_MODULE _ppap4lmp m pybind_element m pybind_updater m pybind_adder m pybind_filter m pybind_invoker m pybind_processor m pybind_utils m pybind_starter m pybind_add_map m pybind_add_rename m pybind_fil_comparison m pybind_fil_set m pybind_inv_omp m pybind_pro_data m pybind_sta_beads m pybind_sta_copy m pybind_sta_custom m pybind_sta_dump m pybind_sta_molecules m pybind_add_child_ids m pybind_add_child_positions m pybind_add_com_position m pybind_add_gyration_radius m pybind_add_inertia_moment m pybind_add_molecular_orientation m pybind_add_special_bonds m pybind_add_wrapped_position m pybind_pro_thickness_profile m pybind_pro_value_array m pybind_sta_dump_atoms m pybind_sta_dump_box m pybind_pro_distance_in_molecule m pybind_pro_mean_square_displacement m pybind_pro_radial_distribution_function m pybind_pro_radial_distribution_function_with_deformation m</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pybind_eigen.h</field>
    <field name="url">pybind__eigen_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pybind_json.h</field>
    <field name="url">pybind__json_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">py::object json_dumps py::module::import attr py::object json_loads py::module::import attr pybind11 detail</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pybind_json.h</field>
    <field name="url">pybind__json_8h_source.html#l00020</field>
    <field name="keywords"></field>
    <field name="text">type_caster Json PYBIND11_TYPE_CASTER Json _</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pybind_json.h</field>
    <field name="url">pybind__json_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">load handle src value Json::parse py::cast&lt;std::string&gt; json_dumps py::cast&lt;object&gt; src</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pybind_json.h</field>
    <field name="url">pybind__json_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">handle cast Json src return_value_policy handle json_loads src dump release</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pybind_std.h</field>
    <field name="url">pybind__std_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std.h</field>
    <field name="url">std_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std.h</field>
    <field name="url">std_8h_source.html#l00016</field>
    <field name="keywords"></field>
    <field name="text">ShPtr std::shared_ptr&lt;T&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std.h</field>
    <field name="url">std_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">EnShThis std::enable_shared_from_this&lt;T&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std.h</field>
    <field name="url">std_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">Str std::string</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std.h</field>
    <field name="url">std_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">Vec std::vector&lt;T&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std.h</field>
    <field name="url">std_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">Map std::unordered_map&lt;T,U&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">std.h</field>
    <field name="url">std_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">Set std::unordered_set&lt;T&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">data_keys.h</field>
    <field name="url">data__keys_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">data_keys.h</field>
    <field name="url">data__keys_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">DataKeys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">data_keys.h</field>
    <field name="url">data__keys_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">Set&lt;Str&gt; _keys DataKeys DataKeys clear Set&lt;Str&gt; keys add Json key_ Json key_ required Json key_ optional Json key_ Set&lt;Str&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">Element Generator EnShThis</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">instance_count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">n_remain</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">dataid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">Json data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">DataKeys datakeys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">omp_lock_t omp_lock increment_remain decrement_remain update_data ShPtr&lt;Updater&gt; upd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">Generator Element Element ShPtr&lt;Element&gt; get_element Json name ShPtr&lt;Generator&gt; get_generator Json name ShPtr&lt;Element&gt; append_updater ShPtr&lt;Updater&gt; upd Json get_data Json get_data Json key_ DataKeys get_keys array1d T array Str key array2d T array Vec&lt;Str&gt; keys required Json key_ optional Json key_ Json get_data_py Set&lt;Str&gt; get_keys_py ArrayXi get_1d_int_py Str key ArrayXd get_1d_float_py Str key ArrayXXi get_2d_int_py py::args args ArrayXXd get_2d_float_py py::args args init_for_python</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">element.h</field>
    <field name="url">element_8h_source.html#l00310</field>
    <field name="keywords"></field>
    <field name="text">ElPtr ShPtr&lt;Element&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gen_dict.h</field>
    <field name="url">gen__dict_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gen_dict.h</field>
    <field name="url">gen__dict_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">GenDict Generator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gen_dict.h</field>
    <field name="url">gen__dict_8h_source.html#l00026</field>
    <field name="keywords"></field>
    <field name="text">Map&lt;Str,ShPtr&lt;Generator&gt; generator_dict GenDict Map Str ShPtr&lt;Generator&gt; generator_dict_ GenDict ElPtr get_element Json name ShPtr&lt;Generator&gt; get_generator Json name Set&lt;Str&gt; get_keys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gen_list.h</field>
    <field name="url">gen__list_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gen_list.h</field>
    <field name="url">gen__list_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">GenList Generator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">gen_list.h</field>
    <field name="url">gen__list_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">Vec&lt;ShPtr&lt;Generator&gt; generator_list GenList Vec ShPtr&lt;Generator&gt; generator_list_ GenList ElPtr get_element Json name ShPtr&lt;Generator&gt; get_generator Json name get_length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">generator.h</field>
    <field name="url">generator_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Element Updater</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">generator.h</field>
    <field name="url">generator_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">UpdatePair std::pair&lt;ShPtr&lt;Element&gt; ShPtr&lt;Updater&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">generator.h</field>
    <field name="url">generator_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Generator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">generator.h</field>
    <field name="url">generator_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">Vec&lt;UpdatePair&gt; update_chain merge_update_chain Vec&lt;UpdatePair&gt; new_chain Generator Generator ShPtr&lt;Element&gt; get_element Json name ShPtr&lt;Generator&gt; get_generator Json name appoint hello goodbye Vec&lt;UpdatePair&gt; get_update_chain</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">generators.h</field>
    <field name="url">generators_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">updater.h</field>
    <field name="url">updater_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">updater.h</field>
    <field name="url">updater_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">Updater</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">updater.h</field>
    <field name="url">updater_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">Set&lt;int&gt; dataid_blacklist</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">updater.h</field>
    <field name="url">updater_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">omp_lock_t omp_lock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">updater.h</field>
    <field name="url">updater_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">ShPtr&lt;Generator&gt; ext_generator compute_impl Json DataKeys check_blacklist dataid Updater Updater compute Json DataKeys remove_from_blacklist dataid ShPtr&lt;Generator&gt; get_ext_generator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fil_comparison.h</field>
    <field name="url">fil__comparison_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fil_comparison.h</field>
    <field name="url">fil__comparison_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">CompareFunc std::function&lt;bool(const Json &amp;)&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fil_comparison.h</field>
    <field name="url">fil__comparison_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">FilComparison Filter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fil_comparison.h</field>
    <field name="url">fil__comparison_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">Vec&lt;std::tuple&lt;Str,Str,Json&gt; comparisons CompareFunc make_lambda Str oper Json rval Vec&lt;std::pair&lt;Str,CompareFunc&gt; convert_to_funcs Vec std::tuple&lt;Str,Str,Json&gt; comps compute_impl Json data DataKeys datakeys FilComparison std::tuple&lt;Str,Str,Json&gt; comparison_ FilComparison Vec std::tuple&lt;Str,Str,Json&gt; comparisons_ FilComparison</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fil_set.h</field>
    <field name="url">fil__set_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fil_set.h</field>
    <field name="url">fil__set_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">FilSet Filter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fil_set.h</field>
    <field name="url">fil__set_8h_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Map&lt;Str,Set&lt;Json&gt; value_sets compute_impl Json data DataKeys datakeys FilSet Map Str Set&lt;Json&gt; value_sets_ FilSet</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">filter.h</field>
    <field name="url">filter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">filter.h</field>
    <field name="url">filter_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Filter Updater Updater::Updater Filter compute Json data DataKeys datakeys dataid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inv_omp.h</field>
    <field name="url">inv__omp_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inv_omp.h</field>
    <field name="url">inv__omp_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">InvOMP Invoker execute_impl Invoker::Invoker InvOMP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">invoker.h</field>
    <field name="url">invoker_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">invoker.h</field>
    <field name="url">invoker_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">Invoker</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">invoker.h</field>
    <field name="url">invoker_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">Vec&lt;ShPtr&lt;Processor&gt; processors execute_impl Invoker ShPtr&lt;Processor&gt; proc Invoker Vec ShPtr&lt;Processor&gt; procs Invoker execute</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_data.h</field>
    <field name="url">pro__data_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_data.h</field>
    <field name="url">pro__data_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">ProData Processor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_data.h</field>
    <field name="url">pro__data_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">Vec&lt;Str&gt; selected_keys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_data.h</field>
    <field name="url">pro__data_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">Vec&lt;Json&gt; results run_impl index ProData ElPtr elem ProData Vec&lt;ElPtr&gt; elems ProData prepare select py::args args Vec&lt;Json&gt; get_results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_distance_in_molecule.h</field>
    <field name="url">pro__distance__in__molecule_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_distance_in_molecule.h</field>
    <field name="url">pro__distance__in__molecule_8h_source.html#l00014</field>
    <field name="keywords"></field>
    <field name="text">ProDistanceInMolecule Processor index1_in_mol index2_in_mol target_moltype Vec&lt;RowArrayXd&gt; distance2_traj ArrayXXd distance2_array run_impl index ProDistanceInMolecule ElPtr mols ElPtr atoms ProDistanceInMolecule Vec std::pair&lt;ElPtr,ElPtr&gt; pairs ProDistanceInMolecule prepare finish set_indices index1_in_mol_ index2_in_mol_ set_moltype target_moltype_ ArrayXXd get_distance_array ArrayXXd get_distance2_array</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_mean_square_displacement.h</field>
    <field name="url">pro__mean__square__displacement_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_mean_square_displacement.h</field>
    <field name="url">pro__mean__square__displacement_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">ProMeanSquareDisplacement Processor drift_correction Vec&lt;bool&gt; dimension ArrayXXd initial_rs Vec&lt;RowArrayXd&gt; displacement2_traj ArrayXXd displacement2_array ArrayXd mean_square_displacement run_impl index ProMeanSquareDisplacement Vec&lt;ElPtr&gt; elems ProMeanSquareDisplacement prepare finish set_dimension include_x include_y include_z without_drift_correction without_drift_correction_ ArrayXXd get_displacement2_array ArrayXd get_mean_square_displacement</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_radial_distribution_function.h</field>
    <field name="url">pro__radial__distribution__function_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_radial_distribution_function.h</field>
    <field name="url">pro__radial__distribution__function_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">ProRadialDistributionFunction Processor n_bins bin_width bin_from_r beyond_half ArrayXd rdf Vec&lt;ArrayXd&gt; rdf_traj Vec&lt;int&gt; number_traj Vec&lt;double&gt; volume_traj Vec&lt;ArrayXi&gt; counts_traj run_impl index ProRadialDistributionFunction ElPtr targets ElPtr box ProRadialDistributionFunction Vec std::pair&lt;ElPtr,ElPtr&gt; pairs ProRadialDistributionFunction prepare finish set_bin bin_width_ n_bins_ bin_from_r_to_r_plus_dr bin_from_r_ beyond_half_box_length beyond_half_ ArrayXd get_r_axis ArrayXd get_rdf Vec&lt;ArrayXd&gt; get_rdf_traj</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_radial_distribution_function_with_deformation.h</field>
    <field name="url">pro__radial__distribution__function__with__deformation_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">ProRDF ProRadialDistributionFunction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_radial_distribution_function_with_deformation.h</field>
    <field name="url">pro__radial__distribution__function__with__deformation_8h_source.html#l00017</field>
    <field name="keywords"></field>
    <field name="text">ProRadialDistributionFunctionWithDeformation ProRDF margin ArrayXd Rg2_array ArrayXd Rg2_para_array ArrayXd Rg2_perp_array Vec&lt;ArrayXd&gt; Rg2_array_traj Vec&lt;ArrayXd&gt; Rg2_para_array_traj Vec&lt;ArrayXd&gt; Rg2_perp_array_traj Vec&lt;ArrayXi&gt; raw_counts_traj Vec&lt;ArrayXd&gt; Rg2_sum_traj Vec&lt;ArrayXd&gt; Rg2_para_sum_traj Vec&lt;ArrayXd&gt; Rg2_perp_sum_traj run_impl index ProRDF::ProRDF ProRadialDistributionFunctionWithDeformation prepare finish set_margin margin_ Map&lt;Str,ArrayXd&gt; get_gyration_radius Map&lt;Str,Vec&lt;ArrayXd&gt; get_gyration_radius_traj Map&lt;Str,ArrayXd&gt; get_squared_gyration_radius Map&lt;Str,Vec&lt;ArrayXd&gt; get_squared_gyration_radius_traj ProRDFWD ProRadialDistributionFunctionWithDeformation</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_thickness_profile.h</field>
    <field name="url">pro__thickness__profile_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_thickness_profile.h</field>
    <field name="url">pro__thickness__profile_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">ProThicknessProfile Processor nx ny shift_half offset Vec&lt;Json&gt; conditions Vec&lt;ArrayXXd&gt; profiles run_impl index ProThicknessProfile ElPtr atoms ElPtr box ProThicknessProfile Vec std::pair&lt;ElPtr,ElPtr&gt; pairs ProThicknessProfile prepare set_grid nx_ ny_ set_offset offset_ shift_half_delta shift_half_ Vec&lt;Json&gt; get_conditions Vec&lt;ArrayXXd&gt; get_profiles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_value_array.h</field>
    <field name="url">pro__value__array_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pro_value_array.h</field>
    <field name="url">pro__value__array_8h_source.html#l00013</field>
    <field name="keywords"></field>
    <field name="text">ProValueArray Processor Vec&lt;Str&gt; selected_keys Map&lt;Str,ArrayXXd&gt; results Vec&lt;Map&lt;Str,RowArrayXd&gt; results_trajs run_impl index ProValueArray ElPtr elem ProValueArray Vec&lt;ElPtr&gt; elems ProValueArray prepare finish select py::args args Map&lt;Str,ArrayXXd&gt; get_results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">processor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">processor_8h_source.html#l00018</field>
    <field name="keywords"></field>
    <field name="text">Processor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">processor_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">i_generator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">processor_8h_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">n_generators</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">processor_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Vec&lt;ShPtr&lt;Generator&gt; generators run_impl index register_generator ShPtr&lt;GEN&gt; gen register_generators Vec ShPtr&lt;GEN&gt; gens Processor Processor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">processor_8h_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text">prepare</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">processor_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">finish run startup</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_child_ids.h</field>
    <field name="url">py__add__child__ids_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_child_ids.h</field>
    <field name="url">py__add__child__ids_8h_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_child_ids py::module m py::class_&lt;AddChildIDs,PyUpdater&lt;AddChildIDs&gt; Adder Updater ShPtr&lt;AddChildIDs&gt; m def py::init&lt;const ElPtr &amp;,const Str &amp;,const Str &amp;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_child_positions.h</field>
    <field name="url">py__add__child__positions_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_child_positions.h</field>
    <field name="url">py__add__child__positions_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_child_positions py::module m py::class_&lt;AddChildPositions,PyUpdater&lt;AddChildPositions&gt; Adder Updater ShPtr&lt;AddChildPositions&gt; m def py::init&lt;const ElPtr &amp;,const Str &amp;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_com_position.h</field>
    <field name="url">py__add__com__position_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_com_position.h</field>
    <field name="url">py__add__com__position_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_com_position py::module m py::class_&lt;AddCoMPosition,PyUpdater&lt;AddCoMPosition&gt; Adder Updater ShPtr&lt;AddCoMPosition&gt; m def py::init&lt;const ElPtr &amp;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_gyration_radius.h</field>
    <field name="url">py__add__gyration__radius_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_gyration_radius.h</field>
    <field name="url">py__add__gyration__radius_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_gyration_radius py::module m py::class_&lt;AddGyrationRadius,PyUpdater&lt;AddGyrationRadius&gt; Adder Updater ShPtr&lt;AddGyrationRadius&gt; m def py::init&lt;&gt; def AddGyrationRadius::with_squared py::arg def AddGyrationRadius::without_sqrted py::arg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_inertia_moment.h</field>
    <field name="url">py__add__inertia__moment_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_inertia_moment.h</field>
    <field name="url">py__add__inertia__moment_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_inertia_moment py::module m py::class_&lt;AddInertiaMoment,PyUpdater&lt;AddInertiaMoment&gt; Adder Updater ShPtr&lt;AddInertiaMoment&gt; m def py::init&lt;const ElPtr &amp;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_map.h</field>
    <field name="url">py__add__map_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_map.h</field>
    <field name="url">py__add__map_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_map py::module m py::class_&lt;AddMap,PyUpdater&lt;AddMap&gt; Adder Updater ShPtr&lt;AddMap&gt; m def py::init Str Str Map&lt;Json,Json&gt; def AddMap::overwrite py::arg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_molecular_orientation.h</field>
    <field name="url">py__add__molecular__orientation_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_molecular_orientation.h</field>
    <field name="url">py__add__molecular__orientation_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_molecular_orientation py::module m py::class_&lt;AddMolecularOrientation,PyUpdater&lt;AddMolecularOrientation&gt; Adder Updater ShPtr&lt;AddMolecularOrientation&gt; m def py::init&lt;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_rename.h</field>
    <field name="url">py__add__rename_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_rename.h</field>
    <field name="url">py__add__rename_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_rename py::module m py::class_&lt;AddRename,PyUpdater&lt;AddRename&gt; Adder Updater ShPtr&lt;AddRename&gt; m def py::init&lt;const Str &amp;,const Str &amp;&gt; def AddRename::overwrite py::arg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_special_bonds.h</field>
    <field name="url">py__add__special__bonds_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_special_bonds.h</field>
    <field name="url">py__add__special__bonds_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_special_bonds py::module m py::class_&lt;AddSpecialBonds,PyUpdater&lt;AddSpecialBonds&gt; Adder Updater ShPtr&lt;AddSpecialBonds&gt; m def py::init ElPtr Vec Vec&lt;int&gt; def py::init ElPtr Map Vec Vec&lt;int&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_wrapped_position.h</field>
    <field name="url">py__add__wrapped__position_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_add_wrapped_position.h</field>
    <field name="url">py__add__wrapped__position_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">pybind_add_wrapped_position py::module m py::class_&lt;AddWrappedPosition,PyUpdater&lt;AddWrappedPosition&gt; Adder Updater ShPtr&lt;AddWrappedPosition&gt; m def py::init&lt;const ElPtr &amp;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_adder.h</field>
    <field name="url">py__adder_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_adder.h</field>
    <field name="url">py__adder_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">pybind_adder py::module m py::class_ Adder PyUpdater&lt;Adder&gt; Updater ShPtr&lt;Adder&gt; m def py::init&lt;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_fil_comparison.h</field>
    <field name="url">py__fil__comparison_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_fil_comparison.h</field>
    <field name="url">py__fil__comparison_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">pybind_fil_comparison py::module m py::class_&lt;FilComparison,PyUpdater&lt;FilComparison&gt; Filter Updater ShPtr&lt;FilComparison&gt; m def py::init std::tuple&lt;Str,Str,Json&gt; def py::init Vec std::tuple&lt;Str,Str,Json&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_fil_set.h</field>
    <field name="url">py__fil__set_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_fil_set.h</field>
    <field name="url">py__fil__set_8h_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">pybind_fil_set py::module m py::class_&lt;FilSet,PyUpdater&lt;FilSet&gt; Filter Updater ShPtr&lt;FilSet&gt; m def py::init Map Str Set&lt;Json&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_filter.h</field>
    <field name="url">py__filter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_filter.h</field>
    <field name="url">py__filter_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">pybind_filter py::module m py::class_ Filter PyUpdater&lt;Filter&gt; Updater ShPtr&lt;Filter&gt; m def py::init&lt;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_inv_omp.h</field>
    <field name="url">py__inv__omp_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_inv_omp.h</field>
    <field name="url">py__inv__omp_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">pybind_inv_omp py::module m py::class_&lt;InvOMP,PyInvoker&lt;InvOMP&gt; Invoker ShPtr&lt;InvOMP&gt; m def py::init ShPtr&lt;Processor&gt; def py::init Vec ShPtr&lt;Processor&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_invoker.h</field>
    <field name="url">py__invoker_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_invoker.h</field>
    <field name="url">py__invoker_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">PyInvoker INVO execute_impl PYBIND11_OVERLOAD_PURE INVO execute_impl INVO::INVO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_invoker.h</field>
    <field name="url">py__invoker_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">pybind_invoker py::module m py::class_ Invoker PyInvoker&lt;&gt; ShPtr&lt;Invoker&gt; m def py::init ShPtr&lt;Processor&gt; def py::init Vec ShPtr&lt;Processor&gt; def Invoker::execute</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_pro_data.h</field>
    <field name="url">py__pro__data_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_pro_data.h</field>
    <field name="url">py__pro__data_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">pybind_pro_data py::module m py::class_&lt;ProData,PyProcessor&lt;ProData&gt; Processor ShPtr&lt;ProData&gt; m def py::init&lt;const ElPtr &amp;&gt; def py::init Vec&lt;ElPtr&gt; def ProData::select def ProData::get_results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_pro_distance_in_molecule.h</field>
    <field name="url">py__pro__distance__in__molecule_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">pybind_pro_distance_in_molecule py::module m py::class_&lt;ProDistanceInMolecule,PyProcessor&lt;ProDistanceInMolecule&gt; Processor ShPtr&lt;ProDistanceInMolecule&gt; m def py::init&lt;const ElPtr &amp;,const ElPtr &amp;&gt; def py::init Vec std::pair&lt;ElPtr,ElPtr&gt; def ProDistanceInMolecule::set_indices def ProDistanceInMolecule::set_moltype def ProDistanceInMolecule::get_distance_array def ProDistanceInMolecule::get_distance2_array</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_pro_mean_square_displacement.h</field>
    <field name="url">py__pro__mean__square__displacement_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">pybind_pro_mean_square_displacement py::module m py::class_&lt;ProMeanSquareDisplacement,PyProcessor&lt;ProMeanSquareDisplacement&gt; Processor ShPtr&lt;ProMeanSquareDisplacement&gt; m def py::init Vec&lt;ElPtr&gt; def ProMeanSquareDisplacement::set_dimension def ProMeanSquareDisplacement::without_drift_correction py::arg def ProMeanSquareDisplacement::get_displacement2_array def ProMeanSquareDisplacement::get_mean_square_displacement</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_pro_radial_distribution_function.h</field>
    <field name="url">py__pro__radial__distribution__function_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">pybind_pro_radial_distribution_function py::module m py::class_&lt;ProRadialDistributionFunction,PyProcessor&lt;ProRadialDistributionFunction&gt; Processor ShPtr&lt;ProRadialDistributionFunction&gt; m def py::init&lt;const ElPtr &amp;,const ElPtr &amp;&gt; def py::init Vec std::pair&lt;ElPtr,ElPtr&gt; def ProRadialDistributionFunction::set_bin def ProRadialDistributionFunction::bin_from_r_to_r_plus_dr py::arg def ProRadialDistributionFunction::beyond_half_box_length py::arg def ProRadialDistributionFunction::get_r_axis def ProRadialDistributionFunction::get_rdf def ProRadialDistributionFunction::get_rdf_traj</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_pro_radial_distribution_function_with_deformation.h</field>
    <field name="url">py__pro__radial__distribution__function__with__deformation_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">pybind_pro_radial_distribution_function_with_deformation py::module m py::class_&lt;ProRadialDistributionFunctionWithDeformation,PyProcessor&lt;ProRDFWD&gt; ProRDF Processor ShPtr&lt;ProRDFWD&gt; m def py::init&lt;const ElPtr &amp;,const ElPtr &amp;&gt; def py::init Vec std::pair&lt;ElPtr,ElPtr&gt; def ProRDFWD::set_margin def ProRDFWD::get_gyration_radius def ProRDFWD::get_gyration_radius_traj def ProRDFWD::get_squared_gyration_radius def ProRDFWD::get_squared_gyration_radius_traj</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_pro_thickness_profile.h</field>
    <field name="url">py__pro__thickness__profile_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">pybind_pro_thickness_profile py::module m py::class_&lt;ProThicknessProfile,PyProcessor&lt;ProThicknessProfile&gt; Processor ShPtr&lt;ProThicknessProfile&gt; m def py::init&lt;const ElPtr &amp;,const ElPtr &amp;&gt; def py::init Vec std::pair&lt;ElPtr,ElPtr&gt; def ProThicknessProfile::set_grid def ProThicknessProfile::set_offset def ProThicknessProfile::shift_half_delta py::arg def ProThicknessProfile::get_conditions def ProThicknessProfile::get_profiles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_pro_value_array.h</field>
    <field name="url">py__pro__value__array_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">pybind_pro_value_array py::module m py::class_&lt;ProValueArray,PyProcessor&lt;ProValueArray&gt; Processor ShPtr&lt;ProValueArray&gt; m def py::init&lt;const ElPtr &amp;&gt; def py::init Vec&lt;ElPtr&gt; def ProValueArray::select def ProValueArray::get_results</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_processor.h</field>
    <field name="url">py__processor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_processor.h</field>
    <field name="url">py__processor_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">PyProcessor PRO run_impl index PYBIND11_OVERLOAD_PURE PRO run_impl index PRO::PRO prepare PYBIND11_OVERLOAD PRO prepare finish PYBIND11_OVERLOAD PRO finish run PYBIND11_OVERLOAD PRO run</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_processor.h</field>
    <field name="url">py__processor_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">pybind_processor py::module m py::class_ Processor PyProcessor&lt;&gt; ShPtr&lt;Processor&gt; m def py::init&lt;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_element.h</field>
    <field name="url">py__element_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_element.h</field>
    <field name="url">py__element_8h_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">PyElement Element Element::Element</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_element.h</field>
    <field name="url">py__element_8h_source.html#l00196</field>
    <field name="keywords"></field>
    <field name="text">ElPtr get_element Json name PYBIND11_OVERLOAD ElPtr Element get_element name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_element.h</field>
    <field name="url">py__element_8h_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text">ShPtr&lt;Generator&gt; get_generator Json name PYBIND11_OVERLOAD ShPtr&lt;Generator&gt; Element get_generator name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_element.h</field>
    <field name="url">py__element_8h_source.html#l00220</field>
    <field name="keywords"></field>
    <field name="text">pybind_element py::module m m def ShPtr&lt;Updater&gt; upd ElPtr Element append_updater upd py::class_ Element PyElement ElPtr m def py::init&lt;&gt; def Element::append_updater def Element::get_data_py def Element::get_keys_py def Element::get_1d_int_py def Element::get_1d_float_py def Element::get_2d_int_py def Element::get_2d_float_py</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_updater.h</field>
    <field name="url">py__updater_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_updater.h</field>
    <field name="url">py__updater_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">PyUpdater UPD compute_impl Json data DataKeys datakeys PYBIND11_OVERLOAD_PURE UPD compute_impl data datakeys UPD::UPD compute Json data DataKeys datakeys dataid PYBIND11_OVERLOAD_PURE UPD compute data datakeys dataid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_updater.h</field>
    <field name="url">py__updater_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">pybind_updater py::module m py::class_ Updater PyUpdater&lt;&gt; ShPtr&lt;Updater&gt; m def py::init&lt;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_utils.h</field>
    <field name="url">py__utils_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_utils.h</field>
    <field name="url">py__utils_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">pybind_utils py::module m m def utils::log_switch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_beads.h</field>
    <field name="url">py__sta__beads_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_beads.h</field>
    <field name="url">py__sta__beads_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text">pybind_sta_beads py::module m py::class_&lt;StaBeads,PyUpdater&lt;StaBeads&gt; Starter Updater ShPtr&lt;StaBeads&gt; m def py::init ElPtr Vec&lt;Json&gt; def py::init ElPtr Map Vec&lt;Json&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_copy.h</field>
    <field name="url">py__sta__copy_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_copy.h</field>
    <field name="url">py__sta__copy_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">pybind_sta_copy py::module m py::class_&lt;StaCopy,PyUpdater&lt;StaCopy&gt; Starter Updater ShPtr&lt;StaCopy&gt; m def py::init&lt;const ElPtr &amp;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_custom.h</field>
    <field name="url">py__sta__custom_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_custom.h</field>
    <field name="url">py__sta__custom_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">pybind_sta_custom py::module m py::class_&lt;StaCustom,PyUpdater&lt;StaCustom&gt; Starter Updater ShPtr&lt;StaCustom&gt; m def py::init&lt;const Json &amp;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_dump.h</field>
    <field name="url">py__sta__dump_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_dump.h</field>
    <field name="url">py__sta__dump_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">pybind_sta_dump py::module m py::class_ StaDump PyUpdater&lt;StaDump&gt; Starter Updater ShPtr&lt;StaDump&gt; m def py::init&lt;const Str &amp;, int&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_dump_atoms.h</field>
    <field name="url">py__sta__dump__atoms_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_dump_atoms.h</field>
    <field name="url">py__sta__dump__atoms_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">pybind_sta_dump_atoms py::module m py::class_&lt;StaDumpAtoms,PyUpdater&lt;StaDumpAtoms&gt; StaDump Starter Updater ShPtr&lt;StaDumpAtoms&gt; m def py::init&lt;const Str &amp;, const int&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_dump_box.h</field>
    <field name="url">py__sta__dump__box_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_dump_box.h</field>
    <field name="url">py__sta__dump__box_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">pybind_sta_dump_box py::module m py::class_&lt;StaDumpBox,PyUpdater&lt;StaDumpBox&gt; StaDump Starter Updater ShPtr&lt;StaDumpBox&gt; m def py::init&lt;const Str &amp;, int&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_molecules.h</field>
    <field name="url">py__sta__molecules_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_sta_molecules.h</field>
    <field name="url">py__sta__molecules_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">pybind_sta_molecules py::module m py::class_&lt;StaMolecules,PyUpdater&lt;StaMolecules&gt; Starter Updater ShPtr&lt;StaMolecules&gt; m def py::init&lt;const ElPtr &amp;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_starter.h</field>
    <field name="url">py__starter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">py_starter.h</field>
    <field name="url">py__starter_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">pybind_starter py::module m py::class_ Starter PyUpdater&lt;Starter&gt; Updater ShPtr&lt;Starter&gt; m def py::init&lt;&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_beads.h</field>
    <field name="url">sta__beads_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_beads.h</field>
    <field name="url">sta__beads_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">StaBeads Starter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_beads.h</field>
    <field name="url">sta__beads_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">Map&lt;int,Vec&lt;Json&gt; mol_type_to_abst_beads std::pair&lt;bool,bool&gt; check_mol_type_to_abst_beads compute_impl Json data DataKeys datakeys StaBeads ElPtr el_mols Vec&lt;Json&gt; scheme StaBeads ElPtr el_mols Map Vec&lt;Json&gt; schemes StaBeads</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_copy.h</field>
    <field name="url">sta__copy_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_copy.h</field>
    <field name="url">sta__copy_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">StaCopy Starter compute_impl Json data DataKeys datakeys StaCopy ElPtr elem StaCopy compute Json data DataKeys datakeys dataid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_custom.h</field>
    <field name="url">sta__custom_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_custom.h</field>
    <field name="url">sta__custom_8h_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">StaCustom Starter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_custom.h</field>
    <field name="url">sta__custom_8h_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">Json json compute_impl Json data DataKeys datakeys StaCustom Json json_ StaCustom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_dump.h</field>
    <field name="url">sta__dump_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_dump.h</field>
    <field name="url">sta__dump_8h_source.html#l00021</field>
    <field name="keywords"></field>
    <field name="text">StaDump Starter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_dump.h</field>
    <field name="url">sta__dump_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">timestep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_dump.h</field>
    <field name="url">sta__dump_8h_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Str filepath StaDump Str filepath_ timestep_ StaDump</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_dump_atoms.h</field>
    <field name="url">sta__dump__atoms_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_dump_atoms.h</field>
    <field name="url">sta__dump__atoms_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">StaDumpAtoms StaDump Vec&lt;bool&gt; make_is_int_vector Str line compute_impl Json data DataKeys datakeys StaDump::StaDump StaDumpAtoms</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_dump_box.h</field>
    <field name="url">sta__dump__box_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_dump_box.h</field>
    <field name="url">sta__dump__box_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">StaDumpBox StaDump compute_impl Json data DataKeys datakeys StaDump::StaDump StaDumpBox</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_molecules.h</field>
    <field name="url">sta__molecules_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sta_molecules.h</field>
    <field name="url">sta__molecules_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">StaMolecules Starter compute_impl Json data DataKeys datakeys StaMolecules ElPtr el_atoms StaMolecules</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">starter.h</field>
    <field name="url">starter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">starter.h</field>
    <field name="url">starter_8h_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">Starter Updater sort_by_id Json data Updater::Updater Starter compute Json data DataKeys datakeys dataid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">join.h</field>
    <field name="url">join_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">join.h</field>
    <field name="url">join_8h_source.html#l00014</field>
    <field name="keywords"></field>
    <field name="text">utils Str join Vec&lt;Str&gt; strs Str jointer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">map_to_index.h</field>
    <field name="url">map__to__index_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">utils Map&lt;Json,int&gt; map_to_index Json data Str key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">message.h</field>
    <field name="url">message_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">utils _message Str msg log Str msg warning Str msg log_switch input</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pyargs_to_vec.h</field>
    <field name="url">pyargs__to__vec_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">utils pyargs_to_vec py::args args Vec&lt;T&gt; vec</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">runtime_error.h</field>
    <field name="url">runtime__error_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">utils runtime_error Str msg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">split.h</field>
    <field name="url">split_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">utils Vec&lt;Str&gt; split Str str delim</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_child_ids.cpp</field>
    <field name="url">add__child__ids_8cpp.html</field>
    <field name="keywords">add_child_ids.cpp</field>
    <field name="text">This file has an implementation of AddChildIDs class which is a subclass of Adder class Takayuki Kobayashi 2018/08/19</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_child_ids.h</field>
    <field name="url">add__child__ids_8h.html</field>
    <field name="keywords">add_child_ids.h</field>
    <field name="text">This file has a definition of AddChildIDs class which is a subclass of Adder class Takayuki Kobayashi 2018/08/19</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_child_positions.cpp</field>
    <field name="url">add__child__positions_8cpp.html</field>
    <field name="keywords">add_child_positions.cpp</field>
    <field name="text">This file has an implementation of AddChildPositions class which is a subclass of Adder class Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_child_positions.h</field>
    <field name="url">add__child__positions_8h.html</field>
    <field name="keywords">add_child_positions.h</field>
    <field name="text">This file has a definition of AddChildPositions class which is a subclass of Adder class Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_com_position.cpp</field>
    <field name="url">add__com__position_8cpp.html</field>
    <field name="keywords">add_com_position.cpp</field>
    <field name="text">This file has an implementation of AddCoMPosition class which is a subclass of Adder class Takayuki Kobayashi 2018/07/13</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_com_position.h</field>
    <field name="url">add__com__position_8h.html</field>
    <field name="keywords">add_com_position.h</field>
    <field name="text">This file has a definition of AddCoMPosition class which is a subclass of Adder class Takayuki Kobayashi 2018/07/13</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_gyration_radius.cpp</field>
    <field name="url">add__gyration__radius_8cpp.html</field>
    <field name="keywords">add_gyration_radius.cpp</field>
    <field name="text">This file has an implementation of AddGyrationRadius class which is a subclass of Adder class Takayuki Kobayashi 2018/07/15</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_gyration_radius.h</field>
    <field name="url">add__gyration__radius_8h.html</field>
    <field name="keywords">add_gyration_radius.h</field>
    <field name="text">This file has a definition of AddGyrationRadius class which is a subclass of Adder class Takayuki Kobayashi 2018/07/15</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_inertia_moment.cpp</field>
    <field name="url">add__inertia__moment_8cpp.html</field>
    <field name="keywords">add_inertia_moment.cpp</field>
    <field name="text">This file has an implementation of the AddInertiaMoment class which is a subclass of Adder class Takayuki Kobayashi 2018/07/15</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_inertia_moment.h</field>
    <field name="url">add__inertia__moment_8h.html</field>
    <field name="keywords">add_inertia_moment.h</field>
    <field name="text">This file has a definition of AddInertiaMoment class which is a subclass of Adder class Takayuki Kobayashi 2018/07/15</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_map.cpp</field>
    <field name="url">add__map_8cpp.html</field>
    <field name="keywords">add_map.cpp</field>
    <field name="text">This file has an implementation of AddMap class which is a subclass of Adder class Takayuki Kobayashi 2018/06/24</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_map.h</field>
    <field name="url">add__map_8h.html</field>
    <field name="keywords">add_map.h</field>
    <field name="text">This file has a definition of AddMap class which is a subclass of Adder class Takayuki Kobayashi 2018/06/26</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_molecular_orientation.cpp</field>
    <field name="url">add__molecular__orientation_8cpp.html</field>
    <field name="keywords">add_molecular_orientation.cpp</field>
    <field name="text">This file has an implementation of AddMolecularOrientation class which is a subclass of Adder class Takayuki Kobayashi 2018/07/16</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_molecular_orientation.h</field>
    <field name="url">add__molecular__orientation_8h.html</field>
    <field name="keywords">add_molecular_orientation.h</field>
    <field name="text">This file has a definition of AddMolecularOrientation class which is a subclass of Adder class Takayuki Kobayashi 2018/07/16</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_rename.cpp</field>
    <field name="url">add__rename_8cpp.html</field>
    <field name="keywords">add_rename.cpp</field>
    <field name="text">This file has an implementation of AddRename class which is a subclass of Adder class Takayuki Kobayashi 2018/08/17</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_rename.h</field>
    <field name="url">add__rename_8h.html</field>
    <field name="keywords">add_rename.h</field>
    <field name="text">This file has a definition of AddRename class which is a subclass of Adder class Takayuki Kobayashi 2018/08/17</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_special_bonds.cpp</field>
    <field name="url">add__special__bonds_8cpp.html</field>
    <field name="keywords">add_special_bonds.cpp</field>
    <field name="text">This file has an implementation of AddSpecialBonds class which is a subclass of Adder class Takayuki Kobayashi 2018/08/19</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_special_bonds.h</field>
    <field name="url">add__special__bonds_8h.html</field>
    <field name="keywords">add_special_bonds.h</field>
    <field name="text">This file has a definition of AddSpecialBonds class which is a subclass of Adder class Takayuki Kobayashi 2018/08/19</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_wrapped_position.cpp</field>
    <field name="url">add__wrapped__position_8cpp.html</field>
    <field name="keywords">add_wrapped_position.cpp</field>
    <field name="text">This file has an implementation of AddWrappedPosition class which is a subclass of Adder class Takayuki Kobayashi 2018/07/07</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">add_wrapped_position.h</field>
    <field name="url">add__wrapped__position_8h.html</field>
    <field name="keywords">add_wrapped_position.h</field>
    <field name="text">This file has a definition of AddWrappedPosition class which is a subclass of Adder class Takayuki Kobayashi 2018/07/07</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adder.cpp</field>
    <field name="url">adder_8cpp.html</field>
    <field name="keywords">adder.cpp</field>
    <field name="text">This file has an implementation of Adder class which is a subclass of Updater class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">adder.h</field>
    <field name="url">adder_8h.html</field>
    <field name="keywords">adder.h</field>
    <field name="text">This file has a definition of Adder class which is a subclass of Updater class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">eigen.h</field>
    <field name="url">eigen_8h.html</field>
    <field name="keywords">eigen.h</field>
    <field name="text">This file includes Eigen and defines some aliases for the Eigen-Vector Matrix and Array Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ArrayXXi</field>
    <field name="url">eigen_8h.html#a187c541a6423e8b13a361d39799a2bac</field>
    <field name="keywords">ArrayXXi</field>
    <field name="text">ArrayXXi is an alias for a two-dimensional array of Eigen where the values are integer Although ArrayXXi is column major by default in this program row major is preferable so that the array can be passed to Python as Numpy-Array which is row major without confusing</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ArrayXXd</field>
    <field name="url">eigen_8h.html#a90de8f6d3f6c2c0ff3a6465ec14e26f9</field>
    <field name="keywords">ArrayXXd</field>
    <field name="text">ArrayXXd is an alias for a two-dimensional array of Eigen where the values are double Although ArrayXXd is column major by default in this program row major is preferable so that the array can be passed to Python as Numpy-Array which is row major without confusing</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ArrayXi</field>
    <field name="url">eigen_8h.html#a03ac9ed9384a1ffbfcf6faf664de4c98</field>
    <field name="keywords">ArrayXi</field>
    <field name="text">ArrayXi is an alias for a column array of Eigen where the values are integer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ArrayXd</field>
    <field name="url">eigen_8h.html#aaf26741e06a5b5d4eb28cb1cc53ba220</field>
    <field name="keywords">ArrayXd</field>
    <field name="text">ArrayXd is an alias for a column array of Eigen where the values are double</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">RowArrayXi</field>
    <field name="url">eigen_8h.html#a4876d7a9fae00369a2ea3926288d1743</field>
    <field name="keywords">RowArrayXi</field>
    <field name="text">RowArrayXi is an alias for a row array of Eigen where the values are integer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">RowArrayXd</field>
    <field name="url">eigen_8h.html#a2ae603ffa373fd61ce314f3ec601e858</field>
    <field name="keywords">RowArrayXd</field>
    <field name="text">RowArrayXd is an alias for a row array of Eigen where the values are double</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">MatrixXi</field>
    <field name="url">eigen_8h.html#acf39db01a64e4feccc89ce074342818a</field>
    <field name="keywords">MatrixXi</field>
    <field name="text">MatrixXi is an alias for an arbitrary square matrix of Eigen where the values are integer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">MatrixXd</field>
    <field name="url">eigen_8h.html#a4e53847462ee658f66d8d9f1a727b5f8</field>
    <field name="keywords">MatrixXd</field>
    <field name="text">MatrixXd is an alias for an arbitrary square matrix of Eigen where the values are double</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">VectorXi</field>
    <field name="url">eigen_8h.html#a0293fb6104a830012ebef652752a559d</field>
    <field name="keywords">VectorXi</field>
    <field name="text">VectorXi is an alias for a column vector of arbitrary length of Eigen where the values are integer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">VectorXd</field>
    <field name="url">eigen_8h.html#a73c1535cdfdd552cd04f7676926858b6</field>
    <field name="keywords">VectorXd</field>
    <field name="text">VectorXd is an alias for a column vector of arbitrary length of Eigen where the values are double</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">RowVectorXi</field>
    <field name="url">eigen_8h.html#a8e2b75bedb25a06aa253e6692a1d27fa</field>
    <field name="keywords">RowVectorXi</field>
    <field name="text">RowVectorXi is an alias for a row vector of arbitrary length of Eigen where the values are integer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">RowVectorXd</field>
    <field name="url">eigen_8h.html#a2d2e56a3e8fa99f9ed76529b3d385a27</field>
    <field name="keywords">RowVectorXd</field>
    <field name="text">RowVectorXd is an alias for a row vector of arbitrary length of Eigen where the values are double</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Matrix3i</field>
    <field name="url">eigen_8h.html#ac926713a8739933416c057d835f9edef</field>
    <field name="keywords">Matrix3i</field>
    <field name="text">Matrix3i is an alias for a 3x3 matrix of Eigen where the values are integer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Matrix3d</field>
    <field name="url">eigen_8h.html#a75664db7262f8acb5c097c819170e66e</field>
    <field name="keywords">Matrix3d</field>
    <field name="text">Matrix3d is an alias for a 3x3 matrix of Eigen where the values are double</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Vector3i</field>
    <field name="url">eigen_8h.html#a1c45ab85f57da94b7fb79a3e2e9cc526</field>
    <field name="keywords">Vector3i</field>
    <field name="text">Vector3i is an alias for a 3-elements column vector of Eigen where the values are integer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Vector3d</field>
    <field name="url">eigen_8h.html#a72422f584ada1c0faf04a2ba748f9b14</field>
    <field name="keywords">Vector3d</field>
    <field name="text">Vector3d is an alias for a 3-elements column vector of Eigen where the values are double</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">RowVector3i</field>
    <field name="url">eigen_8h.html#a60d0d8815f3a921d9305ec6f2e124997</field>
    <field name="keywords">RowVector3i</field>
    <field name="text">RowVector3i is an alias for a 3-elements row vector of Eigen where the values are integer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">RowVector3d</field>
    <field name="url">eigen_8h.html#a3f795fff7442e68a6adcd937ef1972a3</field>
    <field name="keywords">RowVector3d</field>
    <field name="text">RowVector3d is an alias for a 3-elements row vector of Eigen where the values are double</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">json.h</field>
    <field name="url">json_8h.html</field>
    <field name="keywords">json.h</field>
    <field name="text">This file includes nlohmann/json and defines an alias for a JSON class Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Json</field>
    <field name="url">json_8h.html#af13a1979f9e8f62c101433fac6511cc6</field>
    <field name="keywords">Json</field>
    <field name="text">Json is an alias for a JSON class For more details please see the repository and documents of nlohmann/json</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pybind.h</field>
    <field name="url">alias_2pybind_8h.html</field>
    <field name="keywords">pybind.h</field>
    <field name="text">This file includes pybind11 and defines an alias for the namespace pybind11 Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pybind.h</field>
    <field name="url">pybind_8h.html</field>
    <field name="keywords">pybind.h</field>
    <field name="text">This file includes all the header files containing definitions of functions to bind C++ and Python Takayuki Kobayashi 2018/09/08 This file is not included in the GitHub repository It will be created at installation time To find the way how this file is written please see setup.py in the root directory of this project</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pybind_eigen.h</field>
    <field name="url">pybind__eigen_8h.html</field>
    <field name="keywords">pybind_eigen.h</field>
    <field name="text">To bind Eigen to Python and Numpy pybind11 needs to include an additional header Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pybind_json.h</field>
    <field name="url">pybind__json_8h.html</field>
    <field name="keywords">pybind_json.h</field>
    <field name="text">To bind Json to Python a custom type caster of pybind11 is required Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pybind_std.h</field>
    <field name="url">pybind__std_8h.html</field>
    <field name="keywords">pybind_std.h</field>
    <field name="text">To bind C++ Standard Template Library to Python pybind11 needs to include an additional header Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">std.h</field>
    <field name="url">std_8h.html</field>
    <field name="keywords">std.h</field>
    <field name="text">This file includes a part of C++ Standard Template Library and defines aliases for them Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ShPtr</field>
    <field name="url">std_8h.html#acdc005cb83114401121fe9980eaf1395</field>
    <field name="keywords">ShPtr</field>
    <field name="text">ShPtr is an alias for shared pointer</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">EnShThis</field>
    <field name="url">std_8h.html#a7f19b9462968832a5e38e8e4286a5afa</field>
    <field name="keywords">EnShThis</field>
    <field name="text">EnShThis is an alias for a class which can create shared pointer of itself by calling shared_from_this()</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Str</field>
    <field name="url">std_8h.html#a376207d46bd161163b9089964e8fbed6</field>
    <field name="keywords">Str</field>
    <field name="text">Str is an alias for string</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Vec</field>
    <field name="url">std_8h.html#a1b01c504448c96cd2191a5184dd31acf</field>
    <field name="keywords">Vec</field>
    <field name="text">Vec is an alias for vector same as list in Python</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Map</field>
    <field name="url">std_8h.html#a4b049b8ec1536df1dcbc6d01556630b6</field>
    <field name="keywords">Map</field>
    <field name="text">Map is an alias for unordered map same as dict in Python Searching an item from unordered map takes shorter time than doing the same thing with ordered map std::map</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">Set</field>
    <field name="url">std_8h.html#a09b917d71c14ba8ae2d896e2af192307</field>
    <field name="keywords">Set</field>
    <field name="text">Set is an alias for unordered set same as set in Python Searching an element from unordered set takes shorter time than doing the same thing with ordered set std::set</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">data_keys.cpp</field>
    <field name="url">data__keys_8cpp.html</field>
    <field name="keywords">data_keys.cpp</field>
    <field name="text">This file has an implementation of DataKeys class which is owned by Element class Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">data_keys.h</field>
    <field name="url">data__keys_8h.html</field>
    <field name="keywords">data_keys.h</field>
    <field name="text">This file has a definition of DataKeys class which is owned by Element class Takayuki Kobayashi 2018/09/09</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">element.cpp</field>
    <field name="url">element_8cpp.html</field>
    <field name="keywords">element.cpp</field>
    <field name="text">This file has an implementation of Element class which is one of the cores of this program Takayuki Kobayashi 2018/07/01</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">element.h</field>
    <field name="url">element_8h.html</field>
    <field name="keywords">element.h</field>
    <field name="text">This file has a definition of Element class which is one of the cores of this program Takayuki Kobayashi 2018/07/01</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">ElPtr</field>
    <field name="url">element_8h.html#ae7eed80b2509599cc9301188e51f57d8</field>
    <field name="keywords">ElPtr</field>
    <field name="text">ElPtr is an alias for a shared pointer of Element class</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gen_dict.cpp</field>
    <field name="url">gen__dict_8cpp.html</field>
    <field name="keywords">gen_dict.cpp</field>
    <field name="text">This file has an implementation of GenDict class Takayuki Kobayashi 2018/07/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gen_dict.h</field>
    <field name="url">gen__dict_8h.html</field>
    <field name="keywords">gen_dict.h</field>
    <field name="text">This file has a definition of GenDict class Takayuki Kobayashi 2018/07/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gen_list.cpp</field>
    <field name="url">gen__list_8cpp.html</field>
    <field name="keywords">gen_list.cpp</field>
    <field name="text">This file has an implementation of GenList class Takayuki Kobayashi 2018/07/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">gen_list.h</field>
    <field name="url">gen__list_8h.html</field>
    <field name="keywords">gen_list.h</field>
    <field name="text">This file has a definition of GenList class Takayuki Kobayashi 2018/07/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">generator.cpp</field>
    <field name="url">generator_8cpp.html</field>
    <field name="keywords">generator.cpp</field>
    <field name="text">This file has an implementation of the Generator class which is one of the cores of this program Takayuki Kobayashi 2018/06/21</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">generator.h</field>
    <field name="url">generator_8h.html</field>
    <field name="keywords">generator.h</field>
    <field name="text">This file has a definition of Generator class which is one of the cores of this program Takayuki Kobayashi 2018/06/21</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">UpdatePair</field>
    <field name="url">generator_8h.html#aa743f1a2c3b5394843428e88fd4dda26</field>
    <field name="keywords">UpdatePair</field>
    <field name="text">UpdatePair is a pair of shared pointer of Element class and Updater class The Updater object updates Element::data of the Element object in other words the Element object calls Element::update_data taking the Updater object as its argument An UpdatePair object is created only in Element::append_updater</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">generators.h</field>
    <field name="url">generators_8h.html</field>
    <field name="keywords">generators.h</field>
    <field name="text">This file includes all the header files of subclasses of Generator class Takayuki Kobayashi 2018/09/08 For convenience only</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">updater.cpp</field>
    <field name="url">updater_8cpp.html</field>
    <field name="keywords">updater.cpp</field>
    <field name="text">This file has an implementation of Updater class which is one of the cores of this program Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">updater.h</field>
    <field name="url">updater_8h.html</field>
    <field name="keywords">updater.h</field>
    <field name="text">This file has a definition of Updater class which is one of the cores of this program Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">fil_comparison.cpp</field>
    <field name="url">fil__comparison_8cpp.html</field>
    <field name="keywords">fil_comparison.cpp</field>
    <field name="text">This file has an implementation of FilComparison class which is a subclass of Filter class Takayuki Kobayashi 2018/07/02</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">fil_comparison.h</field>
    <field name="url">fil__comparison_8h.html</field>
    <field name="keywords">fil_comparison.h</field>
    <field name="text">This file has a definition of FilComparison class which is a subclass of Filter class Takayuki Kobayashi 2018/07/02</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">CompareFunc</field>
    <field name="url">fil__comparison_8h.html#ab9615306db45e5984ebc1b3090f30303</field>
    <field name="keywords">CompareFunc</field>
    <field name="text">CompareFunc is an alias for a function taking a Json and returning a boolean</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">fil_set.cpp</field>
    <field name="url">fil__set_8cpp.html</field>
    <field name="keywords">fil_set.cpp</field>
    <field name="text">This file has an implementation of FilSet class which is a subclass of Filter class Takayuki Kobayashi 2018/07/01</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">fil_set.h</field>
    <field name="url">fil__set_8h.html</field>
    <field name="keywords">fil_set.h</field>
    <field name="text">This file has a definition of FilSet class which is a subclass of Filter class Takayuki Kobayashi 2018/07/01</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">filter.cpp</field>
    <field name="url">filter_8cpp.html</field>
    <field name="keywords">filter.cpp</field>
    <field name="text">This file has an implementation of Filter class which is a subclass of Updater class Takayuki Kobayashi 2018/06/30</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">filter.h</field>
    <field name="url">filter_8h.html</field>
    <field name="keywords">filter.h</field>
    <field name="text">This file has a definition of Filter class which is a subclass of Updater class Takayuki Kobayashi 2018/06/30</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">inv_omp.cpp</field>
    <field name="url">inv__omp_8cpp.html</field>
    <field name="keywords">inv_omp.cpp</field>
    <field name="text">This file has an implementation of InvOMP class which is a subclass of Invoker class Takayuki Kobayashi 2018/06/23</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">inv_omp.h</field>
    <field name="url">inv__omp_8h.html</field>
    <field name="keywords">inv_omp.h</field>
    <field name="text">This file has a definition of InvOMP class which is a subclass of Invoker class Takayuki Kobayashi 2018/06/23</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">invoker.cpp</field>
    <field name="url">invoker_8cpp.html</field>
    <field name="keywords">invoker.cpp</field>
    <field name="text">This file has an implementation of Invoker class which executes one or more analysis Takayuki Kobayashi 2018/06/23</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">invoker.h</field>
    <field name="url">invoker_8h.html</field>
    <field name="keywords">invoker.h</field>
    <field name="text">This file has a definition of Invoker class which executes one or more analysis Takayuki Kobayashi 2018/06/23</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">ppap4lmp.cpp</field>
    <field name="url">ppap4lmp_8cpp.html</field>
    <field name="keywords">ppap4lmp.cpp</field>
    <field name="text">This file has no implementation only includes a header file to bind C++ and Python Takayuki Kobayashi 2018/09/08</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pro_data.cpp</field>
    <field name="url">pro__data_8cpp.html</field>
    <field name="keywords">pro_data.cpp</field>
    <field name="text">This file has an implementation of ProData class which is a subclass of Processor class Takayuki Kobayashi 2018/06/22</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pro_data.h</field>
    <field name="url">pro__data_8h.html</field>
    <field name="keywords">pro_data.h</field>
    <field name="text">This file has a definition of ProData class which is a subclass of Processor class Takayuki Kobayashi 2018/06/22</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">processor.cpp</field>
    <field name="url">processor_8cpp.html</field>
    <field name="keywords">processor.cpp</field>
    <field name="text">This file has an implementation of Processor class where an analysis process is programmed Takayuki Kobayashi 2018/06/22</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">processor.h</field>
    <field name="url">processor_8h.html</field>
    <field name="keywords">processor.h</field>
    <field name="text">This file has a definition of Processor class where an analysis process is programmed Takayuki Kobayashi 2018/06/22</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_child_ids.h</field>
    <field name="url">py__add__child__ids_8h.html</field>
    <field name="keywords">py_add_child_ids.h</field>
    <field name="text">This file is for binding AddChildIDs class to Python Takayuki Kobayashi 2018/08/19 Python-side constructor of AddChildIDs Name C++-side Description Argument Return AddChildIDs AddChildIDs::AddChildIDs Constructor of AddChildIDs class elem Child object such as an Element object containing data for atoms child_name_ A string for naming the above child object key_for_parent_id_ A string for key in the child object corresponding to id property of parent object such as an Element object containing data for molecules Constructed AddChildIDs object which is appended to a parent object such as an Element object containing data for molecules Usage example of the constructor to add bead-ids property to an Element object for molecules</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_child_ids</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__child__ids_8h.html#ad2342686c1a05d6776d6eb852c0c961f</field>
    <field name="keywords">pybind_add_child_ids</field>
    <field name="text">Function to bind AddChildIDs class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_child_positions.h</field>
    <field name="url">py__add__child__positions_8h.html</field>
    <field name="keywords">py_add_child_positions.h</field>
    <field name="text">This file is for binding AddChildPositions class to Python Takayuki Kobayashi 2018/09/03 Python-side constructor of AddChildPositions Name C++-side Description Argument Return AddChildPositions AddChildPositions::AddChildPositions Constructor of AddChildPositions class elem Child object such as an Element object containing data for atoms child_name_ A string for naming the above child object Constructed AddChildPositions object which is appended to a parent object such as an Element object containing data for molecules</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_child_positions</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__child__positions_8h.html#abd9328696dac6921c4fa8a51cd3f060d</field>
    <field name="keywords">pybind_add_child_positions</field>
    <field name="text">Function to bind AddChildPositions class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_com_position.h</field>
    <field name="url">py__add__com__position_8h.html</field>
    <field name="keywords">py_add_com_position.h</field>
    <field name="text">This file is for binding AddCoMPosition class to Python Takayuki Kobayashi 2018/07/13 Python-side constructor of AddCoMPosition Name C++-side Description Argument Return AddCoMPosition AddCoMPosition::AddCoMPosition Constructor of AddCoMPosition class elem Child object such as an Element object containing data for atoms Constructed AddCoMPosition object which is appended to a parent object such as an Element object containing data for molecules Usage example of the constructor to add xu yu and zu property to an Element object for molecules</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_com_position</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__com__position_8h.html#a75c8f3fc63ecd4f6e3e2e4bc808e3bc9</field>
    <field name="keywords">pybind_add_com_position</field>
    <field name="text">Function to bind AddCoMPosition class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_gyration_radius.h</field>
    <field name="url">py__add__gyration__radius_8h.html</field>
    <field name="keywords">py_add_gyration_radius.h</field>
    <field name="text">This file is for binding AddGyrationRadius class to Python Takayuki Kobayashi 2018/07/15 Python-side constructor of AddGyrationRadius Name C++-side Description Argument Return AddGyrationRadius AddGyrationRadius::Updater Constructor of AddGyrationRadius class None Constructed AddGyrationRadius object which is appended to an Element object such as one containing data for molecules Python-side methods of AddGyrationRadius Name C++-side Description Argument Return with_squared AddGyrationRadius::with_squared Enable to compute square of gyration radius Note that an average gyration radius should be computed by square rooting an average of squared gyration radius not averaging the gyration radius itself add_squared_ A boolean whether squared gyration radius is computed or not No argument leads to enabling the computation This AddGyrationRadius object without_sqrted AddGyrationRadius::without_sqrted Disable to compute gyration radius skipping root-squaring without_sqrted_ A boolean whether computing gyration radius is skipped or not No argument leads to skipping the computation This AddGyrationRadius object Usage example of the constructor and method to add square of gyration radius to an Element object for molecules</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_gyration_radius</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__gyration__radius_8h.html#a048d51f0746bbe667f9e7ecb7f1431c7</field>
    <field name="keywords">pybind_add_gyration_radius</field>
    <field name="text">Function to bind AddGyrationRadius class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_inertia_moment.h</field>
    <field name="url">py__add__inertia__moment_8h.html</field>
    <field name="keywords">py_add_inertia_moment.h</field>
    <field name="text">This file is for binding AddInertiaMoment class to Python Takayuki Kobayashi 2018/07/15 Python-side constructor of AddInertiaMoment Name C++-side Description Argument Return AddInertiaMoment AddInertiaMoment::AddInertiaMoment Constructor of AddInertiaMoment class elem Child object such as an Element object containing data for atoms Constructed AddInertiaMoment object which is appended to a parent object such as an Element object containing data for molecules Usage example of the constructor to add elements of inertia moment to an Element object for molecules</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_inertia_moment</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__inertia__moment_8h.html#a334e39646a637f43d7b60a510ea3773b</field>
    <field name="keywords">pybind_add_inertia_moment</field>
    <field name="text">Function to bind AddInertiaMoment class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_map.h</field>
    <field name="url">py__add__map_8h.html</field>
    <field name="keywords">py_add_map.h</field>
    <field name="text">This file is for binding AddMap class to Python Takayuki Kobayashi 2018/06/26 Python-side constructor of AddMap Name C++-side Description Argument Return AddMap AddMap::AddMap Constructor of AddMap class key_ref_ A string key for a reference property an existing property to be used as domain of mapping see also the 3rd argument key_new_ A string key for a new property to be added Values of the new property are determined by mapping see also the 3rd argument mapping_ Dictionary defining mapping from values of the reference property to values for the new property Keys of the dictionary corresponds to domain of the mapping and values of the dictionary corresponds to codomain of the mapping Note that the keys must cover all values of the reference property in an Element object where the constructed object is appended to Constructed AddMap object Usage example of the constructor for mapping from atomic-number to mass Python-side methods of AddMap Name C++-side Description Argument Return overwrite AddMap::overwrite Allow overwriting an existing property by a new property with the same name do_overwrite_ A boolean whether overwriting is allowed or not No argument leads to allowing overwriting This AddMap object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_map</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__map_8h.html#a66e54cbcd8ddb3406864a39436f29595</field>
    <field name="keywords">pybind_add_map</field>
    <field name="text">Function to bind AddMap class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_molecular_orientation.h</field>
    <field name="url">py__add__molecular__orientation_8h.html</field>
    <field name="keywords">py_add_molecular_orientation.h</field>
    <field name="text">This file is for binding AddMolecularOrientation class to Python Takayuki Kobayashi 2018/07/16 Python-side constructor of AddMolecularOrientation Name C++-side Description Argument Return AddMolecularOrientation AddMolecularOrientation::Updater Constructor of AddMolecularOrientation class None Constructed AddMolecularOrientation object Usage example of the constructor to add molecular orientation to an Element object for molecules</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_molecular_orientation</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__molecular__orientation_8h.html#a460e6f216ef33f5937b630746102cbc1</field>
    <field name="keywords">pybind_add_molecular_orientation</field>
    <field name="text">Function to bind AddMolecularOrientation class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_rename.h</field>
    <field name="url">py__add__rename_8h.html</field>
    <field name="keywords">py_add_rename.h</field>
    <field name="text">This file is for binding AddRename class to Python Takayuki Kobayashi 2018/08/17 Python-side constructor of AddRename Name C++-side Description Argument Return AddRename AddRename::AddRename Constructor of AddRename class key_old_ A string key for an existing property to be renamed key_new_ A string key by which the old key for the existing property is renamed Constructed AddRename object Python-side methods of AddRename Name C++-side Description Argument Return overwrite AddRename::overwrite Allow overwriting an existing property by a renamed property another existing property with the same name do_overwrite_ A boolean whether overwriting is allowed or not No argument leads to allowing overwriting This AddRename object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_rename</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__rename_8h.html#a8c69e928a93c4b2b2b5e56296bb1029b</field>
    <field name="keywords">pybind_add_rename</field>
    <field name="text">Function to bind AddRename class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_special_bonds.h</field>
    <field name="url">py__add__special__bonds_8h.html</field>
    <field name="keywords">py_add_special_bonds.h</field>
    <field name="text">This file is for binding AddSpecialBonds class to Python Takayuki Kobayashi 2018/08/19 Python-side constructor of AddSpecialBonds Name C++-side Description Argument Return AddSpecialBonds AddSpecialBonds::AddSpecialBonds Constructor of AddSpecialBonds class for one molecular type el_mols A molecular Element object consisting of an atomic or bead Element object where the constructed object is appended to scheme List of lists of zero-based index of atoms in a molecule For example i th atom has j th atom as one of the special bonds when i th list of the scheme contains j Constructed AddSpecialBonds object AddSpecialBonds AddSpecialBonds::AddSpecialBonds Constructor of AddSpecialBonds class for multiple molecular types el_mols A molecular Element object consisting of an atomic or bead Element object where the constructed object is appended to schemes Dictionary where the keys are molecular types and the values are lists of lists of zero-based index of atoms in a molecule Description of each list is the same as for the case of one molecular type Constructed AddSpecialBonds object Example of the constructor for molecules consisting of linearly connected four atoms Bond-length and bond-angle potentials are considered Example of the constructor for two types of molecule the first one consists of linearly connected four atoms and the second one consists of linearly connected five atoms Bond-length and bond-angle potentials are considered</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_special_bonds</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__special__bonds_8h.html#ade11f364f011003c4c4264e7502a4e69</field>
    <field name="keywords">pybind_add_special_bonds</field>
    <field name="text">Function to bind AddSpecialBonds class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_add_wrapped_position.h</field>
    <field name="url">py__add__wrapped__position_8h.html</field>
    <field name="keywords">py_add_wrapped_position.h</field>
    <field name="text">This file is for binding AddWrappedPosition class to Python Takayuki Kobayashi 2018/07/07 Python-side constructor of AddWrappedPosition Name C++-side Description Argument Return AddWrappedPosition AddWrappedPosition::AddWrappedPosition Constructor of AddWrappedPosition class elem An Element object containing data for the simulation box Constructed AddWrappedPosition object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_add_wrapped_position</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__add__wrapped__position_8h.html#a7b4e579f12d8d20e3e925d49b5dba122</field>
    <field name="keywords">pybind_add_wrapped_position</field>
    <field name="text">Function to bind AddWrappedPosition class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_adder.h</field>
    <field name="url">py__adder_8h.html</field>
    <field name="keywords">py_adder.h</field>
    <field name="text">This file is for binding Adder class to Python Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_adder</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__adder_8h.html#a7413cb814115262dc0e0e530c9aa6edf</field>
    <field name="keywords">pybind_adder</field>
    <field name="text">Function to bind Adder class to Python Constructor of Adder class is hidden from Python because the class is an abstract one</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_fil_comparison.h</field>
    <field name="url">py__fil__comparison_8h.html</field>
    <field name="keywords">py_fil_comparison.h</field>
    <field name="text">This file is for binding FilComparison class to Python Takayuki Kobayashi 2018/07/02 Python-side constructor of FilComparison Name C++-side Description Argument Return FilComparison FilComparison::FilComparison Constructor of FilComparison class for one criterion comparison_ A 3-elements tuple consisting of a string key and comparison operator and right side value of an inequality or equation used as a criterion Constructed FilComparison object FilComparison FilComparison::FilComparison Constructor of FilComparison class for multiple criteria comparisons_ List of 3-elements tuples Contents of each tuple is the same as for the case of one criterion Constructed FilComparison object Usage example of the constructor for a filter removing atoms whose xu property is less than 10.0 Usage example of the constructor for a filter removing atoms whose xu property is less than 10.0 or greater than 20.0 and whose charge property is not equal to</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_fil_comparison</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__fil__comparison_8h.html#a377795ed98f6a4402df0ca28e92f2898</field>
    <field name="keywords">pybind_fil_comparison</field>
    <field name="text">Function to bind FilComparison class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_fil_set.h</field>
    <field name="url">py__fil__set_8h.html</field>
    <field name="keywords">py_fil_set.h</field>
    <field name="text">This file is for binding FilSet class to Python Takayuki Kobayashi 2018/07/01 Python-side constructor of FilSet Name C++-side Description Argument Return FilSet FilSet::FilSet Constructor of FilSet class value_sets_ Dictionary from a string key for property to acceptable values of that property Constructed FilSet object Usage example of the constructor for a filter removing atoms whose type property is not 1 2 or 3 Usage example of the constructor for a filter removing atoms whose type property is not 1 2 or 3 and whose id property is not a multiple of 3 less than 1000</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_fil_set</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__fil__set_8h.html#a517238d4393e7efe5026a8c08fb4e3ae</field>
    <field name="keywords">pybind_fil_set</field>
    <field name="text">Function to bind FilSet class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_filter.h</field>
    <field name="url">py__filter_8h.html</field>
    <field name="keywords">py_filter.h</field>
    <field name="text">This file is for binding Filter class to Python Takayuki Kobayashi 2018/06/30</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_filter</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__filter_8h.html#a8b505d69261985c861493284ed78adb7</field>
    <field name="keywords">pybind_filter</field>
    <field name="text">Function to bind Filter class to Python Constructor of Filter class is hidden from Python because the class is an abstract one</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_inv_omp.h</field>
    <field name="url">py__inv__omp_8h.html</field>
    <field name="keywords">py_inv_omp.h</field>
    <field name="text">This file is for binding InvOMP class to Python Takayuki Kobayashi 2018/06/23 Python-side constructor of InvOMP Name C++-side Description Argument Return InvOMP InvOMP::Invoker Constructor of InvOMP class for one Processor object proc A Processor object to be executed by the constructed object Constructed InvOMP object InvOMP InvOMP::Invoker Constructor of InvOMP class for multiple Processor objects procs List of Processor objects to be executed by the constructed object Constructed InvOMP object Python-side methods of InvOMP Name C++-side Description Argument Return execute InvOMP::execute Execute analysis programmed in the Processor object(s) owned by this object None None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_inv_omp</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__inv__omp_8h.html#a1fb79eeeb95fbb4ae7555f5a9ff0f20b</field>
    <field name="keywords">pybind_inv_omp</field>
    <field name="text">Function to bind InvOMP class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_invoker.h</field>
    <field name="url">py__invoker_8h.html</field>
    <field name="keywords">py_invoker.h</field>
    <field name="text">This file is for binding Invoker class to Python Takayuki Kobayashi 2018/06/23</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_invoker</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__invoker_8h.html#a862abb0356ee584e3363ac24ec776fbb</field>
    <field name="keywords">pybind_invoker</field>
    <field name="text">Function to bind Invoker class to Python Constructor of Invoker class is hidden from Python because the class is an abstract one</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_pro_data.h</field>
    <field name="url">py__pro__data_8h.html</field>
    <field name="keywords">py_pro_data.h</field>
    <field name="text">This file is for binding AddRename class to Python Takayuki Kobayashi 2018/08/17 Python-side constructor of AddRename Name C++-side Description Argument Return AddRename AddRename::AddRename Constructor of AddRename class key_old_ A string key for an existing property to be renamed key_new_ A string key by which the old key for the existing property is renamed Constructed AddRename object Python-side methods of AddRename Name C++-side Description Argument Return overwrite AddRename::overwrite Allow overwriting an existing property by a renamed property another existing property with the same name do_overwrite_ A boolean whether overwriting is allowed or not No argument leads to allowing overwriting This AddRename object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_pro_data</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__pro__data_8h.html#a2d5380058190899a8b0b623e077991a6</field>
    <field name="keywords">pybind_pro_data</field>
    <field name="text">Function to bind ProData class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_processor.h</field>
    <field name="url">py__processor_8h.html</field>
    <field name="keywords">py_processor.h</field>
    <field name="text">This file is for binding Processor class to Python Takayuki Kobayashi 2018/06/22</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_processor</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__processor_8h.html#abc33371da12cfa99935169f7ae344e48</field>
    <field name="keywords">pybind_processor</field>
    <field name="text">Function to bind Processor class to Python Constructor of Processor class is hidden from Python because the class is an abstract one</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_element.h</field>
    <field name="url">py__element_8h.html</field>
    <field name="keywords">py_element.h</field>
    <field name="text">This file is for binding Element class to Python Takayuki Kobayashi 2018/07/01 Python-side methods of Element Name C++-side Description Argument Return append_updater Element::append_updater Append an object of Adder s or Filter s subclass to this Element object upd An object of Adder s or Filter s subclass This Element object get_data Element::get_data_py Get Element::data of this object as a complex of dict and list None JSON-like object consisting of dict and list get_keys Element::get_keys_py Get Element::datakeys of this object as a set of strings None Set of strings get_1d_int Element::get_1d_int_py Get values of an integer property contained in Element::data of this object as an one-dimensional Numpy-Array key A string key specifying a property to be extracted One-dimensional Numpy-Array whose elements are integers get_1d_float Element::get_1d_float_py Get values of a float property contained in Element::data of this object as an one-dimensional Numpy-Array key A string key specifying a property to be extracted One-dimensional Numpy-Array whose elements are floats get_2d_int Element::get_2d_int_py Get values of multiple integer properties contained in Element::data of this object as a two-dimensional Numpy-Array A variable number of string keys specifying properties to be extracted Two-dimensional Numpy-Array whose elements are integers get_2d_float Element::get_2d_float_py Get values of multiple float properties contained in Element::data of this object as a two-dimensional Numpy-Array A variable number of string keys specifying properties to be extracted Two-dimensional Numpy-Array whose elements are floats Python-side functions Name C++-side Description Argument Return create Lambda Factory function for Element class This function takes one argument an object of Starter s subclass such class is prefixed by Sta which adds some properties to empty Element::data of the created Element object upd An object of Starter s subclass An object of Element class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_element</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__element_8h.html#a32471b3cace9ede01900bfbdaca5e16a</field>
    <field name="keywords">pybind_element</field>
    <field name="text">Function to bind Element class to Python Constructor of Element class is hidden from Python A Python-side function create provides functionality to create an Element object taking an object of Starter s subclass as argument This function is required to make UpdatePair from shared pointers of the created Element object and the taken Starter s subclass object because constructor cannot call shared_from_this() and therefore cannot make UpdatePair</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_updater.h</field>
    <field name="url">py__updater_8h.html</field>
    <field name="keywords">py_updater.h</field>
    <field name="text">This file is for binding Updater class to Python Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_updater</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__updater_8h.html#a76252e83c0e3a6b7f064c72b77a653b2</field>
    <field name="keywords">pybind_updater</field>
    <field name="text">Function to bind Updater class to Python Constructor of Updater class is hidden from Python because the class is an abstract one</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_utils.h</field>
    <field name="url">py__utils_8h.html</field>
    <field name="keywords">py_utils.h</field>
    <field name="text">This file is for binding utility functions to Python Takayuki Kobayashi 2018/09/03 Python-side functions Name C++-side Description Argument Return log_switch utils::log_switch Switch on/off logging logging is disabled by default input Boolean whether enable the logging or not None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_utils</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__utils_8h.html#af9ad10c585111cbb3747d7d37d1d7e78</field>
    <field name="keywords">pybind_utils</field>
    <field name="text">Function to bind utility functions to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_sta_beads.h</field>
    <field name="url">py__sta__beads_8h.html</field>
    <field name="keywords">py_sta_beads.h</field>
    <field name="text">This file is for binding StaBeads class to Python Takayuki Kobayashi 2018/08/18 Python-side constructor of StaBeads Name C++-side Description Argument Return StaBeads StaBeads::StaBeads Constructor of StaBeads class for one molecular type el_mols A molecular Element object consisting of a bead Element object where the constructed object is appended to scheme List of dictionaries describing coarse-grain mapping scheme Each dictionary corresponds to each bead in a molecule and contains three items indices-in-mol is an array of zero-based index of atoms in a molecule type is type of the bead and weights is an array of floats for weighting factors of the atoms The last two items are optional Constructed StaBeads object StaBeads StaBeads::StaBeads Constructor of StaBeads class for multiple molecular types el_mols A molecular Element object consisting of a bead Element object where the constructed object is appended to schemes Dictionary from molecular type to list of dictionaries describing coarse-grain scheme for a molecule of that type Description of each list is the same as for the case of one molecular type Constructed StaBeads object Example of the constructor for beads consisting of five atoms in a molecule the molecule consists of four beads and all the beads are type 1 Example of the constructor some beads belong to molecules whose type is 1 and the others belong to molecules whose type is 2 The number of molecules is 100 molecules with odd id are type 1 and the others are type 2 All the beads for molecular type 1 consist of five atoms and their types are 1 All the beads for molecular type 2 consist of four atoms and their types are 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_sta_beads</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__sta__beads_8h.html#a56d32fd407acf734585c5fadfe54e827</field>
    <field name="keywords">pybind_sta_beads</field>
    <field name="text">Function to bind StaBeads class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_sta_copy.h</field>
    <field name="url">py__sta__copy_8h.html</field>
    <field name="keywords">py_sta_copy.h</field>
    <field name="text">This file is for binding StaCopy class to Python Takayuki Kobayashi 2018/09/20 Python-side constructor of StaCopy Name C++-side Description Argument Return StaCopy StaCopy::StaCopy Constructor of StaCopy class elem An Element object to be copied Constructed StaCopy object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_sta_copy</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__sta__copy_8h.html#a233ea650a2735779715893e9b8bcba7c</field>
    <field name="keywords">pybind_sta_copy</field>
    <field name="text">Function to bind StaCopy class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_sta_custom.h</field>
    <field name="url">py__sta__custom_8h.html</field>
    <field name="keywords">py_sta_custom.h</field>
    <field name="text">This file is for binding StaCustom class to Python Takayuki Kobayashi 2018/08/16 Python-side constructor of StaCustom Name C++-side Description Argument Return StaCustom StaCustom::StaCustom Constructor of StaCustom class json_ A JSON-like object complex of dict and list to be set as Element::data of a new Element object Constructed StaCustom object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_sta_custom</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__sta__custom_8h.html#a5177cba18cf6129a45c5f743ccdcf3c9</field>
    <field name="keywords">pybind_sta_custom</field>
    <field name="text">Function to bind StaCustom class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_sta_dump.h</field>
    <field name="url">py__sta__dump_8h.html</field>
    <field name="keywords">py_sta_dump.h</field>
    <field name="text">This file is for binding StaDump class to Python Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_sta_dump</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__sta__dump_8h.html#a2a13816d3964a06683ddd1b4b523b104</field>
    <field name="keywords">pybind_sta_dump</field>
    <field name="text">Function to bind StaDump class to Python Constructor of StaDump class is hidden from Python because the class is an abstract one</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_sta_dump_atoms.h</field>
    <field name="url">py__sta__dump__atoms_8h.html</field>
    <field name="keywords">py_sta_dump_atoms.h</field>
    <field name="text">This file is for binding StaDumpAtoms class to Python Takayuki Kobayashi 2018/06/29 Python-side constructor of StaDumpAtoms Name C++-side Description Argument Return StaDumpAtoms StaDumpAtoms::StaDump Constructor of StaDumpAtoms class filepath_ A string for path to a Lammps dump file timestep_ An integer specifying a timestep of simulation to be parsed Constructed StaDumpAtoms object Example of the constructor for a trajectory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_sta_dump_atoms</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__sta__dump__atoms_8h.html#a3e9d58621e01a571e0a50f510960c267</field>
    <field name="keywords">pybind_sta_dump_atoms</field>
    <field name="text">Function to bind StaDumpAtoms class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_sta_dump_box.h</field>
    <field name="url">py__sta__dump__box_8h.html</field>
    <field name="keywords">py_sta_dump_box.h</field>
    <field name="text">This file is for binding StaDumpBox class to Python Takayuki Kobayashi 2018/06/29 Python-side constructor of StaDumpBox Name C++-side Description Argument Return StaDumpBox StaDumpBox::StaDump Constructor of StaDumpBox class filepath_ A string for path to a Lammps dump file timestep_ An integer specifying a timestep of simulation to be parsed Constructed StaDumpBox object Example of the constructor for a trajectory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_sta_dump_box</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__sta__dump__box_8h.html#a325053781d002595f1b0a7ee9ee88d61</field>
    <field name="keywords">pybind_sta_dump_box</field>
    <field name="text">Function to bind StaDumpBox class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_sta_molecules.h</field>
    <field name="url">py__sta__molecules_8h.html</field>
    <field name="keywords">py_sta_molecules.h</field>
    <field name="text">This file is for binding StaMolecules class to Python Takayuki Kobayashi 2018/07/07 Python-side constructor of StaMolecules Name C++-side Description Argument Return StaMolecules StaMolecules::StaMolecules Constructor of StaMolecules class el_atoms An Element object for atoms forming molecules to be computed Constructed StaMolecules object Example of the constructor for a trajectory of typed molecules The number of molecules is 100 molecules with odd id are type 1 and the others are type 2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_sta_molecules</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__sta__molecules_8h.html#af7dfb2ea0a637a30e8893b45f635b777</field>
    <field name="keywords">pybind_sta_molecules</field>
    <field name="text">Function to bind StaMolecules class to Python</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">py_starter.h</field>
    <field name="url">py__starter_8h.html</field>
    <field name="keywords">py_starter.h</field>
    <field name="text">This file is for binding Starter class to Python Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind_starter</field>
    <field name="args">(py::module &amp;m)</field>
    <field name="url">py__starter_8h.html#a73d9faedf13571310340af9adbe80877</field>
    <field name="keywords">pybind_starter</field>
    <field name="text">Function to bind Starter class to Python Constructor of Starter class is hidden from Python because the class is an abstract one</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_beads.cpp</field>
    <field name="url">sta__beads_8cpp.html</field>
    <field name="keywords">sta_beads.cpp</field>
    <field name="text">This file has an implementation of StaBeads class which is a subclass of Starter class Takayuki Kobayashi 2018/08/18</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_beads.h</field>
    <field name="url">sta__beads_8h.html</field>
    <field name="keywords">sta_beads.h</field>
    <field name="text">This file has a definition of StaBeads class which is a subclass of Starter class Takayuki Kobayashi 2018/08/18</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_copy.cpp</field>
    <field name="url">sta__copy_8cpp.html</field>
    <field name="keywords">sta_copy.cpp</field>
    <field name="text">This file has an implementation of StaCopy class which is a subclass of Starter class Takayuki Kobayashi 2018/09/20</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_copy.h</field>
    <field name="url">sta__copy_8h.html</field>
    <field name="keywords">sta_copy.h</field>
    <field name="text">This file has a definition of StaCopy class which is a subclass of Starter class Takayuki Kobayashi 2018/09/20</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_custom.cpp</field>
    <field name="url">sta__custom_8cpp.html</field>
    <field name="keywords">sta_custom.cpp</field>
    <field name="text">This file has an implementation of StaCustom class which is a subclass of Starter class Takayuki Kobayashi 2018/08/16</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_custom.h</field>
    <field name="url">sta__custom_8h.html</field>
    <field name="keywords">sta_custom.h</field>
    <field name="text">This file has a definition of StaCustom class which is a subclass of Starter class Takayuki Kobayashi 2018/08/16</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_dump.cpp</field>
    <field name="url">sta__dump_8cpp.html</field>
    <field name="keywords">sta_dump.cpp</field>
    <field name="text">This file has an implementation of StaDump class which is a subclass of Starter class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_dump.h</field>
    <field name="url">sta__dump_8h.html</field>
    <field name="keywords">sta_dump.h</field>
    <field name="text">This file has a definition of StaDump class which is a subclass of Starter class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_dump_atoms.cpp</field>
    <field name="url">sta__dump__atoms_8cpp.html</field>
    <field name="keywords">sta_dump_atoms.cpp</field>
    <field name="text">This file has an implementation of StaDumpAtoms class which is a subclass of Starter class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_dump_atoms.h</field>
    <field name="url">sta__dump__atoms_8h.html</field>
    <field name="keywords">sta_dump_atoms.h</field>
    <field name="text">This file has a definition of StaDumpAtoms class which is a subclass of Starter class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_dump_box.cpp</field>
    <field name="url">sta__dump__box_8cpp.html</field>
    <field name="keywords">sta_dump_box.cpp</field>
    <field name="text">This file has an implementation of StaDumpBox class which is a subclass of Starter class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_dump_box.h</field>
    <field name="url">sta__dump__box_8h.html</field>
    <field name="keywords">sta_dump_box.h</field>
    <field name="text">This file has a definition of StaDumpBox class which is a subclass of Starter class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_molecules.cpp</field>
    <field name="url">sta__molecules_8cpp.html</field>
    <field name="keywords">sta_molecules.cpp</field>
    <field name="text">This file has an implementation of StaMolecules class which is a subclass of Starter class Takayuki Kobayashi 2018/07/07</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">sta_molecules.h</field>
    <field name="url">sta__molecules_8h.html</field>
    <field name="keywords">sta_molecules.h</field>
    <field name="text">This file has a definition of StaMolecules class which is a subclass of Starter class Takayuki Kobayashi 2018/07/07</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">starter.cpp</field>
    <field name="url">starter_8cpp.html</field>
    <field name="keywords">starter.cpp</field>
    <field name="text">This file has an implementation of Starter class which is a subclass of Updater class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">starter.h</field>
    <field name="url">starter_8h.html</field>
    <field name="keywords">starter.h</field>
    <field name="text">This file has a definition of Starter class which is a subclass of Updater class Takayuki Kobayashi 2018/06/29</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">join.cpp</field>
    <field name="url">join_8cpp.html</field>
    <field name="keywords">join.cpp</field>
    <field name="text">This file has an implementation of utils::join Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">join.h</field>
    <field name="url">join_8h.html</field>
    <field name="keywords">join.h</field>
    <field name="text">This file has a definition of utils::join Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::join</field>
    <field name="args">(const Vec&lt; Str &gt; &amp;strs, const Str &amp;jointer)</field>
    <field name="url">namespaceutils.html#a5e5339e32b770a14691521435849c949</field>
    <field name="keywords">join utils::join utils join utils::join utils</field>
    <field name="text">Mimicking Python s join Mimicking Python s join strs Vector list of strings to be joined jointer A string used for jointing elements of the strs String</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">map_to_index.cpp</field>
    <field name="url">map__to__index_8cpp.html</field>
    <field name="keywords">map_to_index.cpp</field>
    <field name="text">This file has an implementation of utils::map_to_index Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">map_to_index.h</field>
    <field name="url">map__to__index_8h.html</field>
    <field name="keywords">map_to_index.h</field>
    <field name="text">This file has a definition of utils::map_to_index Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::map_to_index</field>
    <field name="args">(const Json &amp;data, const Str &amp;key)</field>
    <field name="url">namespaceutils.html#aeabf3fc19efc71936f355f069d336b5a</field>
    <field name="keywords">map_to_index utils::map_to_index utils map_to_index utils::map_to_index utils</field>
    <field name="text">Create a map from values of selected property in an array Json to corresponding index in the array Json Create a map from values of selected property in an array Json to corresponding index in the array Json data Array Json key A string key specifying a property used as domain of the mapping Map from elements of an array Json to corresponding index in the array Json Note that the mapping must be bijection</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">message.cpp</field>
    <field name="url">message_8cpp.html</field>
    <field name="keywords">message.cpp</field>
    <field name="text">This file has implementations of messaging functions Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">message.h</field>
    <field name="url">message_8h.html</field>
    <field name="keywords">message.h</field>
    <field name="text">This file has definitions of messaging functions Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::_message</field>
    <field name="args">(const Str &amp;msg)</field>
    <field name="url">namespaceutils.html#a3b5f21e223fdb0898119de641a1685f6</field>
    <field name="keywords">_message utils::_message utils _message utils::_message utils</field>
    <field name="text">Print to standard output Print to standard output msg A string to be printed None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::log</field>
    <field name="args">(const Str &amp;msg)</field>
    <field name="url">namespaceutils.html#a26267fe7371b6215c5d61374d716527b</field>
    <field name="keywords">log utils::log utils log utils::log utils</field>
    <field name="text">Logging a message Logging a message msg A string to be printed None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::warning</field>
    <field name="args">(const Str &amp;msg)</field>
    <field name="url">namespaceutils.html#a362e3ea9867513a7bba06b6382d6527b</field>
    <field name="keywords">warning utils::warning utils warning utils::warning utils</field>
    <field name="text">Waning with a message Waning with a message msg A string to be printed None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::log_switch</field>
    <field name="args">(bool input)</field>
    <field name="url">namespaceutils.html#ad13518af28215c74f69e74980e554310</field>
    <field name="keywords">log_switch utils::log_switch utils log_switch utils::log_switch utils</field>
    <field name="text">Switch on/off logging Switch on/off logging input Whether enable the logging or not None Note that logging is disabled by default</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pyargs_to_vec.cpp</field>
    <field name="url">pyargs__to__vec_8cpp.html</field>
    <field name="keywords">pyargs_to_vec.cpp</field>
    <field name="text">This file has an implementation of utils::pyargs_to_vec Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">pyargs_to_vec.h</field>
    <field name="url">pyargs__to__vec_8h.html</field>
    <field name="keywords">pyargs_to_vec.h</field>
    <field name="text">This file has a definition of utils::pyargs_to_vec Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::pyargs_to_vec</field>
    <field name="args">(const py::args &amp;args, Vec&lt; T &gt; &amp;vec)</field>
    <field name="url">namespaceutils.html#a9fdbb91c9e48ca033fca642b6e73d850</field>
    <field name="keywords">pyargs_to_vec utils::pyargs_to_vec utils pyargs_to_vec utils::pyargs_to_vec utils</field>
    <field name="text">Convert py::args a variable number arguments to Vec Convert py::args a variable number arguments to Vec args Python s variable number arguments vec Mutable reference to Vec where elements of the args are appended to None</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">runtime_error.cpp</field>
    <field name="url">runtime__error_8cpp.html</field>
    <field name="keywords">runtime_error.cpp</field>
    <field name="text">This file has an implementation of utils::runtime_error Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">runtime_error.h</field>
    <field name="url">runtime__error_8h.html</field>
    <field name="keywords">runtime_error.h</field>
    <field name="text">This file has a definition of utils::runtime_error Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::runtime_error</field>
    <field name="args">(const Str &amp;msg)</field>
    <field name="url">namespaceutils.html#acee57b54806ee63ddaa30518fed90adb</field>
    <field name="keywords">runtime_error utils::runtime_error utils runtime_error utils::runtime_error utils</field>
    <field name="text">Raise for Python and throw for C++ a runtime error Raise for Python and throw for C++ a runtime error msg A string message for the runtime error None</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">split.cpp</field>
    <field name="url">split_8cpp.html</field>
    <field name="keywords">split.cpp</field>
    <field name="text">This file has an implementation of utils::split Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">split.h</field>
    <field name="url">split_8h.html</field>
    <field name="keywords">split.h</field>
    <field name="text">This file has a definition of utils::split Takayuki Kobayashi 2018/09/03</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">utils::split</field>
    <field name="args">(const Str &amp;str, char delim=&apos; &apos;)</field>
    <field name="url">namespaceutils.html#a96d358b93c453a686f65db462e2be70f</field>
    <field name="keywords">split utils::split utils split utils::split utils</field>
    <field name="text">Mimicking Python s split Mimicking Python s split str A string to be splitted delim A character by which the str is splitted Default delimiter is a whitespace Vec of strings</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddChildIDs</field>
    <field name="url">classAddChildIDs.html</field>
    <field name="keywords">AddChildIDs</field>
    <field name="text">AddChildIDs adds id property of a child Element object to a parent Element object An object of this class owns a child Element object as ext_generator and is appended to a parent object using its Element::append_updater An example of child is an Element object containing data for atoms and an example of parent is an Element object containing data for molecules id property of the child is appended to an array belonging to the parent The terms child and parent are used because a parent object consists of a child object In terms of time series however the child is created earlier than the parent About usage in Python please see src/pybind/adders/py_add_child_ids.h Key for property to be added child_name array of integers Key for required property id integer Key for required property in ext_generator id integer key_for_parent_id integer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddChildIDs::AddChildIDs</field>
    <field name="args">(const ElPtr &amp;elem, const Str &amp;child_name_, const Str &amp;key_for_parent_id_)</field>
    <field name="url">classAddChildIDs.html#a7278a3244f0a6d52e7f30491f2154a70</field>
    <field name="keywords">AddChildIDs AddChildIDs::AddChildIDs AddChildIDs</field>
    <field name="text">Constructor of AddChildIDs class elem Shared pointer to a child object This argument is assigned to ext_generator child_name_ A string for naming the child object This argument is assigned to child_name key_for_parent_id_ A string for key in the child object corresponding to id of parent object This argument is assigned to key_for_parent_id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Adder::compute</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys, const int dataid) override</field>
    <field name="url">classAdder.html#ac4de42742fffbb58ac8ab71a1eb17100</field>
    <field name="keywords">compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder compute Adder::compute Adder</field>
    <field name="text">Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to dataid Constant integer copied from Element::dataid None This method checks if dataid is in dataid_blacklist If it is not in the blacklist this method passes data and datakeys to Adder::compute_impl Note that actual computation and adding of properties is conducted by Adder::compute_impl orveridden in subclasses of this class In addition this method ensures that a new property whose name is id is not added id property must be set at initialization done by Starter only Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference Compute properties and add them to Element::data given as a mutable reference</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Adder::Updater</field>
    <field name="args">()</field>
    <field name="url">classAdder.html#ae5e87ea9ea0f6f31de04f93cd1819549</field>
    <field name="keywords">Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder Updater Adder::Updater Adder</field>
    <field name="text">Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited Constructor of Adder class inherited</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Updater::Updater</field>
    <field name="args">()</field>
    <field name="url">classUpdater.html#ae5e87ea9ea0f6f31de04f93cd1819549</field>
    <field name="keywords">Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater Updater Updater::Updater Updater</field>
    <field name="text">Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class Constructor of Updater class This constructor is thread-unsafe because it accesses its members thread-globally Ensure this constructor is not called in a multithreading context Please be careful that constructors of subclasses of this class are also thread-unsafe</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Updater::remove_from_blacklist</field>
    <field name="args">(const int dataid)</field>
    <field name="url">classUpdater.html#afb7ad60b6b3e19b83299fb644b49f02b</field>
    <field name="keywords">remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater remove_from_blacklist Updater::remove_from_blacklist Updater</field>
    <field name="text">Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist Remove Element::dataid from dataid_blacklist dataid Element::dataid to be removed None Removing dataid from dataid_blacklist is necessary so that this object can update the Element object of the dataid again after its Element::data being cleared</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Updater::get_ext_generator</field>
    <field name="args">()</field>
    <field name="url">classUpdater.html#a64bb77bc8aa6d7ee1ddeaf98a033ec36</field>
    <field name="keywords">get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater get_ext_generator Updater::get_ext_generator Updater</field>
    <field name="text">Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Get ext_generator of this object Constance reference to ShPtr Generator This method is mainly used in Element::update_chain</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddChildIDs::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddChildIDs.html#a44a0b778c9c4b17c9ce9051b990af73d</field>
    <field name="keywords">compute_impl AddChildIDs::compute_impl AddChildIDs</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Updater::check_blacklist</field>
    <field name="args">(const int dataid)</field>
    <field name="url">classUpdater.html#a2184a4efa52ad2f4a631c134379ef7b8</field>
    <field name="keywords">check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater check_blacklist Updater::check_blacklist Updater</field>
    <field name="text">Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist Look for Element::dataid in dataid_blacklist dataid Element::dataid to be checked Boolean If dataid is found in dataid_blacklist this method returns false that is rejects the Element object of the dataid</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddChildIDs::child_name</field>
    <field name="url">classAddChildIDs.html#a7f1aa53a67c5f2cee99a238d8e41c100</field>
    <field name="keywords">child_name AddChildIDs::child_name AddChildIDs</field>
    <field name="text">Name of child object stored as ext_generator The key for property added by this class is named as child_name</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddChildIDs::key_for_parent_id</field>
    <field name="url">classAddChildIDs.html#a65533c871823d1e4a713accb3e50574c</field>
    <field name="keywords">key_for_parent_id AddChildIDs::key_for_parent_id AddChildIDs</field>
    <field name="text">Key in ext_generator corresponding to id of parent object</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Updater::ext_generator</field>
    <field name="url">classUpdater.html#a26dc5059d13d9e8b5d96390286976868</field>
    <field name="keywords">ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater ext_generator Updater::ext_generator Updater</field>
    <field name="text">Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process Shared pointer to a Generator object used in update process To compute some properties for an Element object where this object is appended to an external Generator object can be Element/GenDict/GenList might be required For example to compute the center of mass of molecules for a molecular Element object an atomic Element object containing positions of the atoms is required</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddChildPositions</field>
    <field name="url">classAddChildPositions.html</field>
    <field name="keywords">AddChildPositions</field>
    <field name="text">AddChildPositions adds relative positions of a child Element object to a parent Element object An object of this class owns a child object as ext_generator and is appended to a parent object using its Element::append_updater An example of child is an Element object containing data for atoms and an example of parent is an Element object containing data for molecules Positions of a child is computed relative to a position of a parent and appended to an array belonging to the parent The terms child and parent are used because a parent object consists of a child object In terms of time series however the child is created earlier than the parent About usage in Python please see src/pybind/adders/py_add_child_positions.h Key for property to be added child_name array of floats child_name array of floats child_name array of floats Key for required property child_name array of integers xu float yu float zu float Key for required property in ext_generator id integer xu float yu float zu float</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddChildPositions::AddChildPositions</field>
    <field name="args">(const ElPtr &amp;elem, const Str &amp;child_name_)</field>
    <field name="url">classAddChildPositions.html#ad4db976f729aaf211154e36d47ee97f2</field>
    <field name="keywords">AddChildPositions AddChildPositions::AddChildPositions AddChildPositions</field>
    <field name="text">Constructor of AddChildPositions class elem Shared pointer to a child object This argument is assigned to ext_generator child_name_ A string for naming the child object This argument is assigned to child_name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddChildPositions::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddChildPositions.html#ab200c619009c1db1deefb92c68010f9a</field>
    <field name="keywords">compute_impl AddChildPositions::compute_impl AddChildPositions</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddChildPositions::child_name</field>
    <field name="url">classAddChildPositions.html#acde97085231187792667e1ce2ed46955</field>
    <field name="keywords">child_name AddChildPositions::child_name AddChildPositions</field>
    <field name="text">Name of child object stored as ext_generator The key for property added to a parent object by this class is named as child_name child_name and child_name The parent object is also required to have child_name property</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddCoMPosition</field>
    <field name="url">classAddCoMPosition.html</field>
    <field name="keywords">AddCoMPosition</field>
    <field name="text">AddCoMPosition adds center of mass to an Element object as its unwrapped position An object of this class computes center of mass of a parent Element object from unwrapped positions of a child Element object and adds it to the parent object as its unwrapped position The object of this class owns the child object as ext_generator and is appended to the parent object using its Element::append_updater An example of child is an Element object containing data for atoms and an example of parent is an Element object containing data for molecules The terms child and parent are used because a parent object consists of a child object In terms of time series however the child is created earlier than the parent About usage in Python please see src/pybind/adders/py_add_com_position.h Key for property to be added mass float xu float yu float zu float Key for required property atom-ids array of integers Key for required property in ext_generator id integer mass float xu float yu float zu float</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddCoMPosition::AddCoMPosition</field>
    <field name="args">(const ElPtr &amp;elem)</field>
    <field name="url">classAddCoMPosition.html#ade24bf19cac5bf1a61bb774a2f54fc63</field>
    <field name="keywords">AddCoMPosition AddCoMPosition::AddCoMPosition AddCoMPosition</field>
    <field name="text">Constructor of AddCoMPosition class elem Shared pointer to a child object This argument is assigned to ext_generator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddCoMPosition::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddCoMPosition.html#a8769c07c61840444ad80bf7e20acdbf2</field>
    <field name="keywords">compute_impl AddCoMPosition::compute_impl AddCoMPosition</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddCoMPosition::compute_with_weights</field>
    <field name="args">(Json &amp;data, const ElPtr &amp;el_atoms)</field>
    <field name="url">classAddCoMPosition.html#a4f11bc044daa8afbe8223d9e4098a499</field>
    <field name="keywords">compute_with_weights AddCoMPosition::compute_with_weights AddCoMPosition</field>
    <field name="text">Compute the center of mass with weighting factors data Mutable reference to Element::data where computed properties are added to el_atoms Shared pointer of up-casted ext_generator None Note that the weighting factors are different from something like mass of atoms Weighting factors are artificial values defined with some reason</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddCoMPosition::compute_without_weights</field>
    <field name="args">(Json &amp;data, const ElPtr &amp;el_atoms)</field>
    <field name="url">classAddCoMPosition.html#a2c583d3b5139a8e8437979a432631c2e</field>
    <field name="keywords">compute_without_weights AddCoMPosition::compute_without_weights AddCoMPosition</field>
    <field name="text">Compute the center of mass data Mutable reference to Element::data where computed properties are added to el_atoms Shared pointer of up-casted ext_generator None</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Adder</field>
    <field name="url">classAdder.html</field>
    <field name="keywords">Adder</field>
    <field name="text">Adder adds new properties keys and values to a non-empty Element object This class inherits Updater class and overrides Updater::compute This class is an abstract class and has a pure virtual function Adder::compute_impl Name of subclass of this class should be prefixed by Add Unlike Starter Adder accepts only non-empty Element::data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Updater::compute_impl</field>
    <field name="args">(Json &amp;, DataKeys &amp;)=0</field>
    <field name="url">classUpdater.html#a91e7bdd1442c19e682ec9b3154ee910f</field>
    <field name="keywords">compute_impl Updater::compute_impl Updater compute_impl Updater::compute_impl Updater compute_impl Updater::compute_impl Updater compute_impl Updater::compute_impl Updater compute_impl Updater::compute_impl Updater</field>
    <field name="text">Implementation of computation to update Element::data Implementation of computation to update Element::data Implementation of computation to update Element::data Implementation of computation to update Element::data Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddGyrationRadius</field>
    <field name="url">classAddGyrationRadius.html</field>
    <field name="keywords">AddGyrationRadius</field>
    <field name="text">AddGyrationRadius adds gyration radius to an Element object This class computes radius of gyration of an Element object such as one containing data for molecules from its inertia moment About usage in Python please see src/pybind/adders/py_add_gyration_radius.h Key for property to be added default Rg float Rg y+z float Rg z+x float Rg x+y float Rg(x) float Rg(y) float Rg(z) float Key for property to be added optional Rg^2 float Rg^2 y+z float Rg^2 z+x float Rg^2 x+y float Rg^2 x float Rg^2 y float Rg^2 z float Key for required property mass float I_xx float I_yy float I_zz float</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddGyrationRadius::with_squared</field>
    <field name="args">(bool add_squared_=true)</field>
    <field name="url">classAddGyrationRadius.html#a36cdb31db55a78681aada61ac5651bc9</field>
    <field name="keywords">with_squared AddGyrationRadius::with_squared AddGyrationRadius</field>
    <field name="text">Switch add_squared to true by default add_squared_ A boolean to be assigned to add_squared Shared pointer to this object Please be careful not to call this method in a multithreading context because it is thread-unsafe</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddGyrationRadius::without_sqrted</field>
    <field name="args">(bool without_sqrted_=true)</field>
    <field name="url">classAddGyrationRadius.html#a0919259a47f76c08c86f54156bdb2ac6</field>
    <field name="keywords">without_sqrted AddGyrationRadius::without_sqrted AddGyrationRadius</field>
    <field name="text">Switch add_sqrted to false by default without_sqrted_ A boolean whose negation is assigned to add_sqrted Shared pointer to this object Please be careful not to call this method in a multithreading context because it is thread-unsafe</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddGyrationRadius::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddGyrationRadius.html#a53d9c62c9dbf976b815cb715a9f18a36</field>
    <field name="keywords">compute_impl AddGyrationRadius::compute_impl AddGyrationRadius</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddGyrationRadius::add_squared</field>
    <field name="url">classAddGyrationRadius.html#a85311eba5f5ba556f40f906027685d8f</field>
    <field name="keywords">add_squared AddGyrationRadius::add_squared AddGyrationRadius</field>
    <field name="text">Whether square of the gyration radius is computed default is false Note that an average gyration radius should be computed by square rooting an averaged square of the gyration radius not averaging the gyration radius itself</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddGyrationRadius::add_sqrted</field>
    <field name="url">classAddGyrationRadius.html#a582e3a06805ca0f63119ec3cd1d7fc94</field>
    <field name="keywords">add_sqrted AddGyrationRadius::add_sqrted AddGyrationRadius</field>
    <field name="text">Whether gyration radius not squared is computed default is true Note that an average gyration radius should be computed by square rooting an averaged square of the gyration radius not averaging the gyration radius itself</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddInertiaMoment</field>
    <field name="url">classAddInertiaMoment.html</field>
    <field name="keywords">AddInertiaMoment</field>
    <field name="text">AddInertiaMoment adds inertia moment to an Element object An object of this class computes elements of 3x3 matrix of inertia moment a.k.a inertia matrix inertia tensor of a parent Element object from masses and positions of a child Element object and adds it to the parent object The object of this class owns the child object as ext_generator and is appended to the parent object using its Element::append_updater An example of child is an Element object containing data for atoms and an example of parent is an Element object containing data for molecules The terms child and parent are used because a parent object consists of a child object In terms of time series however the child is created earlier than the parent About usage in Python please see src/pybind/adders/py_add_inertia_moment.h Key for property to be added I_xx float I_yy float I_zz float I_xy float I_xz float I_yz float Key for required property atom-ids array of integers xu float yu float zu float Key for required property in ext_generator id int mass float xu float yu float zu float</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddInertiaMoment::AddInertiaMoment</field>
    <field name="args">(const ElPtr &amp;elem)</field>
    <field name="url">classAddInertiaMoment.html#a7772bb782144b8dab59ea65dffdba6b6</field>
    <field name="keywords">AddInertiaMoment AddInertiaMoment::AddInertiaMoment AddInertiaMoment</field>
    <field name="text">Constructor of AddInertiaMoment class elem Shared pointer to a child object This argument is assigned to ext_generator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddInertiaMoment::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddInertiaMoment.html#a50d3efa11e6c2a8d12c397224679d259</field>
    <field name="keywords">compute_impl AddInertiaMoment::compute_impl AddInertiaMoment</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddInertiaMoment::compute_with_weights</field>
    <field name="args">(Json &amp;data, const ElPtr &amp;el_atoms)</field>
    <field name="url">classAddInertiaMoment.html#a2565ab562dac3c15368e86b88b666bd6</field>
    <field name="keywords">compute_with_weights AddInertiaMoment::compute_with_weights AddInertiaMoment</field>
    <field name="text">Compute the inertia moment with weighting factors data Mutable reference to Element::data where computed properties are added to el_atoms Shared pointer of up-casted ext_generator None Note that the weighting factors are different from something like mass of atoms Weighting factors are artificial values defined with some reason</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddInertiaMoment::compute_without_weights</field>
    <field name="args">(Json &amp;data, const ElPtr &amp;el_atoms)</field>
    <field name="url">classAddInertiaMoment.html#a6b71b7cb75a8b76585a38938bb8ae0a8</field>
    <field name="keywords">compute_without_weights AddInertiaMoment::compute_without_weights AddInertiaMoment</field>
    <field name="text">Compute the inertia moment data Mutable reference to Element::data where computed properties are added to el_atoms Shared pointer of up-casted ext_generator None</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddMap</field>
    <field name="url">classAddMap.html</field>
    <field name="keywords">AddMap</field>
    <field name="text">AddMap adds a new property by mapping from an existing property An object of this class owns a mapping Domain of the mapping consists of values of an existing property of an Element object where the object of this class is appended to Codomain of the mapping consists of values of a new property Note that the domain must cover all values of the existing property About usage in Python please see src/pybind/adders/py_add_map.h Key for property to be added key_new any type Key for required property key_ref any type but in most cases integer or strings</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddMap::AddMap</field>
    <field name="args">(const Str &amp;key_ref_, const Str &amp;key_new_, const Map&lt; Json, Json &gt; &amp;mapping_)</field>
    <field name="url">classAddMap.html#a358ea2d261cc91b117998e0a0d439608</field>
    <field name="keywords">AddMap AddMap::AddMap AddMap</field>
    <field name="text">Constructor of AddMap class key_ref_ A string key for an existing property to be used as domain of mapping This argument is assigned to key_ref key_new_ A string key for a new property to be added This argument is assigned to key_new mapping_ Map from Json to Json defining a mapping process conducted by the constructed object This argument is assigned to mapping Note that domain of the mapping_ must cover all values of property specified by key_ref_ the property belonging to an Element object where the constructed object is appended to</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddMap::overwrite</field>
    <field name="args">(bool do_overwrite_=true)</field>
    <field name="url">classAddMap.html#a272eeaa7e7c0ba549209165f84f9441b</field>
    <field name="keywords">overwrite AddMap::overwrite AddMap</field>
    <field name="text">Switch do_overwrite to true by default do_overwrite_ A boolean to be assigned to do_overwrite Shared pointer to this object Please be careful not to call this method in a multithreading context because it is thread-unsafe</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddMap::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddMap.html#a43e6a1d41af46c02ac2ad813075466cf</field>
    <field name="keywords">compute_impl AddMap::compute_impl AddMap</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddMap::do_overwrite</field>
    <field name="url">classAddMap.html#a4a43db4f8c405c0b82132abd43dbe837</field>
    <field name="keywords">do_overwrite AddMap::do_overwrite AddMap</field>
    <field name="text">Whether overwriting an existing property whose name is the same as new property to be added default is false</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddMap::key_ref</field>
    <field name="url">classAddMap.html#a530136eb5f0014f0ae6ba9cb6d3f4bed</field>
    <field name="keywords">key_ref AddMap::key_ref AddMap</field>
    <field name="text">Key for an existing property domain of the mapping key_ref stands for key referenced from the mapping</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddMap::key_new</field>
    <field name="url">classAddMap.html#abfac8564a9f0c8d7f48cc0ef2b8f533c</field>
    <field name="keywords">key_new AddMap::key_new AddMap</field>
    <field name="text">Key for a new property to be added codomain of the mapping</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddMap::mapping</field>
    <field name="url">classAddMap.html#aee1a76a8ee7e712240d247a5f86460cb</field>
    <field name="keywords">mapping AddMap::mapping AddMap</field>
    <field name="text">Mapping used for determining values of new property This member defines a mapping from values of an existing property specified by key_ref to values of a new property specified by key_new Domain of the mapping consists of values of the existing property in Element::data of an Element object where this object is appended to Codomain of the mapping consists of user-defined values for the new property to be added to the Element::data</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddMolecularOrientation</field>
    <field name="url">classAddMolecularOrientation.html</field>
    <field name="keywords">AddMolecularOrientation</field>
    <field name="text">AddMolecularOrientation adds molecular orientation order parameter to an Element object This class computes orientation a.k.a order parameter of an Element object such as one containing data for molecules from its inertia moment To compute the orientation a direction of eigenvector corresponding the minimum eigenvalue of the inertia moment that is long axis of the molecule is used for each molecule About usage in Python please see src/pybind/adders/py_add_molecular_orientation.h Key for property to be added I_values array of floats eigenvalues of inertia moment I_vectors array of array of floats eigenvectors of inertia moment S_x float S_y float S_z float Key for required property I_xx float I_yy float I_zz float I_xy float I_xz float I_yz float</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddMolecularOrientation::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddMolecularOrientation.html#a886b802585d1dfa299dd9f42e3eef29e</field>
    <field name="keywords">compute_impl AddMolecularOrientation::compute_impl AddMolecularOrientation</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddRename</field>
    <field name="url">classAddRename.html</field>
    <field name="keywords">AddRename</field>
    <field name="text">AddRename renames an existing property An object of this class simply renames an existing property that is copies values of the existing property names the values as a new user-defined name and then deletes the old property About usage in Python please see src/pybind/adders/py_add_rename.h Key for property to be added key_new any type Key for required property key_old any type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddRename::AddRename</field>
    <field name="args">(const Str &amp;key_old_, const Str &amp;key_new_)</field>
    <field name="url">classAddRename.html#a3119359de9028c40ed5fbf24b5fc3a46</field>
    <field name="keywords">AddRename AddRename::AddRename AddRename</field>
    <field name="text">Constructor of AddRename class key_old_ A string key for an existing property to be renamed This argument is assigned to key_old key_new_ A string key by which the old key for the existing property is renamed This argument is assigned to key_new</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddRename::overwrite</field>
    <field name="args">(bool do_overwrite_=true)</field>
    <field name="url">classAddRename.html#a600c0c6383de7ed16387f5be064dac8f</field>
    <field name="keywords">overwrite AddRename::overwrite AddRename</field>
    <field name="text">Switch do_overwrite to true by default do_overwrite_ A boolean to be assigned to do_overwrite Shared pointer to this object Please be careful not to call this method in a multithreading context because it is thread-unsafe</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddRename::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddRename.html#a34e997ee2632a7ef703810ebfbf1aa8d</field>
    <field name="keywords">compute_impl AddRename::compute_impl AddRename</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddRename::do_overwrite</field>
    <field name="url">classAddRename.html#a0fa3d1975fec055f7c3be137f514025a</field>
    <field name="keywords">do_overwrite AddRename::do_overwrite AddRename</field>
    <field name="text">Whether overwriting an existing property whose name is the same as new property to be added default is false</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddRename::key_old</field>
    <field name="url">classAddRename.html#a9cee8b024b290bc2ffa86cf8b91fc92b</field>
    <field name="keywords">key_old AddRename::key_old AddRename</field>
    <field name="text">Key for an existing property to be renamed</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddRename::key_new</field>
    <field name="url">classAddRename.html#a9fcdc6a29437bbccfd265972e7fc50ec</field>
    <field name="keywords">key_new AddRename::key_new AddRename</field>
    <field name="text">New key by which the existing property is renamed</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddSpecialBonds</field>
    <field name="url">classAddSpecialBonds.html</field>
    <field name="keywords">AddSpecialBonds</field>
    <field name="text">AddSpecialBonds adds special bonds The term special bonds is somewhat confusing because one of special bonds is not a bond but for example an atom connected with special bond If an atom has another atom as one of its special bonds the two atoms are considered to interact with each other through some kind of bonded potential(s) An object of this class has a molecular Element object as ext_generator and is appended to an atomic or bead Element object The object of this class owns schemes for special bonds for each type of molecule a scheme is something like a list of special bonds of atoms in one molecule About usage in Python please see src/pybind/adders/py_add_special_bonds.h Key for property to be added special-bonds array of integers Key for required property atom-ids array of integers</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddSpecialBonds::AddSpecialBonds</field>
    <field name="args">(const ElPtr &amp;el_mols, const Vec&lt; Vec&lt; int &gt;&gt; &amp;scheme)</field>
    <field name="url">classAddSpecialBonds.html#a0f8fc9908ed16650778fad41640097a8</field>
    <field name="keywords">AddSpecialBonds AddSpecialBonds::AddSpecialBonds AddSpecialBonds</field>
    <field name="text">Constructor of AddSpecialBonds class for one molecular type el_mols Shared pointer to a molecular Element object consisting of an atomic or bead Element object where the constructed object is appended to This argument is assigned to ext_generator scheme Vec of Vec of zero-based index of atoms in a molecule This argument is stored in mol_type_to_sbondses_in_mol as a scheme for molecular type 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddSpecialBonds::AddSpecialBonds</field>
    <field name="args">(const ElPtr &amp;el_mols, const Map&lt; int, Vec&lt; Vec&lt; int &gt;&gt;&gt; &amp;schemes)</field>
    <field name="url">classAddSpecialBonds.html#ab61e60bad28616e316ad0e80c5030a17</field>
    <field name="keywords">AddSpecialBonds AddSpecialBonds::AddSpecialBonds AddSpecialBonds</field>
    <field name="text">Constructor of AddSpecialBonds class for multiple molecular types el_mols Shared pointer to a molecular Element object consisting of an atomic or bead Element object where the constructed object is appended to This argument is assigned to ext_generator schemes Map from molecular type to Vec of Vec of zero-based index of atoms in a molecule This argument is assigned to mol_type_to_sbondses_in_mol</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddSpecialBonds::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddSpecialBonds.html#ac8f026ec0d609bf9bbc98d5c7899a13b</field>
    <field name="keywords">compute_impl AddSpecialBonds::compute_impl AddSpecialBonds</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">AddSpecialBonds::mol_type_to_sbondses_in_mol</field>
    <field name="url">classAddSpecialBonds.html#ac25904a7316c0f6db9ceb2c0375fddab</field>
    <field name="keywords">mol_type_to_sbondses_in_mol AddSpecialBonds::mol_type_to_sbondses_in_mol AddSpecialBonds</field>
    <field name="text">Schemes of special bonds for each molecular type Description of special bonds is stored as a map dictionary from molecular type to vector of vectors list of lists of zero-based index of atoms in a molecule of that type The first vector corresponds atoms in a molecule and the second vector corresponds special bonds of each atom</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">AddWrappedPosition</field>
    <field name="url">classAddWrappedPosition.html</field>
    <field name="keywords">AddWrappedPosition</field>
    <field name="text">AddWrappedPosition adds wrapped positions of an Element object Wrapping is a process to resolve periodic boundary condition wrapped positions are in the original simulation box About usage in Python please see src/pybind/adders/py_add_wrapped_position.h Key for property to be added x float y float z float Key for required property xu float yu float zu float Key for required property in ext_generator lo_x float lo_y float lo_z float hi_x float hi_y float hi_z float</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddWrappedPosition::AddWrappedPosition</field>
    <field name="args">(const ElPtr &amp;elem)</field>
    <field name="url">classAddWrappedPosition.html#af82c7e41a330a37a9cdcf6ee51a646a0</field>
    <field name="keywords">AddWrappedPosition AddWrappedPosition::AddWrappedPosition AddWrappedPosition</field>
    <field name="text">Constructor of AddWrappedPosition class elem Shared pointer to an Element object representing the simulation box This argument is assigned to ext_generator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">AddWrappedPosition::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classAddWrappedPosition.html#af5ea4e6203dc8db97b8a8f73b2d83822</field>
    <field name="keywords">compute_impl AddWrappedPosition::compute_impl AddWrappedPosition</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">DataKeys</field>
    <field name="url">classDataKeys.html</field>
    <field name="keywords">DataKeys</field>
    <field name="text">DataKeys is a small class owning a set of string keys in Element::data An object of this class is owned by an Element object and used for checking existence of keys for properties in the Element::data quickly Note that checking keys against the Element::data itself is a time consuming process if it is a large array Json</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DataKeys::DataKeys</field>
    <field name="args">()=default</field>
    <field name="url">classDataKeys.html#aa676b147d2cda9e22b05d66111e03c5c</field>
    <field name="keywords">DataKeys DataKeys::DataKeys DataKeys</field>
    <field name="text">Constructor of DataKeys class default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DataKeys::clear</field>
    <field name="args">()</field>
    <field name="url">classDataKeys.html#a4d5c1a42ff2828801167098e658fa578</field>
    <field name="keywords">clear DataKeys::clear DataKeys</field>
    <field name="text">Clear _keys None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DataKeys::set</field>
    <field name="args">(const Set&lt; Str &gt; &amp;keys)</field>
    <field name="url">classDataKeys.html#a302caba902c11e18d4bccb1006284763</field>
    <field name="keywords">set DataKeys::set DataKeys</field>
    <field name="text">Set a given set of keys as _keys keys Set of string keys to be assigned to _keys None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DataKeys::add</field>
    <field name="args">(const Json &amp;key_)</field>
    <field name="url">classDataKeys.html#a626d56b99861008c2a63580ed17b809d</field>
    <field name="keywords">add DataKeys::add DataKeys</field>
    <field name="text">Add key(s) in an array to _keys key_ Json for either a key or an array of keys to be added None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DataKeys::remove</field>
    <field name="args">(const Json &amp;key_)</field>
    <field name="url">classDataKeys.html#ac06bc8ecc2ff5a774c358f85df959b19</field>
    <field name="keywords">remove DataKeys::remove DataKeys</field>
    <field name="text">Remove key(s) in an array from _keys key_ Json for either a key or an array of keys to be removed None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DataKeys::required</field>
    <field name="args">(const Json &amp;key_)</field>
    <field name="url">classDataKeys.html#a03517cffe825c983c3582ffb55318a7b</field>
    <field name="keywords">required DataKeys::required DataKeys</field>
    <field name="text">Check if this object has required key(s) key_ Json for either a key or an array of keys for required property None If this object does not have the given required key(s) a runtime error is thrown in C++ and also raised in Python</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DataKeys::optional</field>
    <field name="args">(const Json &amp;key_)</field>
    <field name="url">classDataKeys.html#a83c539d93200a30f57d0d795c68ee5a2</field>
    <field name="keywords">optional DataKeys::optional DataKeys</field>
    <field name="text">Check if this object has optional key(s) key_ Json for either a key or an array of keys for optional property Boolean If this object has the given key(s) it returns true If not it returns false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">DataKeys::get</field>
    <field name="args">()</field>
    <field name="url">classDataKeys.html#ab29d313282fe7c52adfa35b8335f3ca6</field>
    <field name="keywords">get DataKeys::get DataKeys</field>
    <field name="text">Get a constant reference to _keys A constant reference to Set Str</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">DataKeys::_keys</field>
    <field name="url">classDataKeys.html#a8ba15555dcfdee7a18206606d675ac83</field>
    <field name="keywords">_keys DataKeys::_keys DataKeys</field>
    <field name="text">A set of string keys in Element::data Do not forget to add key(s) to this member manually when new item(s) is added to Element::data</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Element</field>
    <field name="url">classElement.html</field>
    <field name="keywords">Element</field>
    <field name="text">Element is a Generator containing data element or entity as a Json object This class inherits Generator class and EnShThis Element Element class is different from Generator GenDict and GenList by owning data element or entity The data is stored as data and a set of keys for properties in the data is stored as datakeys Note that data can be either an array Json object or a non-array Json object A non-array Json object consists of items pairs of a string key and int/bool/double/string/array value The key represents a property name For array data it contains non-array Json objects Each non-array Json object should have the same set of keys this set is the one stored as datakeys An object of this class can update its own data and datakeys by calling its update_data where mutable references of the data and datakeys are passed to an Updater object paired as UpdatePair About usage in Python please see src/pybind/py_element.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::Element</field>
    <field name="args">()</field>
    <field name="url">classElement.html#ab0d0e20be9a36ae676202db753faeec9</field>
    <field name="keywords">Element Element::Element Element Element Element::Element Element</field>
    <field name="text">Constructor of Element class This constructor is thread-unsafe because it accesses its members thread-globally Ensure this constructor is not called in a multithreading context Constructor of Element class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_element</field>
    <field name="args">(const Json &amp;name=nullptr) override</field>
    <field name="url">classElement.html#ab12675e00173496f85052d82f334f395</field>
    <field name="keywords">get_element Element::get_element Element</field>
    <field name="text">Get this object as a shared pointer of Element class name Json default is nullptr Shared pointer to this Element object One needs to get as Element when using this data The argument name must be left as default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_generator</field>
    <field name="args">(const Json &amp;name=nullptr) override</field>
    <field name="url">classElement.html#a5474cb60706c92e37268ac4c3ff2c46b</field>
    <field name="keywords">get_generator Element::get_generator Element</field>
    <field name="text">Get this object as a shared pointer of Generator class name Json default is nullptr Shared pointer to this object up-casted to Generator One needs to get as Generator when storing this object The argument name must be left as default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::append_updater</field>
    <field name="args">(const ShPtr&lt; Updater &gt; &amp;upd)</field>
    <field name="url">classElement.html#adc43106f0ea5e11d03105c40df1fe0a8</field>
    <field name="keywords">append_updater Element::append_updater Element append_updater Element::append_updater Element</field>
    <field name="text">Append an Updater object to this Element object upd Shared pointer to an Updater object Shared pointer of this Element object To update the data one needs to create an Updater object and then appends it to an Element object using this method In this method Generator::update_chain stored in Updater::ext_generator of the upd is merged to Generator::update_chain of this object then an UpdatePair consisting of this object and the upd is appended to Generator::update_chain of this object Append an Updater object to this Element object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_data</field>
    <field name="args">()</field>
    <field name="url">classElement.html#a47096a22005245db075143ff1ee1981c</field>
    <field name="keywords">get_data Element::get_data Element get_data Element::get_data Element</field>
    <field name="text">Get the reference to data of this object Constant reference to Json One can refer the whole data stored in this object by this method Get the reference to data of this object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_data</field>
    <field name="args">(const Json &amp;key_)</field>
    <field name="url">classElement.html#a5881587aff2e2425e3110f35241e5ce8</field>
    <field name="keywords">get_data Element::get_data Element get_data Element::get_data Element</field>
    <field name="text">Get the partial data of this object key_ Json for either a key or an array of keys Json not a reference One can get the partial data stored in this object by this method To select which property is included in returned Json pass a string key for the property as key_ Get the partial data of this object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_keys</field>
    <field name="args">()</field>
    <field name="url">classElement.html#a060b21b533cc1deb92e666653a89f229</field>
    <field name="keywords">get_keys Element::get_keys Element get_keys Element::get_keys Element</field>
    <field name="text">Get keys of the data of this object Constant reference to DataKeys One can refer the keys property names in the data by this method Get keys of the data of this object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::array1d</field>
    <field name="args">(T &amp;array, const Str &amp;key)</field>
    <field name="url">classElement.html#a576395d61902a76979ffd336afa714b3</field>
    <field name="keywords">array1d Element::array1d Element array1d Element::array1d Element</field>
    <field name="text">Extract values of a property in data as an one-dimensional Eigen-Array array Mutable reference to ArrayXi or ArrayXd key A string key for a property to be extracted None If one passed ArrayXi or ArrayXd as a reference this method fills it by values of a property specified by key Extract values of a property in data as an one-dimensional Eigen-Array</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::array2d</field>
    <field name="args">(T &amp;array, const Vec&lt; Str &gt; &amp;keys)</field>
    <field name="url">classElement.html#a4c2fcdb60e23dedce2b54b9deeadc469</field>
    <field name="keywords">array2d Element::array2d Element array2d Element::array2d Element</field>
    <field name="text">Extract values of properties in data as a two-dimensional Eigen-Array array Mutable reference to ArrayXXi or ArrayXXd keys Vec of string keys for properties to be extracted None If one passed ArrayXXi or ArrayXXd as a reference this method fills it by values of some properties specified by keys Extract values of properties in data as a two-dimensional Eigen-Array</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::required</field>
    <field name="args">(const Json &amp;key_)</field>
    <field name="url">classElement.html#a2dd2b3ed6f76878ae6cc1c1a36183517</field>
    <field name="keywords">required Element::required Element required Element::required Element</field>
    <field name="text">Wrapper for DataKeys::required key_ Json for either a key or an array of keys None It is convenient if DataKeys::required can be called without getting DataKeys object from this Element object For more details please see DataKeys class Wrapper for DataKeys::required</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::optional</field>
    <field name="args">(const Json &amp;key_)</field>
    <field name="url">classElement.html#a0d0123e7fa1a7b96fb0ac271c0837a7d</field>
    <field name="keywords">optional Element::optional Element optional Element::optional Element</field>
    <field name="text">Wrapper for DataKeys::optional key_ Json for either a key or an array of keys bool It is convenient if DataKeys::optional can be called without getting DataKeys object from this Element object For more details please see DataKeys class Wrapper for DataKeys::optional</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_data_py</field>
    <field name="args">()</field>
    <field name="url">classElement.html#a62989090a40d237e617bc6e5f5087388</field>
    <field name="keywords">get_data_py Element::get_data_py Element get_data_py Element::get_data_py Element</field>
    <field name="text">Wrapper for get_data method which returns a reference Constant reference to Json This method provides a functionality to access data directly from Python An updating process associated with this object is executed before getting the data Wrapper for get_data method which returns a reference</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_keys_py</field>
    <field name="args">()</field>
    <field name="url">classElement.html#ae253cbec6307a157902d7f25867ded2b</field>
    <field name="keywords">get_keys_py Element::get_keys_py Element get_keys_py Element::get_keys_py Element</field>
    <field name="text">Wrapper for get_keys method Constant reference to Set Str This method provides a functionality to access datakeys directly from Python An updating process associated with this object is executed before getting the set of keys Wrapper for get_keys method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_1d_int_py</field>
    <field name="args">(const Str &amp;key)</field>
    <field name="url">classElement.html#a8257b02b1e3b208f193b35d5d47b9af8</field>
    <field name="keywords">get_1d_int_py Element::get_1d_int_py Element get_1d_int_py Element::get_1d_int_py Element</field>
    <field name="text">Wrapper for array1d method for integer values key A string key specifying a property ArrayXi Numpy-Array in Python This method provides a functionality to access values stored in data directly from Python as an one-dimensional array An updating process associated with this object is executed before getting the array Wrapper for array1d method for integer values</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_1d_float_py</field>
    <field name="args">(const Str &amp;key)</field>
    <field name="url">classElement.html#a3f11848589faad4cbca8119385887713</field>
    <field name="keywords">get_1d_float_py Element::get_1d_float_py Element get_1d_float_py Element::get_1d_float_py Element</field>
    <field name="text">Wrapper for array1d method for float double in C++ values key A string key specifying a property ArrayXd Numpy-Array in Python This method provides a functionality to access values stored in data directly from Python as an one-dimensional array An updating process associated with this object is executed before getting the array Wrapper for array1d method for float double in C++ values</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_2d_int_py</field>
    <field name="args">(const py::args &amp;args)</field>
    <field name="url">classElement.html#a8e8245fb94b6417e3e804e6bfdf2f906</field>
    <field name="keywords">get_2d_int_py Element::get_2d_int_py Element get_2d_int_py Element::get_2d_int_py Element</field>
    <field name="text">Wrapper for array2d method for integer values args An ordered list of keys specifying properties in Python ArrayXXi Numpy-Array in Python This method provides a functionality to access values stored in data directly from Python as a two-dimensional array An updating process associated with this object is executed before getting the array Wrapper for array2d method for integer values</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::get_2d_float_py</field>
    <field name="args">(const py::args &amp;args)</field>
    <field name="url">classElement.html#a6a62280eadd3d4e6bfe8c43082797733</field>
    <field name="keywords">get_2d_float_py Element::get_2d_float_py Element get_2d_float_py Element::get_2d_float_py Element</field>
    <field name="text">Wrapper for array2d method for float double in C++ values args An ordered list of keys specifying properties in Python ArrayXXd Numpy-Array in Python This method provides a functionality to access values stored in data directly from Python as a two-dimensional array An updating process associated with this object is executed before getting the array Wrapper for array2d method for float double in C++ values</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Generator::appoint</field>
    <field name="args">()</field>
    <field name="url">classGenerator.html#a26b5fae1411adc475d862e1c35dffae0</field>
    <field name="keywords">appoint Generator::appoint Generator appoint Generator::appoint Generator appoint Generator::appoint Generator appoint Generator::appoint Generator appoint Generator::appoint Generator</field>
    <field name="text">Appoint to this object Appoint to this object Appoint to this object None Appointing means calling Element::increment_remain of all the Element objects contained in update_chain Appoint to this object Appoint to this object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Generator::hello</field>
    <field name="args">()</field>
    <field name="url">classGenerator.html#ac4648b055ee0e51c1e68ea084156c222</field>
    <field name="keywords">hello Generator::hello Generator hello Generator::hello Generator hello Generator::hello Generator hello Generator::hello Generator hello Generator::hello Generator</field>
    <field name="text">Hello to this object Hello to this object Hello to this object None Greeting means calling Element::update_data for all the UpdatePair objects in update_chain that is executing the updating process associated with this object By executing this method Element::data in this Element object or Element objects in this GenDict or GenList object is ready to be used filled with values Hello to this object Hello to this object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Generator::goodbye</field>
    <field name="args">()</field>
    <field name="url">classGenerator.html#ad73afe8839404d7834d471b8bb3dfe02</field>
    <field name="keywords">goodbye Generator::goodbye Generator goodbye Generator::goodbye Generator goodbye Generator::goodbye Generator goodbye Generator::goodbye Generator goodbye Generator::goodbye Generator</field>
    <field name="text">Goodbye to this object Goodbye to this object Goodbye to this object None Saying goodbye means calling Element::decrement_remain of all the Element objects contained in update_chain Goodbye to this object Goodbye to this object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Generator::get_update_chain</field>
    <field name="args">()</field>
    <field name="url">classGenerator.html#aac65fc48a12c0ea6e7f87717d1779d1a</field>
    <field name="keywords">get_update_chain Generator::get_update_chain Generator get_update_chain Generator::get_update_chain Generator get_update_chain Generator::get_update_chain Generator get_update_chain Generator::get_update_chain Generator get_update_chain Generator::get_update_chain Generator</field>
    <field name="text">Get update_chain of this object Get update_chain of this object Get update_chain of this object Constant reference to Vec UpdatePair This method is mainly used in Element::append_updater to access update_chain of Updater::ext_generator Get update_chain of this object Get update_chain of this object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::increment_remain</field>
    <field name="args">()</field>
    <field name="url">classElement.html#ae1c4dcf96ca096946908821d6079e97e</field>
    <field name="keywords">increment_remain Element::increment_remain Element</field>
    <field name="text">This method increments n_remain None Please see decrement_remain</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::decrement_remain</field>
    <field name="args">()</field>
    <field name="url">classElement.html#a9ff7a4e19165faa6da26635d9145b46b</field>
    <field name="keywords">decrement_remain Element::decrement_remain Element</field>
    <field name="text">This method decrements n_remain None If one increments n_remain of this object before using data and then decrements it after using it the data is cleared to save memory This system is convenient to access data multiple times while saving memory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::update_data</field>
    <field name="args">(const ShPtr&lt; Updater &gt; &amp;upd)</field>
    <field name="url">classElement.html#aae8f7d596f055b36ea44206bbef38c73</field>
    <field name="keywords">update_data Element::update_data Element</field>
    <field name="text">This method updates data of this object upd Shared pointer to an Updater object updating the data None This method updates data using an object of Updater taken as upd This object and the Updater object are paired as UpdatePair by append_updater in advance In this method mutable references of the data and datakeys are passed to Updater::compute of the Updater object The dataid is also passed to the Updater object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Element::init_for_python</field>
    <field name="args">()</field>
    <field name="url">classElement.html#a1fdb9455f49d2c66a0276925f7246cad</field>
    <field name="keywords">init_for_python Element::init_for_python Element</field>
    <field name="text">Routines to be conducted when a wrapper of getter is called from Python None This method runs updating process associated with this object so that a wrapper of getter can access the filled data</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Element::n_remain</field>
    <field name="url">classElement.html#a678d35749bc335254f3fd4a4cc135d83</field>
    <field name="keywords">n_remain Element::n_remain Element</field>
    <field name="text">The number of times this object will be used in the future This member can be incremented by increment_remain and decremented by decrement_remain If this member becomes 0 in decrement_remain data is cleared to save memory</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Element::dataid</field>
    <field name="url">classElement.html#a644085ed8d59a6835d218b7651ceb4c3</field>
    <field name="keywords">dataid Element::dataid Element</field>
    <field name="text">Unique ID for an object of Element class This member is used to prevent duplication of updating process of data For more details please see Updater class</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Element::data</field>
    <field name="url">classElement.html#a2a7cd44abcb0c90a9c5035584bc92ac5</field>
    <field name="keywords">data Element::data Element</field>
    <field name="text">Data element or entity itself This member is a Json object which is a very flexible data container consisting of hierarchically organized items pairs of a string key and int/bool/double/string/array value Thanks to this flexibility this class can store data for box atoms molecules beads cube and more!!</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Element::datakeys</field>
    <field name="url">classElement.html#a141b8b8adc3aa5c9b3d6c3262c36a7c4</field>
    <field name="keywords">datakeys Element::datakeys Element</field>
    <field name="text">Set of keys of the data This member stores string keys data has For more details please see DataKeys class Note that after updating the data the set of keys must be manually updated add/remove keys in Updater or its subclasses</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Element::omp_lock</field>
    <field name="url">classElement.html#a6899e560e3f3c1fefcf44d37e4e99522</field>
    <field name="keywords">omp_lock Element::omp_lock Element</field>
    <field name="text">A variable used by OpenMP In this program data is updated in a multithreading context To prevent the data from being updated from multiple threads at the same time this member must be locked in update_data increment_remain and decrement_remain</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Element::instance_count</field>
    <field name="url">classElement.html#a814393093779993a8ecbc961e16fdd32</field>
    <field name="keywords">instance_count Element::instance_count Element</field>
    <field name="text">The number of created objects a.k.a instances of Element class This member is only used for setting dataid</field>
  </doc>
  <doc>
    <field name="type">friend</field>
    <field name="name">Element::Generator</field>
    <field name="url">classElement.html#a366b7823e659ab78d952a7d79662a4d6</field>
    <field name="keywords">Generator Element::Generator Element</field>
    <field name="text">To use increment_remain decrement_remain and update_data Generator needs to be a friend class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Generator::merge_update_chain</field>
    <field name="args">(const Vec&lt; UpdatePair &gt; &amp;new_chain)</field>
    <field name="url">classGenerator.html#a540c397ab90d552e413ddfa4bf5e51cc</field>
    <field name="keywords">merge_update_chain Generator::merge_update_chain Generator merge_update_chain Generator::merge_update_chain Generator merge_update_chain Generator::merge_update_chain Generator merge_update_chain Generator::merge_update_chain Generator merge_update_chain Generator::merge_update_chain Generator</field>
    <field name="text">Merge a given chain of UpdatePair objects to update_chain Merge a given chain of UpdatePair objects to update_chain Merge a given chain of UpdatePair objects to update_chain new_chain Vec of UpdatePair objects to be merged None In merging a chain of UpdatePair objects relative orders of UpdatePair objects in the new_chain and update_chain are retained so that dependency order of the updating process will be preserved During the merging duplication of UpdatePair objects will be removed If there is no explicit preference elements in the new_chain will be appended to the end of update_chain This method is thread-unsafe because it accesses update_chain thread-globally Ensure this method is not called in a multithreading context Merge a given chain of UpdatePair objects to update_chain Merge a given chain of UpdatePair objects to update_chain</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Generator::update_chain</field>
    <field name="url">classGenerator.html#ac187dba6169f8ec15c15705f19e55ecf</field>
    <field name="keywords">update_chain Generator::update_chain Generator update_chain Generator::update_chain Generator update_chain Generator::update_chain Generator update_chain Generator::update_chain Generator update_chain Generator::update_chain Generator</field>
    <field name="text">Chain sequence of UpdatePair objects It describes a process how Element::data is generated and updated Chain sequence of UpdatePair objects It describes a process how Element::data is generated and updated Chain sequence of UpdatePair objects It describes a process how Element::data is generated and updated This chain of UpdatePair objects is executed one by one using hello In this updating process the Element objects the first items of UpdatePair uses the Updater objects the second items of UpdatePair to update their Element::data This member can be extended only in Element::append_updater Chain sequence of UpdatePair objects It describes a process how Element::data is generated and updated Chain sequence of UpdatePair objects It describes a process how Element::data is generated and updated</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">FilComparison</field>
    <field name="url">classFilComparison.html</field>
    <field name="keywords">FilComparison</field>
    <field name="text">FilComparison applies a filter defined by comparison operators An object of this class has a filter defined by comparisons which is a list consisting of tuples where the first element is a string key the second element is a comparison operator and the third element is a right side value of an inequality or equation An item of Element::data can pass this filter only if every value for every key for comparisons satisfies an inequality consisting of the corresponding comparison operator and right side value the second and third elements of comparisons Note that value(s) of the item is taken as left side value of the inequality About usage in Python please see src/pybind/filters/py_fil_comparison.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FilComparison::FilComparison</field>
    <field name="args">(const std::tuple&lt; Str, Str, Json &gt; &amp;comparison_)</field>
    <field name="url">classFilComparison.html#a8745e2f1f5e800300ee23cad73ad4ddf</field>
    <field name="keywords">FilComparison FilComparison::FilComparison FilComparison</field>
    <field name="text">Constructor of FilComparison class comparison_ A 3-elements tuple consisting of a string key comparison operator and right side value of an inequality or equation This argument is appended to comparisons Note that the first element of comparison_ string key must be included in Element::datakeys of an Element object where this object appended to</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FilComparison::FilComparison</field>
    <field name="args">(const Vec&lt; std::tuple&lt; Str, Str, Json &gt;&gt; &amp;comparisons_)</field>
    <field name="url">classFilComparison.html#a9cf71f7c1e48cb3412fe473d1753450d</field>
    <field name="keywords">FilComparison FilComparison::FilComparison FilComparison</field>
    <field name="text">Constructor of FilComparison class comparisons_ Vec of 3-elements tuples consisting of a string key comparison operator and right side value of an inequality or equation This argument is assigned to comparisons Note that the first element of each tuple in comparisons_ must be included in Element::datakeys of an Element object where this object appended to</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Filter::compute</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys, const int dataid) override</field>
    <field name="url">classFilter.html#acd658aa335c8b5215242737aabcf5155</field>
    <field name="keywords">compute Filter::compute Filter compute Filter::compute Filter compute Filter::compute Filter</field>
    <field name="text">Filter elements from array Element::data given as a mutable reference Filter elements from array Element::data given as a mutable reference Filter elements from array Element::data given as a mutable reference data Mutable reference to Element::data to be filtered datakeys Mutable reference to Element::datakeys dataid Constant integer copied from Element::dataid None This method checks if dataid is in dataid_blacklist If it is not in the blacklist this method passes data and datakeys to Filter::compute_impl Due to the nature of filtering where each element is not be modified datakeys remains unchanged Note that actual filtering process is conducted by Filter::compute_impl orveridden in subclasses of this class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Filter::Updater</field>
    <field name="args">()</field>
    <field name="url">classFilter.html#ae5e87ea9ea0f6f31de04f93cd1819549</field>
    <field name="keywords">Updater Filter::Updater Filter Updater Filter::Updater Filter Updater Filter::Updater Filter</field>
    <field name="text">Constructor of Filter class inherited Constructor of Filter class inherited Constructor of Filter class inherited</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FilComparison::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classFilComparison.html#af7dc169cdedf15e6b8dc355cc973e90f</field>
    <field name="keywords">compute_impl FilComparison::compute_impl FilComparison</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FilComparison::make_lambda</field>
    <field name="args">(const Str &amp;oper, const Json &amp;rval)</field>
    <field name="url">classFilComparison.html#ad19575c3d6f52a1d12b064ba0f1e006e</field>
    <field name="keywords">make_lambda FilComparison::make_lambda FilComparison</field>
    <field name="text">Make a CompareFunc object from a comparison operator and a right side value oper A string representing a comparison operator One of and rval A right side value Since it is Json it can be either an integer or a float CompareFunc a function evaluating an inequality or equation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FilComparison::convert_to_funcs</field>
    <field name="args">(const Vec&lt; std::tuple&lt; Str, Str, Json &gt;&gt; &amp;comps)</field>
    <field name="url">classFilComparison.html#a7300b226ef91df3cdabf2799129a979d</field>
    <field name="keywords">convert_to_funcs FilComparison::convert_to_funcs FilComparison</field>
    <field name="text">Convert tuples in comparisons to pairs of a string key and CompareFunc comps comparisons Constant Vec std::pair Str CompareFunc which describes criteria of this filter Returned value of this method is used for evaluating inequalities consisting of the second and third elements of tuples contained in comparisons Note that this method should not be called from constructor because of possibility of throwing and raising a runtime error</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FilComparison::comparisons</field>
    <field name="url">classFilComparison.html#a71516c6421c11b202c15f1699723bbc1</field>
    <field name="keywords">comparisons FilComparison::comparisons FilComparison</field>
    <field name="text">Vec list describing criteria of this filter Elements of the list are 3-elements tuples Note that the first element of each tuple is a key and the key must be contained in Element::datakeys of an Element object where this object appended to Note that the reason not using Map is to allow duplicate keys</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">FilSet</field>
    <field name="url">classFilSet.html</field>
    <field name="keywords">FilSet</field>
    <field name="text">FilSet applies a filter defined by sets of acceptable values An object of this class has a filter defined by value_sets which is a dictionary consisting of pairs of a string key and a set of acceptable values An element of Element::data can pass this filter only if every value for every key for value_sets is included in the corresponding set a value of value_sets About usage in Python please see src/pybind/filters/py_fil_set.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FilSet::FilSet</field>
    <field name="args">(const Map&lt; Str, Set&lt; Json &gt;&gt; &amp;value_sets_)</field>
    <field name="url">classFilSet.html#a03110c742aa93891c4e3fdb59499bb8a</field>
    <field name="keywords">FilSet FilSet::FilSet FilSet</field>
    <field name="text">Constructor of FilSet class value_sets_ Map from a string key for property to acceptable values of that property This argument is assigned to value_sets Note that keys in the value_sets_ must be included in Element::datakeys of an Element object where this object appended to</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">FilSet::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classFilSet.html#a0335614b1856870777ab1af370406fd2</field>
    <field name="keywords">compute_impl FilSet::compute_impl FilSet</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">FilSet::value_sets</field>
    <field name="url">classFilSet.html#ae7d1e9a219ce00098498213c0af4bf26</field>
    <field name="keywords">value_sets FilSet::value_sets FilSet</field>
    <field name="text">Map dictionary describing criteria of this filter Note that keys of this dictionary must be a partial set of Element::datakeys of an Element object where this object appended to</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Filter</field>
    <field name="url">classFilter.html</field>
    <field name="keywords">Filter</field>
    <field name="text">Filter removes elements from array Element::data if the elements fail user-defined criteria This class inherits Updater class and overrides Updater::compute This class is an abstract class and has a pure virtual function Filter::compute_impl Name of subclass of this class should be prefixed by Fil Note that Filter do nothing for non-array Element::data</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">GenDict</field>
    <field name="url">classGenDict.html</field>
    <field name="keywords">GenDict</field>
    <field name="text">GenDict is a dictionary or map of Generator objects This class is a subclass of Generator class and stores an arbitrary number of Generator objects as a dictionary map of shared pointers of Generator class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenDict::GenDict</field>
    <field name="args">(const Map&lt; Str, ShPtr&lt; Generator &gt;&gt; &amp;generator_dict_)</field>
    <field name="url">classGenDict.html#a658c404044ae2dbf9bfe1564a6f2977c</field>
    <field name="keywords">GenDict GenDict::GenDict GenDict</field>
    <field name="text">Constructor of GenDict class generator_dict_ Dictionary of shared pointers of Generator class This argument is assigned to generator_dict This constructor is thread-unsafe because it accesses its members thread-globally Ensure this constructor is not called in a multithreading context</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenDict::get_element</field>
    <field name="args">(const Json &amp;name=nullptr) override</field>
    <field name="url">classGenDict.html#ae1c5bb525375ebba3427367a9b98fd7e</field>
    <field name="keywords">get_element GenDict::get_element GenDict</field>
    <field name="text">Get a value in generator_dict as a shared pointer of Element class name A string key in generator_dict A value of generator_dict up-casted to Element class One needs to get a value of generator_dict as Element when using its Element::data The argument name must be a string which is a key for the value in generator_dict</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenDict::get_generator</field>
    <field name="args">(const Json &amp;name=nullptr) override</field>
    <field name="url">classGenDict.html#a8762308e25e392c38e4c3672ee5cd2eb</field>
    <field name="keywords">get_generator GenDict::get_generator GenDict</field>
    <field name="text">Get a value in generator_dict as a shared pointer of Generator class name A string key in generator_dict A value of generator_dict One needs to get a value of generator_dict as Generator when storing that object The argument name must be a string which is a key for the value in generator_dict</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenDict::get_keys</field>
    <field name="args">()</field>
    <field name="url">classGenDict.html#a8df53852721a959db2d8136cf9e86246</field>
    <field name="keywords">get_keys GenDict::get_keys GenDict</field>
    <field name="text">Get a set of the keys of generator_dict Set of strings</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">GenDict::generator_dict</field>
    <field name="url">classGenDict.html#ad9aa3218f199683f3193b770148638ab</field>
    <field name="keywords">generator_dict GenDict::generator_dict GenDict</field>
    <field name="text">Dictionary of shared pointers of Generator class keys are strings and values are shared pointers The values can be a pointer to Element up-casted to a shared pointer of Generator class</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Generator</field>
    <field name="url">classGenerator.html</field>
    <field name="keywords">Generator</field>
    <field name="text">Generator is an abstract class to generate data This class is a superclass of Element class This class stores a chain sequence of UpdatePair objects which describes a process how Element::data will be generated and updated In addition by using GenDict and GenList class which are subclasses of this class one can group Element objects in one Generator object and control all updating processes associated with the Element objects</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Generator::get_element</field>
    <field name="args">(const Json &amp;name=nullptr)=0</field>
    <field name="url">classGenerator.html#a81a0f591e4d004c5f8937807a7573497</field>
    <field name="keywords">get_element Generator::get_element Generator</field>
    <field name="text">Get a shared pointer of Element class This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Generator::get_generator</field>
    <field name="args">(const Json &amp;name=nullptr)=0</field>
    <field name="url">classGenerator.html#a76231ee9835f9b21951630e7909816e1</field>
    <field name="keywords">get_generator Generator::get_generator Generator</field>
    <field name="text">Get a shared pointer of Generator class This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">GenList</field>
    <field name="url">classGenList.html</field>
    <field name="keywords">GenList</field>
    <field name="text">GenList is a list or vector of Generator objects This class is a subclass of Generator class and stores an arbitrary number of Generator object as a list vector of shared pointers of Generator class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenList::GenList</field>
    <field name="args">(const Vec&lt; ShPtr&lt; Generator &gt;&gt; &amp;generator_list_)</field>
    <field name="url">classGenList.html#a52312e9310f32ffe141e661409ab3a59</field>
    <field name="keywords">GenList GenList::GenList GenList</field>
    <field name="text">Constructor of GenList class generator_list_ List of shared pointers of Generator class This argument is assigned to generator_list This constructor is thread-unsafe because it accesses its members thread-globally Ensure this constructor is not called in a multithreading context</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenList::get_element</field>
    <field name="args">(const Json &amp;name=nullptr) override</field>
    <field name="url">classGenList.html#aca8f4c0c3ff7e95f74864afb5ddc1888</field>
    <field name="keywords">get_element GenList::get_element GenList</field>
    <field name="text">Get an element of generator_list as a shared pointer of Element class name An index in generator_list An element of generator_list up-casted to Element class One needs to get an element of generator_list as Element when using its Element::data The argument name must be an integer which is an index in the generator_list</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenList::get_generator</field>
    <field name="args">(const Json &amp;name=nullptr) override</field>
    <field name="url">classGenList.html#a415cfc1b9b18024ba9f20fa94caacb39</field>
    <field name="keywords">get_generator GenList::get_generator GenList</field>
    <field name="text">Get an element of generator_list as a shared pointer of Generator class name An index in generator_list An element of generator_list One needs to get an element of generator_list as Generator when storing that object The argument name must be an integer which is an index of the generator_list</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">GenList::get_length</field>
    <field name="args">()</field>
    <field name="url">classGenList.html#a3d90767ee64acbd33d7432c47dd6abf5</field>
    <field name="keywords">get_length GenList::get_length GenList</field>
    <field name="text">Get a length of generator_list Integer</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">GenList::generator_list</field>
    <field name="url">classGenList.html#a300d347c49a8d1cf5e49a7307fa85ae0</field>
    <field name="keywords">generator_list GenList::generator_list GenList</field>
    <field name="text">List of shared pointers of Generator class The element can be a pointer to Element up-casted to a shared pointer of Generator</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Invoker</field>
    <field name="url">classInvoker.html</field>
    <field name="keywords">Invoker</field>
    <field name="text">Invoker is an abstract class to execute analysis defined by one or more Processor objects</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Invoker::Invoker</field>
    <field name="args">(const ShPtr&lt; Processor &gt; &amp;proc)</field>
    <field name="url">classInvoker.html#a155c803d4e88b7541fb5a281d3c52bba</field>
    <field name="keywords">Invoker Invoker::Invoker Invoker Invoker Invoker::Invoker Invoker</field>
    <field name="text">Constructor of Invoker class which uses one Processor object proc Shared pointer to a Processor object This argument is used for initializing processors This constructor is thread-unsafe because it accesses its members thread-globally Ensure this constructor is not called in a multithreading context Please be careful that constructors of subclasses of this class are also thread-unsafe Constructor of Invoker class which uses one Processor object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Invoker::Invoker</field>
    <field name="args">(const Vec&lt; ShPtr&lt; Processor &gt;&gt; &amp;procs)</field>
    <field name="url">classInvoker.html#ad63da9c120d3efa6e2827f75a1e17caf</field>
    <field name="keywords">Invoker Invoker::Invoker Invoker Invoker Invoker::Invoker Invoker</field>
    <field name="text">Constructor of Invoker class which uses multiple Processor objects procs Vec of shared pointers to a Processor object This argument is assigned to processors This constructor is thread-unsafe because it accesses its members thread-globally Ensure this constructor is not called in a multithreading context Please be careful that constructors of subclasses of this class are also thread-unsafe Constructor of Invoker class which uses multiple Processor objects</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Invoker::execute</field>
    <field name="args">()</field>
    <field name="url">classInvoker.html#a72e473312201d41ea0711cea5346476c</field>
    <field name="keywords">execute Invoker::execute Invoker execute Invoker::execute Invoker</field>
    <field name="text">Execute analysis defined by elements of processors None First this method calls Processor::startup of each object in processors Next this method calls Processor::prepare of each object in processors and then calls execute_impl where computationally expensive calculations are conducted Finally this method calls Processor::finish of each object in processors Execute analysis defined by elements of processors</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Invoker::execute_impl</field>
    <field name="args">()=0</field>
    <field name="url">classInvoker.html#a9a45f01fd7b3dae7a54e0a0fff94dff5</field>
    <field name="keywords">execute_impl Invoker::execute_impl Invoker</field>
    <field name="text">Implementation how to execute a computationally expensive part of analysis None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Invoker::processors</field>
    <field name="url">classInvoker.html#aa45c265edef94fc17cdde9d4a356d4a8</field>
    <field name="keywords">processors Invoker::processors Invoker processors Invoker::processors Invoker</field>
    <field name="text">Processor objects to be executed This member can be set only in the constructor Processor objects to be executed</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">InvOMP</field>
    <field name="url">classInvOMP.html</field>
    <field name="keywords">InvOMP</field>
    <field name="text">InvOMP is an Invoker s subclass using OpenMP to execute a computationally expensive part of analysis This class executes a computationally expensive calculation such as an update process defined by Generator::update_chain or analytical computations conducted in Processor::run_impl under multithread environment using OpenMP An object of this class use all threads if the OMP_NUM_THREADS environment variable is not set Please be careful when you modify any member of any object in a multithreading context!! About usage in Python please see src/pybind/invokers/py_inv_omp.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">InvOMP::Invoker</field>
    <field name="args">(const ShPtr&lt; Processor &gt; &amp;proc)</field>
    <field name="url">classInvOMP.html#a155c803d4e88b7541fb5a281d3c52bba</field>
    <field name="keywords">Invoker InvOMP::Invoker InvOMP</field>
    <field name="text">Constructor of InvOMP class inherited</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">InvOMP::Invoker</field>
    <field name="args">(const Vec&lt; ShPtr&lt; Processor &gt;&gt; &amp;procs)</field>
    <field name="url">classInvOMP.html#ad63da9c120d3efa6e2827f75a1e17caf</field>
    <field name="keywords">Invoker InvOMP::Invoker InvOMP</field>
    <field name="text">Constructor of InvOMP class inherited</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">InvOMP::execute_impl</field>
    <field name="args">() override</field>
    <field name="url">classInvOMP.html#a6d30ee44e69355e633855773a4d8cfef</field>
    <field name="keywords">execute_impl InvOMP::execute_impl InvOMP</field>
    <field name="text">Implementation how to execute a computationally expensive part of analysis None This method calls Processor::run in parallel Note that exceptions runtime errors thrown inside the parallel scope must be catched in the same scope Since error messages thrown in the parallel scope are assigned to a thread-global variable older error messages are overwritten by newer one thrown in another thread</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Processor</field>
    <field name="url">classProcessor.html</field>
    <field name="keywords">Processor</field>
    <field name="text">Processor is an abstract class to analyze data contained in one or more Generator objects</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Processor::Processor</field>
    <field name="args">()=default</field>
    <field name="url">classProcessor.html#a8cf3818c9a256c5acc8e7f21b8d76240</field>
    <field name="keywords">Processor Processor::Processor Processor Processor Processor::Processor Processor Processor Processor::Processor Processor Processor Processor::Processor Processor Processor Processor::Processor Processor Processor Processor::Processor Processor Processor Processor::Processor Processor Processor Processor::Processor Processor</field>
    <field name="text">Constructor of Processor class default Constructor of Processor class default Constructor of Processor class default Constructor of Processor class default Constructor of Processor class default Constructor of Processor class default Constructor of Processor class default Constructor of Processor class default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Processor::prepare</field>
    <field name="args">()</field>
    <field name="url">classProcessor.html#ae402da6f2bad22f074987a9d15fffc73</field>
    <field name="keywords">prepare Processor::prepare Processor</field>
    <field name="text">Prepare analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Processor::finish</field>
    <field name="args">()</field>
    <field name="url">classProcessor.html#a3731212e329a563ee79f1bd2e7c0a512</field>
    <field name="keywords">finish Processor::finish Processor finish Processor::finish Processor finish Processor::finish Processor</field>
    <field name="text">Finish analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method Finish analysis Finish analysis</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Processor::run</field>
    <field name="args">()</field>
    <field name="url">classProcessor.html#a929cbeccc7a4120da4a58ef7f7a609b1</field>
    <field name="keywords">run Processor::run Processor run Processor::run Processor run Processor::run Processor run Processor::run Processor run Processor::run Processor run Processor::run Processor run Processor::run Processor run Processor::run Processor</field>
    <field name="text">Run analysis using i th Generator object in generators where i i_generator Boolean whether all Generator objects in generators are used for analysis conducted by this object First this method copies i_generator as an index in generators for a Generator object to be analyzed This method then calls Generator::hello that is executes update processes associated with the Generator object and calls run_impl taking the copied index and finally calls Generator::goodbye that is clears Element::data if it is no longer to be used Run analysis using i th Generator object in generators where i i_generator Run analysis using i th Generator object in generators where i i_generator Run analysis using i th Generator object in generators where i i_generator Run analysis using i th Generator object in generators where i i_generator Run analysis using i th Generator object in generators where i i_generator Run analysis using i th Generator object in generators where i i_generator Run analysis using i th Generator object in generators where i i_generator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Processor::startup</field>
    <field name="args">()</field>
    <field name="url">classProcessor.html#a74fe912a6d9216d9b531ff58491889a9</field>
    <field name="keywords">startup Processor::startup Processor startup Processor::startup Processor startup Processor::startup Processor startup Processor::startup Processor startup Processor::startup Processor startup Processor::startup Processor startup Processor::startup Processor startup Processor::startup Processor</field>
    <field name="text">Startup this Processor object None This method re sets i_generator to 0 and then calls Generator::appoint of Generator objects in generators Startup this Processor object Startup this Processor object Startup this Processor object Startup this Processor object Startup this Processor object Startup this Processor object Startup this Processor object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Processor::run_impl</field>
    <field name="args">(const int index)=0</field>
    <field name="url">classProcessor.html#a46c873071eb6309273eb330b6b837a40</field>
    <field name="keywords">run_impl Processor::run_impl Processor</field>
    <field name="text">Implementation of analysis using an element of generators index Index in generators for a Generator object to be analyzed None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Processor::register_generator</field>
    <field name="args">(const ShPtr&lt; GEN &gt; &amp;gen)</field>
    <field name="url">classProcessor.html#a62bfda67b126ce2ab18014037aec5c0b</field>
    <field name="keywords">register_generator Processor::register_generator Processor register_generator Processor::register_generator Processor register_generator Processor::register_generator Processor register_generator Processor::register_generator Processor register_generator Processor::register_generator Processor register_generator Processor::register_generator Processor register_generator Processor::register_generator Processor register_generator Processor::register_generator Processor</field>
    <field name="text">Store an object of Element GenDict or GenList class in generators gen Shared pointer to an object of Element GenDict or GenList class This pointer is up-casted to a shared pointer of Generator class when being stored in generators None Note that this method is thread-unsafe because it accesses its members thread-globally It is recommended to call this method only from constructors of subclasses of this class Please ensure that these constructors are used outside a multithreading context Store an object of Element GenDict or GenList class in generators Store an object of Element GenDict or GenList class in generators Store an object of Element GenDict or GenList class in generators Store an object of Element GenDict or GenList class in generators Store an object of Element GenDict or GenList class in generators Store an object of Element GenDict or GenList class in generators Store an object of Element GenDict or GenList class in generators</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Processor::register_generators</field>
    <field name="args">(const Vec&lt; ShPtr&lt; GEN &gt;&gt; &amp;gens)</field>
    <field name="url">classProcessor.html#abcf04231ed598d17e888eaf3216c9350</field>
    <field name="keywords">register_generators Processor::register_generators Processor register_generators Processor::register_generators Processor register_generators Processor::register_generators Processor register_generators Processor::register_generators Processor register_generators Processor::register_generators Processor register_generators Processor::register_generators Processor register_generators Processor::register_generators Processor register_generators Processor::register_generators Processor</field>
    <field name="text">Store objects of Element GenDict or GenList class in generators gens Vec of shared pointers to objects of Element GenDict or GenList class These pointers are up-casted to shared pointers of Generator class when being stored in generators None Note that this method is thread-unsafe because it accesses its members thread-globally It is recommended to call this method only from constructors of subclasses of this class Please ensure that these constructors are used outside a multithreading context Store objects of Element GenDict or GenList class in generators Store objects of Element GenDict or GenList class in generators Store objects of Element GenDict or GenList class in generators Store objects of Element GenDict or GenList class in generators Store objects of Element GenDict or GenList class in generators Store objects of Element GenDict or GenList class in generators Store objects of Element GenDict or GenList class in generators</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Processor::n_generators</field>
    <field name="url">classProcessor.html#a8eb44a97cb6b609d3816b43a4c39e9d1</field>
    <field name="keywords">n_generators Processor::n_generators Processor n_generators Processor::n_generators Processor n_generators Processor::n_generators Processor n_generators Processor::n_generators Processor n_generators Processor::n_generators Processor n_generators Processor::n_generators Processor n_generators Processor::n_generators Processor n_generators Processor::n_generators Processor</field>
    <field name="text">Length of generators For a dynamics simulation a length of generators is equal to a length of trajectory of the simulation Length of generators Length of generators Length of generators Length of generators Length of generators Length of generators Length of generators</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Processor::generators</field>
    <field name="url">classProcessor.html#a4ba2563ea3dd3e700e4a9e1e6cee524c</field>
    <field name="keywords">generators Processor::generators Processor generators Processor::generators Processor generators Processor::generators Processor generators Processor::generators Processor generators Processor::generators Processor generators Processor::generators Processor generators Processor::generators Processor generators Processor::generators Processor</field>
    <field name="text">Generators objects to be used for analysis This member can be set only by register_generator or register_generators Generators objects to be used for analysis Generators objects to be used for analysis Generators objects to be used for analysis Generators objects to be used for analysis Generators objects to be used for analysis Generators objects to be used for analysis Generators objects to be used for analysis</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Processor::i_generator</field>
    <field name="url">classProcessor.html#a91f79c0fff7211d2979a8bb3da54788a</field>
    <field name="keywords">i_generator Processor::i_generator Processor</field>
    <field name="text">Index in generators for a Generator object currently conducting analysis This member is set to 0 in startup and updated in run Both the modifications are thread-safe</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ProData</field>
    <field name="url">classProData.html</field>
    <field name="keywords">ProData</field>
    <field name="text">ProData copies Element::data from Element objects in generators An object of this class makes a list of Json objects by copying all or some properties of Element objects stored in generators About usage in Python please see src/pybind/processors/py_pro_data.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProData::ProData</field>
    <field name="args">(const ElPtr &amp;elem)</field>
    <field name="url">classProData.html#afcff6bc44862d6f5a42877d1623606b2</field>
    <field name="keywords">ProData ProData::ProData ProData</field>
    <field name="text">Constructor of ProData class for one Element object elem Shared pointer to an Element object This argument is registered with generators by register_generator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProData::ProData</field>
    <field name="args">(const Vec&lt; ElPtr &gt; &amp;elems)</field>
    <field name="url">classProData.html#aea831016a9ba366a8e352a19f0808e65</field>
    <field name="keywords">ProData ProData::ProData ProData</field>
    <field name="text">Constructor of ProData class for a trajectory of Element objects elems Vec of Shared pointers to Element objects This argument is registered with generators by register_generators</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProData::prepare</field>
    <field name="args">() override</field>
    <field name="url">classProData.html#ad9e7c6519093995de3132d4bca7e7b1f</field>
    <field name="keywords">prepare ProData::prepare ProData</field>
    <field name="text">Clear and resize results None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProData::select</field>
    <field name="args">(const py::args &amp;args)</field>
    <field name="url">classProData.html#a15154c6692dda916207fa21316794474</field>
    <field name="keywords">select ProData::select ProData</field>
    <field name="text">Specify string keys for properties to be copied args An ordered list of string keys in Python This argument is converted to be stored as selected_keys None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProData::get_results</field>
    <field name="args">()</field>
    <field name="url">classProData.html#a1451afb048021490fedb426701485eae</field>
    <field name="keywords">get_results ProData::get_results ProData</field>
    <field name="text">Get results A private member of this class results</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProData::run_impl</field>
    <field name="args">(const int index) override</field>
    <field name="url">classProData.html#aaf9fee230986f25cb6fe1100f9f8a3e2</field>
    <field name="keywords">run_impl ProData::run_impl ProData</field>
    <field name="text">Implementation of analysis using an element of generators index Index in generators for a Generator object to be analyzed None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ProData::selected_keys</field>
    <field name="url">classProData.html#a4fef67f454d09a9a5ce89f069dd6d0a3</field>
    <field name="keywords">selected_keys ProData::selected_keys ProData</field>
    <field name="text">List of string keys for properties to be copied If this member is empty all properties of Element objects are copied</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">ProData::results</field>
    <field name="url">classProData.html#a63c6941d4165d627e28f899d94a7225a</field>
    <field name="keywords">results ProData::results ProData</field>
    <field name="text">List in which Json objects consisting of copied properties are stored Index in this member corresponds that in generators</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ProDistanceInMolecule</field>
    <field name="url">classProDistanceInMolecule.html</field>
    <field name="keywords">ProDistanceInMolecule</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProDistanceInMolecule::prepare</field>
    <field name="args">() override</field>
    <field name="url">classProDistanceInMolecule.html#a49ee325e78c914b941508c9052e53d42</field>
    <field name="keywords">prepare ProDistanceInMolecule::prepare ProDistanceInMolecule</field>
    <field name="text">Prepare analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProDistanceInMolecule::finish</field>
    <field name="args">() override</field>
    <field name="url">classProDistanceInMolecule.html#a4a9f2ed013fa811cc433090aaa989b54</field>
    <field name="keywords">finish ProDistanceInMolecule::finish ProDistanceInMolecule</field>
    <field name="text">Finish analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProDistanceInMolecule::run_impl</field>
    <field name="args">(const int index) override</field>
    <field name="url">classProDistanceInMolecule.html#a57443f2cc857b09d3bca11d4e9122de1</field>
    <field name="keywords">run_impl ProDistanceInMolecule::run_impl ProDistanceInMolecule</field>
    <field name="text">Implementation of analysis using an element of generators index Index in generators for a Generator object to be analyzed None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ProMeanSquareDisplacement</field>
    <field name="url">classProMeanSquareDisplacement.html</field>
    <field name="keywords">ProMeanSquareDisplacement</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProMeanSquareDisplacement::prepare</field>
    <field name="args">() override</field>
    <field name="url">classProMeanSquareDisplacement.html#a712c0f5baedaaf562fdb16d5645837d5</field>
    <field name="keywords">prepare ProMeanSquareDisplacement::prepare ProMeanSquareDisplacement</field>
    <field name="text">Prepare analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProMeanSquareDisplacement::finish</field>
    <field name="args">() override</field>
    <field name="url">classProMeanSquareDisplacement.html#a5d6b2865d9a2960bc5aa0771c5a17e4f</field>
    <field name="keywords">finish ProMeanSquareDisplacement::finish ProMeanSquareDisplacement</field>
    <field name="text">Finish analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProMeanSquareDisplacement::run_impl</field>
    <field name="args">(const int index) override</field>
    <field name="url">classProMeanSquareDisplacement.html#aa92be1431f803b85b2c89a34b69528d2</field>
    <field name="keywords">run_impl ProMeanSquareDisplacement::run_impl ProMeanSquareDisplacement</field>
    <field name="text">Implementation of analysis using an element of generators index Index in generators for a Generator object to be analyzed None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ProRadialDistributionFunction</field>
    <field name="url">classProRadialDistributionFunction.html</field>
    <field name="keywords">ProRadialDistributionFunction</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProRadialDistributionFunction::prepare</field>
    <field name="args">() override</field>
    <field name="url">classProRadialDistributionFunction.html#a7368a271b187a98b4285a1b5a5915ea5</field>
    <field name="keywords">prepare ProRadialDistributionFunction::prepare ProRadialDistributionFunction</field>
    <field name="text">Prepare analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProRadialDistributionFunction::finish</field>
    <field name="args">() override</field>
    <field name="url">classProRadialDistributionFunction.html#af96964b660a1b590ba81c5e65b688f83</field>
    <field name="keywords">finish ProRadialDistributionFunction::finish ProRadialDistributionFunction</field>
    <field name="text">Finish analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProRadialDistributionFunction::run_impl</field>
    <field name="args">(const int index) override</field>
    <field name="url">classProRadialDistributionFunction.html#ab57365923a1645429f9c471df2f84c84</field>
    <field name="keywords">run_impl ProRadialDistributionFunction::run_impl ProRadialDistributionFunction</field>
    <field name="text">Implementation of analysis using an element of generators index Index in generators for a Generator object to be analyzed None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ProRadialDistributionFunctionWithDeformation</field>
    <field name="url">classProRadialDistributionFunctionWithDeformation.html</field>
    <field name="keywords">ProRadialDistributionFunctionWithDeformation</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProRadialDistributionFunctionWithDeformation::prepare</field>
    <field name="args">() override</field>
    <field name="url">classProRadialDistributionFunctionWithDeformation.html#a331166aa3f9c52ec358e0147c09cc4dd</field>
    <field name="keywords">prepare ProRadialDistributionFunctionWithDeformation::prepare ProRadialDistributionFunctionWithDeformation</field>
    <field name="text">Prepare analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProRadialDistributionFunctionWithDeformation::finish</field>
    <field name="args">() override</field>
    <field name="url">classProRadialDistributionFunctionWithDeformation.html#a8569ffa1250a7c4f5a948ab6c99af7c9</field>
    <field name="keywords">finish ProRadialDistributionFunctionWithDeformation::finish ProRadialDistributionFunctionWithDeformation</field>
    <field name="text">Finish analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProRadialDistributionFunctionWithDeformation::run_impl</field>
    <field name="args">(const int index) override</field>
    <field name="url">classProRadialDistributionFunctionWithDeformation.html#a30f40581903736b31e5d242ae499c32f</field>
    <field name="keywords">run_impl ProRadialDistributionFunctionWithDeformation::run_impl ProRadialDistributionFunctionWithDeformation</field>
    <field name="text">Implementation of analysis using an element of generators index Index in generators for a Generator object to be analyzed None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ProThicknessProfile</field>
    <field name="url">classProThicknessProfile.html</field>
    <field name="keywords">ProThicknessProfile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProThicknessProfile::prepare</field>
    <field name="args">() override</field>
    <field name="url">classProThicknessProfile.html#ac5bcd2d7098696d1aea0a24f3b6410a5</field>
    <field name="keywords">prepare ProThicknessProfile::prepare ProThicknessProfile</field>
    <field name="text">Prepare analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProThicknessProfile::run_impl</field>
    <field name="args">(const int index) override</field>
    <field name="url">classProThicknessProfile.html#a3d541569b2b4a1d102737cef44c3357d</field>
    <field name="keywords">run_impl ProThicknessProfile::run_impl ProThicknessProfile</field>
    <field name="text">Implementation of analysis using an element of generators index Index in generators for a Generator object to be analyzed None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ProValueArray</field>
    <field name="url">classProValueArray.html</field>
    <field name="keywords">ProValueArray</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProValueArray::prepare</field>
    <field name="args">() override</field>
    <field name="url">classProValueArray.html#ae1d28ebe663aae763fd2f4b2cf02e9f8</field>
    <field name="keywords">prepare ProValueArray::prepare ProValueArray</field>
    <field name="text">Prepare analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProValueArray::finish</field>
    <field name="args">() override</field>
    <field name="url">classProValueArray.html#a2e139ceae6529456c1f0d6587192edc9</field>
    <field name="keywords">finish ProValueArray::finish ProValueArray</field>
    <field name="text">Finish analysis None This method is called in Invoker::execute Please see the subclasses for more details Note that some subclasses do nothing by this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">ProValueArray::run_impl</field>
    <field name="args">(const int index) override</field>
    <field name="url">classProValueArray.html#a5d8cfc64225015a7dd8b244e66bf0c3f</field>
    <field name="keywords">run_impl ProValueArray::run_impl ProValueArray</field>
    <field name="text">Implementation of analysis using an element of generators index Index in generators for a Generator object to be analyzed None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">PyElement</field>
    <field name="url">classPyElement.html</field>
    <field name="keywords">PyElement</field>
    <field name="text">Trampoline class to bind Element class to Python For more details please see pybind11 documentation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PyElement::get_element</field>
    <field name="args">(const Json &amp;name) override</field>
    <field name="url">classPyElement.html#a249fb6a35941b5fb0cc129c33a5574eb</field>
    <field name="keywords">get_element PyElement::get_element PyElement</field>
    <field name="text">Get this object as a shared pointer of Element class name Json default is nullptr Shared pointer to this Element object One needs to get as Element when using this data The argument name must be left as default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PyElement::get_generator</field>
    <field name="args">(const Json &amp;name) override</field>
    <field name="url">classPyElement.html#a27c414aa8d4316702b812b0d624714da</field>
    <field name="keywords">get_generator PyElement::get_generator PyElement</field>
    <field name="text">Get this object as a shared pointer of Generator class name Json default is nullptr Shared pointer to this object up-casted to Generator One needs to get as Generator when storing this object The argument name must be left as default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">PyElement::Element</field>
    <field name="args">()</field>
    <field name="url">classPyElement.html#ab0d0e20be9a36ae676202db753faeec9</field>
    <field name="keywords">Element PyElement::Element PyElement</field>
    <field name="text">Constructor of Element class This constructor is thread-unsafe because it accesses its members thread-globally Ensure this constructor is not called in a multithreading context</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">PyInvoker</field>
    <field name="url">classPyInvoker.html</field>
    <field name="keywords">PyInvoker</field>
    <field name="text">Trampoline class to bind Invoker class and its subclasses to Python For more details please see pybind11 documentation</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">PyProcessor</field>
    <field name="url">classPyProcessor.html</field>
    <field name="keywords">PyProcessor</field>
    <field name="text">Trampoline class to bind Processor class and its subclasses to Python For more details please see pybind11 documentation</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">PyUpdater</field>
    <field name="url">classPyUpdater.html</field>
    <field name="keywords">PyUpdater</field>
    <field name="text">Trampoline class to bind Updater class and its subclasses to Python For more details please see pybind11 documentation</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">StaBeads</field>
    <field name="url">classStaBeads.html</field>
    <field name="keywords">StaBeads</field>
    <field name="text">StaBeads sets properties for beads using mapping coarse-graining scheme for each molecule An object of this class owns mapping(s) representing coarse-graining scheme(s) Each mapping describes how atoms in a molecule are allocated to beads Different mapping schemes are acceptable for different molecular types For each bead its type and weighting factors of atoms belonging to the bead can be set About usage in Python please see src/pybind/starters/py_sta_beads.h Key for property to be added id integer mol integer atom-ids array of integers Key for property to be added optional type integer atom-weights array of floats Key for required property in ext_generator atom-ids array of integers</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaBeads::StaBeads</field>
    <field name="args">(const ElPtr &amp;el_mols, const Vec&lt; Json &gt; &amp;scheme)</field>
    <field name="url">classStaBeads.html#af07217a64532ce39d34e8ef11c5cd477</field>
    <field name="keywords">StaBeads StaBeads::StaBeads StaBeads</field>
    <field name="text">Constructor of StaBeads class for one molecular type el_mols Shared pointer to a molecular Element object consisting of a bead Element object where the constructed object is appended to This argument is assigned to ext_generator scheme Vec of Json objects For more details about contents of each Json object please see the explanation of mol_type_to_abst_beads This argument is stored in mol_type_to_abst_beads as a coarse-graining scheme for molecular type 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaBeads::StaBeads</field>
    <field name="args">(const ElPtr &amp;el_mols, const Map&lt; int, Vec&lt; Json &gt;&gt; &amp;schemes)</field>
    <field name="url">classStaBeads.html#a546a8589eeed9220c80e6ada57a156fd</field>
    <field name="keywords">StaBeads StaBeads::StaBeads StaBeads</field>
    <field name="text">Constructor of StaBeads class for multiple molecular types el_mols Shared pointer to a molecular Element object consisting of a bead Element object where the constructed object is appended to This argument is assigned to ext_generator schemes Map from molecular type to Vec of Json objects For more details about contents of each Json object please see the explanation of mol_type_to_abst_beads This argument is assigned to mol_type_to_abst_beads</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Starter::compute</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys, const int dataid) override</field>
    <field name="url">classStarter.html#a5e1cc4f19ad4d82b765b48c5aa8eb22a</field>
    <field name="keywords">compute Starter::compute Starter compute Starter::compute Starter compute Starter::compute Starter compute Starter::compute Starter compute Starter::compute Starter compute Starter::compute Starter compute Starter::compute Starter</field>
    <field name="text">Compute or parse properties and set them to Element::data given as a mutable reference Compute or parse properties and set them to Element::data given as a mutable reference Compute or parse properties and set them to Element::data given as a mutable reference Compute or parse properties and set them to Element::data given as a mutable reference Compute or parse properties and set them to Element::data given as a mutable reference Compute or parse properties and set them to Element::data given as a mutable reference Compute or parse properties and set them to Element::data given as a mutable reference data Mutable reference to Element::data where computed properties are set to datakeys Mutable reference to Element::datakeys where keys for computed properties are set to dataid Constant integer copied from Element::dataid None This method checks if dataid is in dataid_blacklist If it is not in the blacklist this method passes data and datakeys to Starter::compute_impl Note that actual computation and setting of properties is conducted by Starter::compute_impl orveridden in subclasses of this class In addition this method sorts elements of the data by id property if the data is an array and id property is set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Starter::Updater</field>
    <field name="args">()</field>
    <field name="url">classStarter.html#ae5e87ea9ea0f6f31de04f93cd1819549</field>
    <field name="keywords">Updater Starter::Updater Starter Updater Starter::Updater Starter Updater Starter::Updater Starter Updater Starter::Updater Starter Updater Starter::Updater Starter Updater Starter::Updater Starter Updater Starter::Updater Starter Updater Starter::Updater Starter</field>
    <field name="text">Constructor of Starter class inherited Constructor of Starter class inherited Constructor of Starter class inherited Constructor of Starter class inherited Constructor of Starter class inherited Constructor of Starter class inherited Constructor of Starter class inherited Constructor of Starter class inherited</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaBeads::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classStaBeads.html#a28dd7a99528b0c892dc3ab85b131ed85</field>
    <field name="keywords">compute_impl StaBeads::compute_impl StaBeads</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaBeads::check_mol_type_to_abst_beads</field>
    <field name="args">()</field>
    <field name="url">classStaBeads.html#a4234e0f85caf2a8987d8fb98f0d6ec87</field>
    <field name="keywords">check_mol_type_to_abst_beads StaBeads::check_mol_type_to_abst_beads StaBeads</field>
    <field name="text">Check if mol_type_to_abst_beads correctly describes coarse-grain mapping schemes A pair of booleans the first is whether type exists or not the second is whether weights exists or not Note that if at least one of Json objects in mol_type_to_abst_beads has type or weights property all the other objects must have that property</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">StaBeads::mol_type_to_abst_beads</field>
    <field name="url">classStaBeads.html#a8d8d3bb67d63dfb94fbac254c1291309</field>
    <field name="keywords">mol_type_to_abst_beads StaBeads::mol_type_to_abst_beads StaBeads</field>
    <field name="text">Coarse-grain mapping schemes for each molecular type Description of coarse-graining is stored as a map dictionary from molecular type to vector list of Json objects Each Json object corresponds to each bead in a molecule of that type and contains three items indices-in-mol is an array of zero-based index of atoms in the molecule type is type of the bead and weights is an array of floats for weighting factors of atoms The last two items are optional Length of the two arrays indices-in-mol and weights should be the same with the number of atoms belonging to the bead</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">StaCopy</field>
    <field name="url">classStaCopy.html</field>
    <field name="keywords">StaCopy</field>
    <field name="text">StaCopy copies Element::data of an existing Element object and sets it to a new Element object An object of this class owns an existing Element object as ext_generator and copies Element::data and Element::datakeys of the existing object and then sets the copies to a new Element object About usage in Python please see src/pybind/starters/py_sta_copy.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaCopy::StaCopy</field>
    <field name="args">(const ElPtr &amp;elem)</field>
    <field name="url">classStaCopy.html#a17757d5366c3e1d57b1a05fbb01125d3</field>
    <field name="keywords">StaCopy StaCopy::StaCopy StaCopy</field>
    <field name="text">Constructor of StaCopy class elem Shared pointer to an Element object to be copied This argument is assigned to ext_generator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaCopy::compute</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys, const int dataid) override</field>
    <field name="url">classStaCopy.html#a50e7868dc364e6a21b9c6ab4604deee5</field>
    <field name="keywords">compute StaCopy::compute StaCopy</field>
    <field name="text">Compute or parse properties and set them to Element::data given as a mutable reference data Mutable reference to Element::data where computed properties are set to datakeys Mutable reference to Element::datakeys where keys for computed properties are set to dataid Constant integer copied from Element::dataid None Unlike other subclasses of Stater class StaCopy overrides this method to skip sorting by id property</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaCopy::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classStaCopy.html#ae962c8d37a62afa08d961a48c25dede7</field>
    <field name="keywords">compute_impl StaCopy::compute_impl StaCopy</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">StaCustom</field>
    <field name="url">classStaCustom.html</field>
    <field name="keywords">StaCustom</field>
    <field name="text">StaCustom sets an user-defined Json object to a new Element object as its Element::data An object of this class takes an user-defined Json object to be set as Element::data About usage in Python please see src/pybind/starters/py_sta_custom.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaCustom::StaCustom</field>
    <field name="args">(const Json &amp;json_)</field>
    <field name="url">classStaCustom.html#a8bf8a63ed5880ac4615f9cb5a3777c55</field>
    <field name="keywords">StaCustom StaCustom::StaCustom StaCustom</field>
    <field name="text">Constructor of StaCustom class json_ A Json object to be set as Element::data This argument is assigned to json</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaCustom::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classStaCustom.html#a1b63820efb40845049d87ed3e5e7caab</field>
    <field name="keywords">compute_impl StaCustom::compute_impl StaCustom</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">StaCustom::json</field>
    <field name="url">classStaCustom.html#a05118156c15d8863580048b867dd58b0</field>
    <field name="keywords">json StaCustom::json StaCustom</field>
    <field name="text">A Json object to be set as Element::data</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">StaDump</field>
    <field name="url">classStaDump.html</field>
    <field name="keywords">StaDump</field>
    <field name="text">StaDump is an abstract class whose subclasses read a Lammps dump file This class inherits Starter class This class is an abstract class and has a pure virtual function StaDump::compute_impl</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaDump::StaDump</field>
    <field name="args">(const Str &amp;filepath_, const int timestep_)</field>
    <field name="url">classStaDump.html#ac237195b46542e1db67eff0235832a8b</field>
    <field name="keywords">StaDump StaDump::StaDump StaDump StaDump StaDump::StaDump StaDump StaDump StaDump::StaDump StaDump</field>
    <field name="text">Constructor of StaDump class filepath_ A path to a Lammps dump file to be read This argument is assigned to filepath timestep_ A timestep of simulation to be read This argument is assigned to timestep Constructor of StaDump class Constructor of StaDump class</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">StaDump::timestep</field>
    <field name="url">classStaDump.html#ac6418b4fefd459b4846d8c3c0ae225b8</field>
    <field name="keywords">timestep StaDump::timestep StaDump timestep StaDump::timestep StaDump timestep StaDump::timestep StaDump</field>
    <field name="text">A timestep of simulation to be read In a Lammps dump file this value is printed below the line saying ITEM TIMESTEP This member is useful to read one timestep from a Lammps dump file containing multiple timesteps A timestep of simulation to be read A timestep of simulation to be read</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">StaDump::filepath</field>
    <field name="url">classStaDump.html#a17cb48666fa24479e4afbc8107164a80</field>
    <field name="keywords">filepath StaDump::filepath StaDump filepath StaDump::filepath StaDump filepath StaDump::filepath StaDump</field>
    <field name="text">A path to a Lammps dump file to be read A path to a Lammps dump file to be read A path to a Lammps dump file to be read</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">StaDumpAtoms</field>
    <field name="url">classStaDumpAtoms.html</field>
    <field name="keywords">StaDumpAtoms</field>
    <field name="text">StaDumpAtoms reads a Lammps dump file and sets properties for atoms An object of this class reads properties of atoms from a Lammps dump file specified by filepath Note that only properties at a time specified by timestep are read About usage in Python please see src/pybind/starters/py_sta_dump_atoms.h Keys to be set are names of dumped Lammps atom property In a Lammps dump file the names are printed in a line beginning with ITEM ATOMS</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaDumpAtoms::StaDump</field>
    <field name="args">(const Str &amp;filepath_, const int timestep_)</field>
    <field name="url">classStaDumpAtoms.html#ac237195b46542e1db67eff0235832a8b</field>
    <field name="keywords">StaDump StaDumpAtoms::StaDump StaDumpAtoms</field>
    <field name="text">Constructor of StaDumpAtoms class inherited</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaDumpAtoms::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classStaDumpAtoms.html#a258c7068bcc6b3d071f0acff027e2561</field>
    <field name="keywords">compute_impl StaDumpAtoms::compute_impl StaDumpAtoms</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaDumpAtoms::make_is_int_vector</field>
    <field name="args">(const Str &amp;line)</field>
    <field name="url">classStaDumpAtoms.html#a8a507beb5e12cb6e306f05e87f42e7bf</field>
    <field name="keywords">make_is_int_vector StaDumpAtoms::make_is_int_vector StaDumpAtoms</field>
    <field name="text">Make a list whether each value printed in a line of a Lammps dump file is an integer or not line The first line in a body of a Lammps dump file a line below the line beginning with ITEM ATOMS Vec of booleans whether each value in the line is an integer or not</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">StaDumpBox</field>
    <field name="url">classStaDumpBox.html</field>
    <field name="keywords">StaDumpBox</field>
    <field name="text">StaDumpBox reads a Lammps dump file and sets properties for simulation box An object of this class reads properties of simulation box from a Lammps dump file specified by filepath Note that only properties at a time specified by timestep are read About usage in Python please see src/pybind/starters/py_sta_dump_box.h Key for property to be added periodic_x boolean periodic_y boolean periodic_z boolean lo_x float lo_y float lo_z float hi_x float hi_y float hi_z float</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaDumpBox::StaDump</field>
    <field name="args">(const Str &amp;filepath_, const int timestep_)</field>
    <field name="url">classStaDumpBox.html#ac237195b46542e1db67eff0235832a8b</field>
    <field name="keywords">StaDump StaDumpBox::StaDump StaDumpBox</field>
    <field name="text">Constructor of StaDumpBox class inherited</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaDumpBox::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classStaDumpBox.html#af25a2a80d9607d892b78d78cd725692e</field>
    <field name="keywords">compute_impl StaDumpBox::compute_impl StaDumpBox</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">StaMolecules</field>
    <field name="url">classStaMolecules.html</field>
    <field name="keywords">StaMolecules</field>
    <field name="text">StaMolecules sets properties for molecules using atoms forming the molecules An object of this class owns an Element object for atoms forming molecules to be computed Note that if molecular types are required elsewhere one needs to add type property using an Adder object such as an AddMap object About usage in Python please see src/pybind/starters/py_sta_molecules.h Key for property to be added id integer atom-ids array of integers Key for required property in ext_generator id integer mol integer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaMolecules::StaMolecules</field>
    <field name="args">(const ElPtr &amp;el_atoms)</field>
    <field name="url">classStaMolecules.html#a9b83d7e7df5a1a364d784e395621dc40</field>
    <field name="keywords">StaMolecules StaMolecules::StaMolecules StaMolecules</field>
    <field name="text">Constructor of StaMolecules class el_atoms Shared pointer to an Element object for atoms forming molecules to be computed This argument is assigned to ext_generator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">StaMolecules::compute_impl</field>
    <field name="args">(Json &amp;data, DataKeys &amp;datakeys) override</field>
    <field name="url">classStaMolecules.html#a6e43cdfdce04105ab20a5f93584aabec</field>
    <field name="keywords">compute_impl StaMolecules::compute_impl StaMolecules</field>
    <field name="text">Implementation of computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to None I m sorry to say that source code is the best documentation for this method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Starter</field>
    <field name="url">classStarter.html</field>
    <field name="keywords">Starter</field>
    <field name="text">Starter sets some properties keys and values to an empty Element object This class inherits Updater class and overrides Updater::compute This class is an abstract class and has a pure virtual function Starter::compute_impl Name of subclass of this class should be prefixed by Sta Unlike Adder Starter accepts only empty Element::data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Starter::sort_by_id</field>
    <field name="args">(Json &amp;data)</field>
    <field name="url">classStarter.html#a112a95fc261365ba92609db3fa907939</field>
    <field name="keywords">sort_by_id Starter::sort_by_id Starter</field>
    <field name="text">Sort elements of a array Json object by its id property data Mutable reference to a Json object None</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Updater</field>
    <field name="url">classUpdater.html</field>
    <field name="keywords">Updater</field>
    <field name="text">Updater is an abstract class to update data held by an Element object This class is a superclass of the Starter Adder and Filter class An object of this class is append to an Element object by Element::append_updater and stored as UpdatePair where the first item is the Element object and the second item is the object of this class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Updater::compute</field>
    <field name="args">(Json &amp;, DataKeys &amp;, const int)=0</field>
    <field name="url">classUpdater.html#af16520931c56ec6b8af28cf13c174c57</field>
    <field name="keywords">compute Updater::compute Updater</field>
    <field name="text">Managing computation to update Element::data data Mutable reference to Element::data where computed properties are added to datakeys Mutable reference to Element::datakeys where keys for computed properties are added to dataid Constant integer copied from Element::dataid None This is a pure virtual function please see the subclasses for more details</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Updater::dataid_blacklist</field>
    <field name="url">classUpdater.html#a963bbb490a5f715e3330c508fe209deb</field>
    <field name="keywords">dataid_blacklist Updater::dataid_blacklist Updater</field>
    <field name="text">Set of Element::dataid updated by this Updater object If this Updater object is called from an Element object for the first time this object stores Element::dataid in dataid_blacklist and updates Element::data From the second time on this object can skip the updating computation</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">Updater::omp_lock</field>
    <field name="url">classUpdater.html#a74289331716430382f81370e9cb64c42</field>
    <field name="keywords">omp_lock Updater::omp_lock Updater</field>
    <field name="text">A variable used for OpenMP In this program dataid_blacklist is modified in a multithreading context To prevent dataid_blacklist from being modified from multiple threads at the same time this member must be locked in check_blacklist and remove_from_blacklist</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">pybind11::detail::type_caster&lt; Json &gt;</field>
    <field name="url">structpybind11_1_1detail_1_1type__caster_3_01Json_01_4.html</field>
    <field name="keywords">type_caster&lt; Json &gt;</field>
    <field name="text">A type caster of pybind11 for Json</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind11::detail::type_caster&lt; Json &gt;::load</field>
    <field name="args">(handle src, bool)</field>
    <field name="url">structpybind11_1_1detail_1_1type__caster_3_01Json_01_4.html#ac34d1e821aa93ab9a74e3303f714160b</field>
    <field name="keywords">load pybind11::detail::type_caster&lt; Json &gt;::load pybind11::detail::type_caster&lt; Json &gt;</field>
    <field name="text">Loading Json from Python and assigning it to C++ First a JSON-like object in Python complex of dict and list is dumped as a string by dumps attribute of Python s json module serialization Then the string is parsed by parse function of nlohmann/json and converted to a Json object Since this conversion process might take a long time using other containers is preferable if you can</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">pybind11::detail::type_caster&lt; Json &gt;::cast</field>
    <field name="args">(Json src, return_value_policy, handle)</field>
    <field name="url">structpybind11_1_1detail_1_1type__caster_3_01Json_01_4.html#a82b29161b566ed468e576e0f894ad206</field>
    <field name="keywords">cast pybind11::detail::type_caster&lt; Json &gt;::cast pybind11::detail::type_caster&lt; Json &gt;</field>
    <field name="text">Casting Json from C++ to Python First a Json object is serialized to a string by its dump method Then the string is loaded by loads attribute of Python s json module and released as a complex of dictionary and list Since this conversion process might take a long time using other containers is preferable if you can</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">utils</field>
    <field name="url">namespaceutils.html</field>
    <field name="keywords">utils</field>
    <field name="text">Namespace for utility functions</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">ppap4lmp documentation This project is named ppap4lmp which stands for PostProcess and Analysis Program for LAMMPS GitHub repository is here Via Conda For more details please see GitHub repository Implemented by C++ Used from Python Data stored in Json structure Extensible without editing existing codes Takayuki Kobayashi 2018/07/01 Python-side methods of Element Name C++-side Description Argument Return append_updater Element::append_updater Append an object of Adder s or Filter s subclass to this Element object upd An object of Adder s or Filter s subclass This Element object get_data Element::get_data_py Get Element::data of this object as a complex of dict and list None JSON-like object consisting of dict and list get_keys Element::get_keys_py Get Element::datakeys of this object as a set of strings None Set of strings get_1d_int Element::get_1d_int_py Get values of an integer property contained in Element::data of this object as an one-dimensional Numpy-Array key A string key specifying a property to be extracted One-dimensional Numpy-Array whose elements are integers get_1d_float Element::get_1d_float_py Get values of a float property contained in Element::data of this object as an one-dimensional Numpy-Array key A string key specifying a property to be extracted One-dimensional Numpy-Array whose elements are floats get_2d_int Element::get_2d_int_py Get values of multiple integer properties contained in Element::data of this object as a two-dimensional Numpy-Array A variable number of string keys specifying properties to be extracted Two-dimensional Numpy-Array whose elements are integers get_2d_float Element::get_2d_float_py Get values of multiple float properties contained in Element::data of this object as a two-dimensional Numpy-Array A variable number of string keys specifying properties to be extracted Two-dimensional Numpy-Array whose elements are floats Python-side functions Name C++-side Description Argument Return create Lambda Factory function for Element class This function takes one argument an object of Starter s subclass such class is prefixed by Sta which adds some properties to empty Element::data of the created Element object upd An object of Starter s subclass An object of Element class Takayuki Kobayashi 2018/08/18 Python-side constructor of StaBeads Name C++-side Description Argument Return StaBeads StaBeads::StaBeads Constructor of StaBeads class for one molecular type el_mols A molecular Element object consisting of a bead Element object where the constructed object is appended to scheme List of dictionaries describing coarse-grain mapping scheme Each dictionary corresponds to each bead in a molecule and contains three items indices-in-mol is an array of zero-based index of atoms in a molecule type is type of the bead and weights is an array of floats for weighting factors of the atoms The last two items are optional Constructed StaBeads object StaBeads StaBeads::StaBeads Constructor of StaBeads class for multiple molecular types el_mols A molecular Element object consisting of a bead Element object where the constructed object is appended to schemes Dictionary from molecular type to list of dictionaries describing coarse-grain scheme for a molecule of that type Description of each list is the same as for the case of one molecular type Constructed StaBeads object Example of the constructor for beads consisting of five atoms in a molecule the molecule consists of four beads and all the beads are type 1 Example of the constructor some beads belong to molecules whose type is 1 and the others belong to molecules whose type is 2 The number of molecules is 100 molecules with odd id are type 1 and the others are type 2 All the beads for molecular type 1 consist of five atoms and their types are 1 All the beads for molecular type 2 consist of four atoms and their types are 2 Takayuki Kobayashi 2018/09/20 Python-side constructor of StaCopy Name C++-side Description Argument Return StaCopy StaCopy::StaCopy Constructor of StaCopy class elem An Element object to be copied Constructed StaCopy object Takayuki Kobayashi 2018/08/16 Python-side constructor of StaCustom Name C++-side Description Argument Return StaCustom StaCustom::StaCustom Constructor of StaCustom class json_ A JSON-like object complex of dict and list to be set as Element::data of a new Element object Constructed StaCustom object Takayuki Kobayashi 2018/06/29 Python-side constructor of StaDumpAtoms Name C++-side Description Argument Return StaDumpAtoms StaDumpAtoms::StaDump Constructor of StaDumpAtoms class filepath_ A string for path to a Lammps dump file timestep_ An integer specifying a timestep of simulation to be parsed Constructed StaDumpAtoms object Example of the constructor for a trajectory Takayuki Kobayashi 2018/06/29 Python-side constructor of StaDumpBox Name C++-side Description Argument Return StaDumpBox StaDumpBox::StaDump Constructor of StaDumpBox class filepath_ A string for path to a Lammps dump file timestep_ An integer specifying a timestep of simulation to be parsed Constructed StaDumpBox object Example of the constructor for a trajectory Takayuki Kobayashi 2018/07/07 Python-side constructor of StaMolecules Name C++-side Description Argument Return StaMolecules StaMolecules::StaMolecules Constructor of StaMolecules class el_atoms An Element object for atoms forming molecules to be computed Constructed StaMolecules object Example of the constructor for a trajectory of typed molecules The number of molecules is 100 molecules with odd id are type 1 and the others are type 2 Takayuki Kobayashi 2018/08/19 Python-side constructor of AddChildIDs Name C++-side Description Argument Return AddChildIDs AddChildIDs::AddChildIDs Constructor of AddChildIDs class elem Child object such as an Element object containing data for atoms child_name_ A string for naming the above child object key_for_parent_id_ A string for key in the child object corresponding to id property of parent object such as an Element object containing data for molecules Constructed AddChildIDs object which is appended to a parent object such as an Element object containing data for molecules Usage example of the constructor to add bead-ids property to an Element object for molecules Takayuki Kobayashi 2018/09/03 Python-side constructor of AddChildPositions Name C++-side Description Argument Return AddChildPositions AddChildPositions::AddChildPositions Constructor of AddChildPositions class elem Child object such as an Element object containing data for atoms child_name_ A string for naming the above child object Constructed AddChildPositions object which is appended to a parent object such as an Element object containing data for molecules Takayuki Kobayashi 2018/07/13 Python-side constructor of AddCoMPosition Name C++-side Description Argument Return AddCoMPosition AddCoMPosition::AddCoMPosition Constructor of AddCoMPosition class elem Child object such as an Element object containing data for atoms Constructed AddCoMPosition object which is appended to a parent object such as an Element object containing data for molecules Usage example of the constructor to add xu yu and zu property to an Element object for molecules Takayuki Kobayashi 2018/07/15 Python-side constructor of AddGyrationRadius Name C++-side Description Argument Return AddGyrationRadius AddGyrationRadius::Updater Constructor of AddGyrationRadius class None Constructed AddGyrationRadius object which is appended to an Element object such as one containing data for molecules Python-side methods of AddGyrationRadius Name C++-side Description Argument Return with_squared AddGyrationRadius::with_squared Enable to compute square of gyration radius Note that an average gyration radius should be computed by square rooting an average of squared gyration radius not averaging the gyration radius itself add_squared_ A boolean whether squared gyration radius is computed or not No argument leads to enabling the computation This AddGyrationRadius object without_sqrted AddGyrationRadius::without_sqrted Disable to compute gyration radius skipping root-squaring without_sqrted_ A boolean whether computing gyration radius is skipped or not No argument leads to skipping the computation This AddGyrationRadius object Usage example of the constructor and method to add square of gyration radius to an Element object for molecules Takayuki Kobayashi 2018/07/15 Python-side constructor of AddInertiaMoment Name C++-side Description Argument Return AddInertiaMoment AddInertiaMoment::AddInertiaMoment Constructor of AddInertiaMoment class elem Child object such as an Element object containing data for atoms Constructed AddInertiaMoment object which is appended to a parent object such as an Element object containing data for molecules Usage example of the constructor to add elements of inertia moment to an Element object for molecules Takayuki Kobayashi 2018/06/26 Python-side constructor of AddMap Name C++-side Description Argument Return AddMap AddMap::AddMap Constructor of AddMap class key_ref_ A string key for a reference property an existing property to be used as domain of mapping see also the 3rd argument key_new_ A string key for a new property to be added Values of the new property are determined by mapping see also the 3rd argument mapping_ Dictionary defining mapping from values of the reference property to values for the new property Keys of the dictionary corresponds to domain of the mapping and values of the dictionary corresponds to codomain of the mapping Note that the keys must cover all values of the reference property in an Element object where the constructed object is appended to Constructed AddMap object Usage example of the constructor for mapping from atomic-number to mass Python-side methods of AddMap Name C++-side Description Argument Return overwrite AddMap::overwrite Allow overwriting an existing property by a new property with the same name do_overwrite_ A boolean whether overwriting is allowed or not No argument leads to allowing overwriting This AddMap object Takayuki Kobayashi 2018/07/16 Python-side constructor of AddMolecularOrientation Name C++-side Description Argument Return AddMolecularOrientation AddMolecularOrientation::Updater Constructor of AddMolecularOrientation class None Constructed AddMolecularOrientation object Usage example of the constructor to add molecular orientation to an Element object for molecules Takayuki Kobayashi 2018/08/17 Python-side constructor of AddRename Name C++-side Description Argument Return AddRename AddRename::AddRename Constructor of AddRename class key_old_ A string key for an existing property to be renamed key_new_ A string key by which the old key for the existing property is renamed Constructed AddRename object Python-side methods of AddRename Name C++-side Description Argument Return overwrite AddRename::overwrite Allow overwriting an existing property by a renamed property another existing property with the same name do_overwrite_ A boolean whether overwriting is allowed or not No argument leads to allowing overwriting This AddRename object Takayuki Kobayashi 2018/08/19 Python-side constructor of AddSpecialBonds Name C++-side Description Argument Return AddSpecialBonds AddSpecialBonds::AddSpecialBonds Constructor of AddSpecialBonds class for one molecular type el_mols A molecular Element object consisting of an atomic or bead Element object where the constructed object is appended to scheme List of lists of zero-based index of atoms in a molecule For example i th atom has j th atom as one of the special bonds when i th list of the scheme contains j Constructed AddSpecialBonds object AddSpecialBonds AddSpecialBonds::AddSpecialBonds Constructor of AddSpecialBonds class for multiple molecular types el_mols A molecular Element object consisting of an atomic or bead Element object where the constructed object is appended to schemes Dictionary where the keys are molecular types and the values are lists of lists of zero-based index of atoms in a molecule Description of each list is the same as for the case of one molecular type Constructed AddSpecialBonds object Example of the constructor for molecules consisting of linearly connected four atoms Bond-length and bond-angle potentials are considered Example of the constructor for two types of molecule the first one consists of linearly connected four atoms and the second one consists of linearly connected five atoms Bond-length and bond-angle potentials are considered Takayuki Kobayashi 2018/07/07 Python-side constructor of AddWrappedPosition Name C++-side Description Argument Return AddWrappedPosition AddWrappedPosition::AddWrappedPosition Constructor of AddWrappedPosition class elem An Element object containing data for the simulation box Constructed AddWrappedPosition object Takayuki Kobayashi 2018/07/02 Python-side constructor of FilComparison Name C++-side Description Argument Return FilComparison FilComparison::FilComparison Constructor of FilComparison class for one criterion comparison_ A 3-elements tuple consisting of a string key and comparison operator and right side value of an inequality or equation used as a criterion Constructed FilComparison object FilComparison FilComparison::FilComparison Constructor of FilComparison class for multiple criteria comparisons_ List of 3-elements tuples Contents of each tuple is the same as for the case of one criterion Constructed FilComparison object Usage example of the constructor for a filter removing atoms whose xu property is less than 10.0 Usage example of the constructor for a filter removing atoms whose xu property is less than 10.0 or greater than 20.0 and whose charge property is not equal to Takayuki Kobayashi 2018/07/01 Python-side constructor of FilSet Name C++-side Description Argument Return FilSet FilSet::FilSet Constructor of FilSet class value_sets_ Dictionary from a string key for property to acceptable values of that property Constructed FilSet object Usage example of the constructor for a filter removing atoms whose type property is not 1 2 or 3 Usage example of the constructor for a filter removing atoms whose type property is not 1 2 or 3 and whose id property is not a multiple of 3 less than 1000 This project would not be possible without the following great open-source projects pybind11 nlohmann/json Eigen</field>
  </doc>
</add>
